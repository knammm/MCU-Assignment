
MCU_Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005138  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a8  08005244  08005244  00015244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080052ec  080052ec  000200b4  2**0
                  CONTENTS
  4 .ARM          00000000  080052ec  080052ec  000200b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080052ec  080052ec  000200b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080052ec  080052ec  000152ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080052f0  080052f0  000152f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b4  20000000  080052f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000274  200000b4  080053a8  000200b4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000328  080053a8  00020328  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001803c  00000000  00000000  000200dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002f89  00000000  00000000  00038119  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000db0  00000000  00000000  0003b0a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c70  00000000  00000000  0003be58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000198dc  00000000  00000000  0003cac8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012735  00000000  00000000  000563a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b4cd  00000000  00000000  00068ad9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f3fa6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003a70  00000000  00000000  000f3ffc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000b4 	.word	0x200000b4
 8000128:	00000000 	.word	0x00000000
 800012c:	0800522c 	.word	0x0800522c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000b8 	.word	0x200000b8
 8000148:	0800522c 	.word	0x0800522c

0800014c <fsm_automatic_run>:
 *      Author: olkmphy
 */

#include "fsm_automatic.h"

void fsm_automatic_run(){
 800014c:	b580      	push	{r7, lr}
 800014e:	b08e      	sub	sp, #56	; 0x38
 8000150:	af00      	add	r7, sp, #0
	char str[50];
	switch(status){
 8000152:	4bb6      	ldr	r3, [pc, #728]	; (800042c <fsm_automatic_run+0x2e0>)
 8000154:	681b      	ldr	r3, [r3, #0]
 8000156:	3b01      	subs	r3, #1
 8000158:	2b17      	cmp	r3, #23
 800015a:	f200 81e9 	bhi.w	8000530 <fsm_automatic_run+0x3e4>
 800015e:	a201      	add	r2, pc, #4	; (adr r2, 8000164 <fsm_automatic_run+0x18>)
 8000160:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000164:	080001c5 	.word	0x080001c5
 8000168:	08000531 	.word	0x08000531
 800016c:	08000531 	.word	0x08000531
 8000170:	08000531 	.word	0x08000531
 8000174:	08000531 	.word	0x08000531
 8000178:	08000531 	.word	0x08000531
 800017c:	08000531 	.word	0x08000531
 8000180:	08000531 	.word	0x08000531
 8000184:	08000531 	.word	0x08000531
 8000188:	08000531 	.word	0x08000531
 800018c:	08000531 	.word	0x08000531
 8000190:	08000531 	.word	0x08000531
 8000194:	08000531 	.word	0x08000531
 8000198:	08000531 	.word	0x08000531
 800019c:	08000531 	.word	0x08000531
 80001a0:	08000531 	.word	0x08000531
 80001a4:	08000531 	.word	0x08000531
 80001a8:	08000531 	.word	0x08000531
 80001ac:	08000531 	.word	0x08000531
 80001b0:	08000531 	.word	0x08000531
 80001b4:	080001e1 	.word	0x080001e1
 80001b8:	0800029b 	.word	0x0800029b
 80001bc:	08000371 	.word	0x08000371
 80001c0:	0800045d 	.word	0x0800045d
	case INIT:
		//TODO
		status = RED_GREEN;
 80001c4:	4b99      	ldr	r3, [pc, #612]	; (800042c <fsm_automatic_run+0x2e0>)
 80001c6:	2215      	movs	r2, #21
 80001c8:	601a      	str	r2, [r3, #0]
		setTimer(0, durationGREEN);
 80001ca:	4b99      	ldr	r3, [pc, #612]	; (8000430 <fsm_automatic_run+0x2e4>)
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	4619      	mov	r1, r3
 80001d0:	2000      	movs	r0, #0
 80001d2:	f001 fc1f 	bl	8001a14 <setTimer>
		setTimerSecond(1000);
 80001d6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80001da:	f001 fbff 	bl	80019dc <setTimerSecond>
		break;
 80001de:	e1b0      	b.n	8000542 <fsm_automatic_run+0x3f6>
	case RED_GREEN:
		//TODO
		Traffic_setColor(1, OFF_LED);
 80001e0:	2105      	movs	r1, #5
 80001e2:	2001      	movs	r0, #1
 80001e4:	f000 fe52 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, OFF_LED);
 80001e8:	2105      	movs	r1, #5
 80001ea:	2002      	movs	r0, #2
 80001ec:	f000 fe4e 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(1, AUTO_RED);
 80001f0:	2102      	movs	r1, #2
 80001f2:	2001      	movs	r0, #1
 80001f4:	f000 fe4a 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, AUTO_GREEN);
 80001f8:	2103      	movs	r1, #3
 80001fa:	2002      	movs	r0, #2
 80001fc:	f000 fe46 	bl	8000e8c <Traffic_setColor>
		if (timerSecond == 1){
 8000200:	4b8c      	ldr	r3, [pc, #560]	; (8000434 <fsm_automatic_run+0x2e8>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	2b01      	cmp	r3, #1
 8000206:	d139      	bne.n	800027c <fsm_automatic_run+0x130>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 8000208:	4b8b      	ldr	r3, [pc, #556]	; (8000438 <fsm_automatic_run+0x2ec>)
 800020a:	681a      	ldr	r2, [r3, #0]
 800020c:	1d3b      	adds	r3, r7, #4
 800020e:	498b      	ldr	r1, [pc, #556]	; (800043c <fsm_automatic_run+0x2f0>)
 8000210:	4618      	mov	r0, r3
 8000212:	f004 fbd1 	bl	80049b8 <siprintf>
 8000216:	4603      	mov	r3, r0
 8000218:	b29a      	uxth	r2, r3
 800021a:	1d39      	adds	r1, r7, #4
 800021c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000220:	4887      	ldr	r0, [pc, #540]	; (8000440 <fsm_automatic_run+0x2f4>)
 8000222:	f003 fdc3 	bl	8003dac <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 8000226:	4b87      	ldr	r3, [pc, #540]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000228:	681a      	ldr	r2, [r3, #0]
 800022a:	1d3b      	adds	r3, r7, #4
 800022c:	4986      	ldr	r1, [pc, #536]	; (8000448 <fsm_automatic_run+0x2fc>)
 800022e:	4618      	mov	r0, r3
 8000230:	f004 fbc2 	bl	80049b8 <siprintf>
 8000234:	4603      	mov	r3, r0
 8000236:	b29a      	uxth	r2, r3
 8000238:	1d39      	adds	r1, r7, #4
 800023a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800023e:	4880      	ldr	r0, [pc, #512]	; (8000440 <fsm_automatic_run+0x2f4>)
 8000240:	f003 fdb4 	bl	8003dac <HAL_UART_Transmit>
			setTimerSecond(1000);
 8000244:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000248:	f001 fbc8 	bl	80019dc <setTimerSecond>
			timerTraffic1--;
 800024c:	4b7a      	ldr	r3, [pc, #488]	; (8000438 <fsm_automatic_run+0x2ec>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	3b01      	subs	r3, #1
 8000252:	4a79      	ldr	r2, [pc, #484]	; (8000438 <fsm_automatic_run+0x2ec>)
 8000254:	6013      	str	r3, [r2, #0]
			timerTraffic2--;
 8000256:	4b7b      	ldr	r3, [pc, #492]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	3b01      	subs	r3, #1
 800025c:	4a79      	ldr	r2, [pc, #484]	; (8000444 <fsm_automatic_run+0x2f8>)
 800025e:	6013      	str	r3, [r2, #0]
			if (timerTraffic2 <= 0) timerTraffic2 = durationYELLOW / 1000;
 8000260:	4b78      	ldr	r3, [pc, #480]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	2b00      	cmp	r3, #0
 8000266:	dc09      	bgt.n	800027c <fsm_automatic_run+0x130>
 8000268:	4b78      	ldr	r3, [pc, #480]	; (800044c <fsm_automatic_run+0x300>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a78      	ldr	r2, [pc, #480]	; (8000450 <fsm_automatic_run+0x304>)
 800026e:	fb82 1203 	smull	r1, r2, r2, r3
 8000272:	1192      	asrs	r2, r2, #6
 8000274:	17db      	asrs	r3, r3, #31
 8000276:	1ad3      	subs	r3, r2, r3
 8000278:	4a72      	ldr	r2, [pc, #456]	; (8000444 <fsm_automatic_run+0x2f8>)
 800027a:	6013      	str	r3, [r2, #0]
		}
		// State update
		if (timerFlag[0] == 1){
 800027c:	4b75      	ldr	r3, [pc, #468]	; (8000454 <fsm_automatic_run+0x308>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	2b01      	cmp	r3, #1
 8000282:	f040 8157 	bne.w	8000534 <fsm_automatic_run+0x3e8>
			setTimer(0, durationYELLOW);
 8000286:	4b71      	ldr	r3, [pc, #452]	; (800044c <fsm_automatic_run+0x300>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	4619      	mov	r1, r3
 800028c:	2000      	movs	r0, #0
 800028e:	f001 fbc1 	bl	8001a14 <setTimer>
			status = RED_YELLOW;
 8000292:	4b66      	ldr	r3, [pc, #408]	; (800042c <fsm_automatic_run+0x2e0>)
 8000294:	2216      	movs	r2, #22
 8000296:	601a      	str	r2, [r3, #0]
		}
		break;
 8000298:	e14c      	b.n	8000534 <fsm_automatic_run+0x3e8>
	case RED_YELLOW:
		//TODO
		Traffic_setColor(1, OFF_LED);
 800029a:	2105      	movs	r1, #5
 800029c:	2001      	movs	r0, #1
 800029e:	f000 fdf5 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, OFF_LED);
 80002a2:	2105      	movs	r1, #5
 80002a4:	2002      	movs	r0, #2
 80002a6:	f000 fdf1 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(1, AUTO_RED);
 80002aa:	2102      	movs	r1, #2
 80002ac:	2001      	movs	r0, #1
 80002ae:	f000 fded 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, AUTO_YELLOW);
 80002b2:	2104      	movs	r1, #4
 80002b4:	2002      	movs	r0, #2
 80002b6:	f000 fde9 	bl	8000e8c <Traffic_setColor>
		if (timerSecond == 1){
 80002ba:	4b5e      	ldr	r3, [pc, #376]	; (8000434 <fsm_automatic_run+0x2e8>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	2b01      	cmp	r3, #1
 80002c0:	d147      	bne.n	8000352 <fsm_automatic_run+0x206>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 80002c2:	4b5d      	ldr	r3, [pc, #372]	; (8000438 <fsm_automatic_run+0x2ec>)
 80002c4:	681a      	ldr	r2, [r3, #0]
 80002c6:	1d3b      	adds	r3, r7, #4
 80002c8:	495c      	ldr	r1, [pc, #368]	; (800043c <fsm_automatic_run+0x2f0>)
 80002ca:	4618      	mov	r0, r3
 80002cc:	f004 fb74 	bl	80049b8 <siprintf>
 80002d0:	4603      	mov	r3, r0
 80002d2:	b29a      	uxth	r2, r3
 80002d4:	1d39      	adds	r1, r7, #4
 80002d6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80002da:	4859      	ldr	r0, [pc, #356]	; (8000440 <fsm_automatic_run+0x2f4>)
 80002dc:	f003 fd66 	bl	8003dac <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 80002e0:	4b58      	ldr	r3, [pc, #352]	; (8000444 <fsm_automatic_run+0x2f8>)
 80002e2:	681a      	ldr	r2, [r3, #0]
 80002e4:	1d3b      	adds	r3, r7, #4
 80002e6:	4958      	ldr	r1, [pc, #352]	; (8000448 <fsm_automatic_run+0x2fc>)
 80002e8:	4618      	mov	r0, r3
 80002ea:	f004 fb65 	bl	80049b8 <siprintf>
 80002ee:	4603      	mov	r3, r0
 80002f0:	b29a      	uxth	r2, r3
 80002f2:	1d39      	adds	r1, r7, #4
 80002f4:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80002f8:	4851      	ldr	r0, [pc, #324]	; (8000440 <fsm_automatic_run+0x2f4>)
 80002fa:	f003 fd57 	bl	8003dac <HAL_UART_Transmit>
			setTimerSecond(1000);
 80002fe:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000302:	f001 fb6b 	bl	80019dc <setTimerSecond>
			timerTraffic1--;
 8000306:	4b4c      	ldr	r3, [pc, #304]	; (8000438 <fsm_automatic_run+0x2ec>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	3b01      	subs	r3, #1
 800030c:	4a4a      	ldr	r2, [pc, #296]	; (8000438 <fsm_automatic_run+0x2ec>)
 800030e:	6013      	str	r3, [r2, #0]
			if (timerTraffic1 <= 0) timerTraffic1 = durationGREEN / 1000;
 8000310:	4b49      	ldr	r3, [pc, #292]	; (8000438 <fsm_automatic_run+0x2ec>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	2b00      	cmp	r3, #0
 8000316:	dc09      	bgt.n	800032c <fsm_automatic_run+0x1e0>
 8000318:	4b45      	ldr	r3, [pc, #276]	; (8000430 <fsm_automatic_run+0x2e4>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	4a4c      	ldr	r2, [pc, #304]	; (8000450 <fsm_automatic_run+0x304>)
 800031e:	fb82 1203 	smull	r1, r2, r2, r3
 8000322:	1192      	asrs	r2, r2, #6
 8000324:	17db      	asrs	r3, r3, #31
 8000326:	1ad3      	subs	r3, r2, r3
 8000328:	4a43      	ldr	r2, [pc, #268]	; (8000438 <fsm_automatic_run+0x2ec>)
 800032a:	6013      	str	r3, [r2, #0]
			timerTraffic2--;
 800032c:	4b45      	ldr	r3, [pc, #276]	; (8000444 <fsm_automatic_run+0x2f8>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	3b01      	subs	r3, #1
 8000332:	4a44      	ldr	r2, [pc, #272]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000334:	6013      	str	r3, [r2, #0]
			if (timerTraffic2 <= 0) timerTraffic2 = durationRED / 1000;
 8000336:	4b43      	ldr	r3, [pc, #268]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	2b00      	cmp	r3, #0
 800033c:	dc09      	bgt.n	8000352 <fsm_automatic_run+0x206>
 800033e:	4b46      	ldr	r3, [pc, #280]	; (8000458 <fsm_automatic_run+0x30c>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	4a43      	ldr	r2, [pc, #268]	; (8000450 <fsm_automatic_run+0x304>)
 8000344:	fb82 1203 	smull	r1, r2, r2, r3
 8000348:	1192      	asrs	r2, r2, #6
 800034a:	17db      	asrs	r3, r3, #31
 800034c:	1ad3      	subs	r3, r2, r3
 800034e:	4a3d      	ldr	r2, [pc, #244]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000350:	6013      	str	r3, [r2, #0]
		}
		// State update
		if(timerFlag[0] == 1){
 8000352:	4b40      	ldr	r3, [pc, #256]	; (8000454 <fsm_automatic_run+0x308>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	2b01      	cmp	r3, #1
 8000358:	f040 80ee 	bne.w	8000538 <fsm_automatic_run+0x3ec>
			setTimer(0, durationGREEN);
 800035c:	4b34      	ldr	r3, [pc, #208]	; (8000430 <fsm_automatic_run+0x2e4>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4619      	mov	r1, r3
 8000362:	2000      	movs	r0, #0
 8000364:	f001 fb56 	bl	8001a14 <setTimer>
			status = GREEN_RED;
 8000368:	4b30      	ldr	r3, [pc, #192]	; (800042c <fsm_automatic_run+0x2e0>)
 800036a:	2217      	movs	r2, #23
 800036c:	601a      	str	r2, [r3, #0]
		}
		break;
 800036e:	e0e3      	b.n	8000538 <fsm_automatic_run+0x3ec>
	case GREEN_RED:
		Traffic_setColor(1, OFF_LED);
 8000370:	2105      	movs	r1, #5
 8000372:	2001      	movs	r0, #1
 8000374:	f000 fd8a 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, OFF_LED);
 8000378:	2105      	movs	r1, #5
 800037a:	2002      	movs	r0, #2
 800037c:	f000 fd86 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(1, AUTO_GREEN);
 8000380:	2103      	movs	r1, #3
 8000382:	2001      	movs	r0, #1
 8000384:	f000 fd82 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, AUTO_RED);
 8000388:	2102      	movs	r1, #2
 800038a:	2002      	movs	r0, #2
 800038c:	f000 fd7e 	bl	8000e8c <Traffic_setColor>
		if (timerSecond == 1){
 8000390:	4b28      	ldr	r3, [pc, #160]	; (8000434 <fsm_automatic_run+0x2e8>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	2b01      	cmp	r3, #1
 8000396:	d139      	bne.n	800040c <fsm_automatic_run+0x2c0>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 8000398:	4b27      	ldr	r3, [pc, #156]	; (8000438 <fsm_automatic_run+0x2ec>)
 800039a:	681a      	ldr	r2, [r3, #0]
 800039c:	1d3b      	adds	r3, r7, #4
 800039e:	4927      	ldr	r1, [pc, #156]	; (800043c <fsm_automatic_run+0x2f0>)
 80003a0:	4618      	mov	r0, r3
 80003a2:	f004 fb09 	bl	80049b8 <siprintf>
 80003a6:	4603      	mov	r3, r0
 80003a8:	b29a      	uxth	r2, r3
 80003aa:	1d39      	adds	r1, r7, #4
 80003ac:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80003b0:	4823      	ldr	r0, [pc, #140]	; (8000440 <fsm_automatic_run+0x2f4>)
 80003b2:	f003 fcfb 	bl	8003dac <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 80003b6:	4b23      	ldr	r3, [pc, #140]	; (8000444 <fsm_automatic_run+0x2f8>)
 80003b8:	681a      	ldr	r2, [r3, #0]
 80003ba:	1d3b      	adds	r3, r7, #4
 80003bc:	4922      	ldr	r1, [pc, #136]	; (8000448 <fsm_automatic_run+0x2fc>)
 80003be:	4618      	mov	r0, r3
 80003c0:	f004 fafa 	bl	80049b8 <siprintf>
 80003c4:	4603      	mov	r3, r0
 80003c6:	b29a      	uxth	r2, r3
 80003c8:	1d39      	adds	r1, r7, #4
 80003ca:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80003ce:	481c      	ldr	r0, [pc, #112]	; (8000440 <fsm_automatic_run+0x2f4>)
 80003d0:	f003 fcec 	bl	8003dac <HAL_UART_Transmit>
			setTimerSecond(1000);
 80003d4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80003d8:	f001 fb00 	bl	80019dc <setTimerSecond>
			timerTraffic1--;
 80003dc:	4b16      	ldr	r3, [pc, #88]	; (8000438 <fsm_automatic_run+0x2ec>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	3b01      	subs	r3, #1
 80003e2:	4a15      	ldr	r2, [pc, #84]	; (8000438 <fsm_automatic_run+0x2ec>)
 80003e4:	6013      	str	r3, [r2, #0]
			if (timerTraffic1 <= 0) timerTraffic1 = durationYELLOW / 1000;
 80003e6:	4b14      	ldr	r3, [pc, #80]	; (8000438 <fsm_automatic_run+0x2ec>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	dc09      	bgt.n	8000402 <fsm_automatic_run+0x2b6>
 80003ee:	4b17      	ldr	r3, [pc, #92]	; (800044c <fsm_automatic_run+0x300>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a17      	ldr	r2, [pc, #92]	; (8000450 <fsm_automatic_run+0x304>)
 80003f4:	fb82 1203 	smull	r1, r2, r2, r3
 80003f8:	1192      	asrs	r2, r2, #6
 80003fa:	17db      	asrs	r3, r3, #31
 80003fc:	1ad3      	subs	r3, r2, r3
 80003fe:	4a0e      	ldr	r2, [pc, #56]	; (8000438 <fsm_automatic_run+0x2ec>)
 8000400:	6013      	str	r3, [r2, #0]
			timerTraffic2--;
 8000402:	4b10      	ldr	r3, [pc, #64]	; (8000444 <fsm_automatic_run+0x2f8>)
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	3b01      	subs	r3, #1
 8000408:	4a0e      	ldr	r2, [pc, #56]	; (8000444 <fsm_automatic_run+0x2f8>)
 800040a:	6013      	str	r3, [r2, #0]
		}
		// State update
		if(timerFlag[0] == 1){
 800040c:	4b11      	ldr	r3, [pc, #68]	; (8000454 <fsm_automatic_run+0x308>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	2b01      	cmp	r3, #1
 8000412:	f040 8093 	bne.w	800053c <fsm_automatic_run+0x3f0>
			setTimer(0, durationYELLOW);
 8000416:	4b0d      	ldr	r3, [pc, #52]	; (800044c <fsm_automatic_run+0x300>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	4619      	mov	r1, r3
 800041c:	2000      	movs	r0, #0
 800041e:	f001 faf9 	bl	8001a14 <setTimer>
			status = YELLOW_RED;
 8000422:	4b02      	ldr	r3, [pc, #8]	; (800042c <fsm_automatic_run+0x2e0>)
 8000424:	2218      	movs	r2, #24
 8000426:	601a      	str	r2, [r3, #0]
		}
		break;
 8000428:	e088      	b.n	800053c <fsm_automatic_run+0x3f0>
 800042a:	bf00      	nop
 800042c:	20000018 	.word	0x20000018
 8000430:	20000024 	.word	0x20000024
 8000434:	200001ec 	.word	0x200001ec
 8000438:	200000d8 	.word	0x200000d8
 800043c:	08005244 	.word	0x08005244
 8000440:	200002cc 	.word	0x200002cc
 8000444:	200000dc 	.word	0x200000dc
 8000448:	08005254 	.word	0x08005254
 800044c:	20000020 	.word	0x20000020
 8000450:	10624dd3 	.word	0x10624dd3
 8000454:	200001f4 	.word	0x200001f4
 8000458:	2000001c 	.word	0x2000001c
	case YELLOW_RED:
		Traffic_setColor(1, OFF_LED);
 800045c:	2105      	movs	r1, #5
 800045e:	2001      	movs	r0, #1
 8000460:	f000 fd14 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, OFF_LED);
 8000464:	2105      	movs	r1, #5
 8000466:	2002      	movs	r0, #2
 8000468:	f000 fd10 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(1, AUTO_YELLOW);
 800046c:	2104      	movs	r1, #4
 800046e:	2001      	movs	r0, #1
 8000470:	f000 fd0c 	bl	8000e8c <Traffic_setColor>
		Traffic_setColor(2, AUTO_RED);
 8000474:	2102      	movs	r1, #2
 8000476:	2002      	movs	r0, #2
 8000478:	f000 fd08 	bl	8000e8c <Traffic_setColor>
		if (timerSecond == 1){
 800047c:	4b6a      	ldr	r3, [pc, #424]	; (8000628 <fsm_automatic_run+0x4dc>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	2b01      	cmp	r3, #1
 8000482:	d147      	bne.n	8000514 <fsm_automatic_run+0x3c8>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 8000484:	4b69      	ldr	r3, [pc, #420]	; (800062c <fsm_automatic_run+0x4e0>)
 8000486:	681a      	ldr	r2, [r3, #0]
 8000488:	1d3b      	adds	r3, r7, #4
 800048a:	4969      	ldr	r1, [pc, #420]	; (8000630 <fsm_automatic_run+0x4e4>)
 800048c:	4618      	mov	r0, r3
 800048e:	f004 fa93 	bl	80049b8 <siprintf>
 8000492:	4603      	mov	r3, r0
 8000494:	b29a      	uxth	r2, r3
 8000496:	1d39      	adds	r1, r7, #4
 8000498:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800049c:	4865      	ldr	r0, [pc, #404]	; (8000634 <fsm_automatic_run+0x4e8>)
 800049e:	f003 fc85 	bl	8003dac <HAL_UART_Transmit>
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 80004a2:	4b65      	ldr	r3, [pc, #404]	; (8000638 <fsm_automatic_run+0x4ec>)
 80004a4:	681a      	ldr	r2, [r3, #0]
 80004a6:	1d3b      	adds	r3, r7, #4
 80004a8:	4964      	ldr	r1, [pc, #400]	; (800063c <fsm_automatic_run+0x4f0>)
 80004aa:	4618      	mov	r0, r3
 80004ac:	f004 fa84 	bl	80049b8 <siprintf>
 80004b0:	4603      	mov	r3, r0
 80004b2:	b29a      	uxth	r2, r3
 80004b4:	1d39      	adds	r1, r7, #4
 80004b6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80004ba:	485e      	ldr	r0, [pc, #376]	; (8000634 <fsm_automatic_run+0x4e8>)
 80004bc:	f003 fc76 	bl	8003dac <HAL_UART_Transmit>
			setTimerSecond(1000);
 80004c0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004c4:	f001 fa8a 	bl	80019dc <setTimerSecond>
			timerTraffic1--;
 80004c8:	4b58      	ldr	r3, [pc, #352]	; (800062c <fsm_automatic_run+0x4e0>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	3b01      	subs	r3, #1
 80004ce:	4a57      	ldr	r2, [pc, #348]	; (800062c <fsm_automatic_run+0x4e0>)
 80004d0:	6013      	str	r3, [r2, #0]
			if (timerTraffic1 <= 0) timerTraffic1 = durationRED / 1000;
 80004d2:	4b56      	ldr	r3, [pc, #344]	; (800062c <fsm_automatic_run+0x4e0>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	2b00      	cmp	r3, #0
 80004d8:	dc09      	bgt.n	80004ee <fsm_automatic_run+0x3a2>
 80004da:	4b59      	ldr	r3, [pc, #356]	; (8000640 <fsm_automatic_run+0x4f4>)
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	4a59      	ldr	r2, [pc, #356]	; (8000644 <fsm_automatic_run+0x4f8>)
 80004e0:	fb82 1203 	smull	r1, r2, r2, r3
 80004e4:	1192      	asrs	r2, r2, #6
 80004e6:	17db      	asrs	r3, r3, #31
 80004e8:	1ad3      	subs	r3, r2, r3
 80004ea:	4a50      	ldr	r2, [pc, #320]	; (800062c <fsm_automatic_run+0x4e0>)
 80004ec:	6013      	str	r3, [r2, #0]
			timerTraffic2--;
 80004ee:	4b52      	ldr	r3, [pc, #328]	; (8000638 <fsm_automatic_run+0x4ec>)
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	3b01      	subs	r3, #1
 80004f4:	4a50      	ldr	r2, [pc, #320]	; (8000638 <fsm_automatic_run+0x4ec>)
 80004f6:	6013      	str	r3, [r2, #0]
			if (timerTraffic2 <= 0) timerTraffic2 = durationGREEN / 1000;
 80004f8:	4b4f      	ldr	r3, [pc, #316]	; (8000638 <fsm_automatic_run+0x4ec>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	2b00      	cmp	r3, #0
 80004fe:	dc09      	bgt.n	8000514 <fsm_automatic_run+0x3c8>
 8000500:	4b51      	ldr	r3, [pc, #324]	; (8000648 <fsm_automatic_run+0x4fc>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a4f      	ldr	r2, [pc, #316]	; (8000644 <fsm_automatic_run+0x4f8>)
 8000506:	fb82 1203 	smull	r1, r2, r2, r3
 800050a:	1192      	asrs	r2, r2, #6
 800050c:	17db      	asrs	r3, r3, #31
 800050e:	1ad3      	subs	r3, r2, r3
 8000510:	4a49      	ldr	r2, [pc, #292]	; (8000638 <fsm_automatic_run+0x4ec>)
 8000512:	6013      	str	r3, [r2, #0]
		}
		// State update
		if (timerFlag[0] == 1){
 8000514:	4b4d      	ldr	r3, [pc, #308]	; (800064c <fsm_automatic_run+0x500>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	2b01      	cmp	r3, #1
 800051a:	d111      	bne.n	8000540 <fsm_automatic_run+0x3f4>
			setTimer(0, durationGREEN);
 800051c:	4b4a      	ldr	r3, [pc, #296]	; (8000648 <fsm_automatic_run+0x4fc>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4619      	mov	r1, r3
 8000522:	2000      	movs	r0, #0
 8000524:	f001 fa76 	bl	8001a14 <setTimer>
			status = RED_GREEN;
 8000528:	4b49      	ldr	r3, [pc, #292]	; (8000650 <fsm_automatic_run+0x504>)
 800052a:	2215      	movs	r2, #21
 800052c:	601a      	str	r2, [r3, #0]
		}
		break;
 800052e:	e007      	b.n	8000540 <fsm_automatic_run+0x3f4>
	default:
		break;
 8000530:	bf00      	nop
 8000532:	e006      	b.n	8000542 <fsm_automatic_run+0x3f6>
		break;
 8000534:	bf00      	nop
 8000536:	e004      	b.n	8000542 <fsm_automatic_run+0x3f6>
		break;
 8000538:	bf00      	nop
 800053a:	e002      	b.n	8000542 <fsm_automatic_run+0x3f6>
		break;
 800053c:	bf00      	nop
 800053e:	e000      	b.n	8000542 <fsm_automatic_run+0x3f6>
		break;
 8000540:	bf00      	nop
	}
	// MODE BUTTON
	if(isButtonPressed(1) == 1){
 8000542:	2001      	movs	r0, #1
 8000544:	f000 fe04 	bl	8001150 <isButtonPressed>
 8000548:	4603      	mov	r3, r0
 800054a:	2b01      	cmp	r3, #1
 800054c:	d151      	bne.n	80005f2 <fsm_automatic_run+0x4a6>
		if(status == RED_GREEN || status == RED_YELLOW || status == GREEN_RED || status == YELLOW_RED){
 800054e:	4b40      	ldr	r3, [pc, #256]	; (8000650 <fsm_automatic_run+0x504>)
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	2b15      	cmp	r3, #21
 8000554:	d00b      	beq.n	800056e <fsm_automatic_run+0x422>
 8000556:	4b3e      	ldr	r3, [pc, #248]	; (8000650 <fsm_automatic_run+0x504>)
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	2b16      	cmp	r3, #22
 800055c:	d007      	beq.n	800056e <fsm_automatic_run+0x422>
 800055e:	4b3c      	ldr	r3, [pc, #240]	; (8000650 <fsm_automatic_run+0x504>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	2b17      	cmp	r3, #23
 8000564:	d003      	beq.n	800056e <fsm_automatic_run+0x422>
 8000566:	4b3a      	ldr	r3, [pc, #232]	; (8000650 <fsm_automatic_run+0x504>)
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	2b18      	cmp	r3, #24
 800056c:	d13d      	bne.n	80005ea <fsm_automatic_run+0x49e>
			status = MOD_RED;
 800056e:	4b38      	ldr	r3, [pc, #224]	; (8000650 <fsm_automatic_run+0x504>)
 8000570:	220b      	movs	r2, #11
 8000572:	601a      	str	r2, [r3, #0]
			setTimer(1, 10); // timer for blinky
 8000574:	210a      	movs	r1, #10
 8000576:	2001      	movs	r0, #1
 8000578:	f001 fa4c 	bl	8001a14 <setTimer>
			setTimer(5, 5000);
 800057c:	f241 3188 	movw	r1, #5000	; 0x1388
 8000580:	2005      	movs	r0, #5
 8000582:	f001 fa47 	bl	8001a14 <setTimer>
			setTimerSecond(1000);
 8000586:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800058a:	f001 fa27 	bl	80019dc <setTimerSecond>
			Traffic_setColor(1, AUTO_RED);
 800058e:	2102      	movs	r1, #2
 8000590:	2001      	movs	r0, #1
 8000592:	f000 fc7b 	bl	8000e8c <Traffic_setColor>
			Traffic_setColor(2, AUTO_RED);
 8000596:	2102      	movs	r1, #2
 8000598:	2002      	movs	r0, #2
 800059a:	f000 fc77 	bl	8000e8c <Traffic_setColor>
			RED_sec = durationRED / 1000;
 800059e:	4b28      	ldr	r3, [pc, #160]	; (8000640 <fsm_automatic_run+0x4f4>)
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	4a28      	ldr	r2, [pc, #160]	; (8000644 <fsm_automatic_run+0x4f8>)
 80005a4:	fb82 1203 	smull	r1, r2, r2, r3
 80005a8:	1192      	asrs	r2, r2, #6
 80005aa:	17db      	asrs	r3, r3, #31
 80005ac:	1ad3      	subs	r3, r2, r3
 80005ae:	4a29      	ldr	r2, [pc, #164]	; (8000654 <fsm_automatic_run+0x508>)
 80005b0:	6013      	str	r3, [r2, #0]
			YELLOW_sec = durationYELLOW / 1000;
 80005b2:	4b29      	ldr	r3, [pc, #164]	; (8000658 <fsm_automatic_run+0x50c>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a23      	ldr	r2, [pc, #140]	; (8000644 <fsm_automatic_run+0x4f8>)
 80005b8:	fb82 1203 	smull	r1, r2, r2, r3
 80005bc:	1192      	asrs	r2, r2, #6
 80005be:	17db      	asrs	r3, r3, #31
 80005c0:	1ad3      	subs	r3, r2, r3
 80005c2:	4a26      	ldr	r2, [pc, #152]	; (800065c <fsm_automatic_run+0x510>)
 80005c4:	6013      	str	r3, [r2, #0]
			GREEN_sec = durationGREEN / 1000;
 80005c6:	4b20      	ldr	r3, [pc, #128]	; (8000648 <fsm_automatic_run+0x4fc>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	4a1e      	ldr	r2, [pc, #120]	; (8000644 <fsm_automatic_run+0x4f8>)
 80005cc:	fb82 1203 	smull	r1, r2, r2, r3
 80005d0:	1192      	asrs	r2, r2, #6
 80005d2:	17db      	asrs	r3, r3, #31
 80005d4:	1ad3      	subs	r3, r2, r3
 80005d6:	4a22      	ldr	r2, [pc, #136]	; (8000660 <fsm_automatic_run+0x514>)
 80005d8:	6013      	str	r3, [r2, #0]
			timerTraffic1 = RED_sec;
 80005da:	4b1e      	ldr	r3, [pc, #120]	; (8000654 <fsm_automatic_run+0x508>)
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a13      	ldr	r2, [pc, #76]	; (800062c <fsm_automatic_run+0x4e0>)
 80005e0:	6013      	str	r3, [r2, #0]
			timerTraffic2 = 2;
 80005e2:	4b15      	ldr	r3, [pc, #84]	; (8000638 <fsm_automatic_run+0x4ec>)
 80005e4:	2202      	movs	r2, #2
 80005e6:	601a      	str	r2, [r3, #0]
		setTimer(2, 10000); // 10 secs
		setTimer(3, 100);
		setTimer(4, 100);
	}

}
 80005e8:	e019      	b.n	800061e <fsm_automatic_run+0x4d2>
		else setBackButtonFlag(1);
 80005ea:	2001      	movs	r0, #1
 80005ec:	f000 fdd2 	bl	8001194 <setBackButtonFlag>
}
 80005f0:	e015      	b.n	800061e <fsm_automatic_run+0x4d2>
	else if(isButtonPressed(0) == 1){
 80005f2:	2000      	movs	r0, #0
 80005f4:	f000 fdac 	bl	8001150 <isButtonPressed>
 80005f8:	4603      	mov	r3, r0
 80005fa:	2b01      	cmp	r3, #1
 80005fc:	d10f      	bne.n	800061e <fsm_automatic_run+0x4d2>
		pedestrianFlag = 1;
 80005fe:	4b19      	ldr	r3, [pc, #100]	; (8000664 <fsm_automatic_run+0x518>)
 8000600:	2201      	movs	r2, #1
 8000602:	601a      	str	r2, [r3, #0]
		setTimer(2, 10000); // 10 secs
 8000604:	f242 7110 	movw	r1, #10000	; 0x2710
 8000608:	2002      	movs	r0, #2
 800060a:	f001 fa03 	bl	8001a14 <setTimer>
		setTimer(3, 100);
 800060e:	2164      	movs	r1, #100	; 0x64
 8000610:	2003      	movs	r0, #3
 8000612:	f001 f9ff 	bl	8001a14 <setTimer>
		setTimer(4, 100);
 8000616:	2164      	movs	r1, #100	; 0x64
 8000618:	2004      	movs	r0, #4
 800061a:	f001 f9fb 	bl	8001a14 <setTimer>
}
 800061e:	bf00      	nop
 8000620:	3738      	adds	r7, #56	; 0x38
 8000622:	46bd      	mov	sp, r7
 8000624:	bd80      	pop	{r7, pc}
 8000626:	bf00      	nop
 8000628:	200001ec 	.word	0x200001ec
 800062c:	200000d8 	.word	0x200000d8
 8000630:	08005244 	.word	0x08005244
 8000634:	200002cc 	.word	0x200002cc
 8000638:	200000dc 	.word	0x200000dc
 800063c:	08005254 	.word	0x08005254
 8000640:	2000001c 	.word	0x2000001c
 8000644:	10624dd3 	.word	0x10624dd3
 8000648:	20000024 	.word	0x20000024
 800064c:	200001f4 	.word	0x200001f4
 8000650:	20000018 	.word	0x20000018
 8000654:	20000238 	.word	0x20000238
 8000658:	20000020 	.word	0x20000020
 800065c:	20000234 	.word	0x20000234
 8000660:	20000230 	.word	0x20000230
 8000664:	200000d0 	.word	0x200000d0

08000668 <returnAutomatic>:
 *      Author: olkmphy
 */
#include "fsm_manual.h"

// Return to Automatic
void returnAutomatic(){
 8000668:	b580      	push	{r7, lr}
 800066a:	af00      	add	r7, sp, #0
	durationGREEN = durationRED - durationYELLOW;
 800066c:	4b14      	ldr	r3, [pc, #80]	; (80006c0 <returnAutomatic+0x58>)
 800066e:	681a      	ldr	r2, [r3, #0]
 8000670:	4b14      	ldr	r3, [pc, #80]	; (80006c4 <returnAutomatic+0x5c>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	1ad3      	subs	r3, r2, r3
 8000676:	4a14      	ldr	r2, [pc, #80]	; (80006c8 <returnAutomatic+0x60>)
 8000678:	6013      	str	r3, [r2, #0]
	timerTraffic1 = durationRED / 1000;
 800067a:	4b11      	ldr	r3, [pc, #68]	; (80006c0 <returnAutomatic+0x58>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4a13      	ldr	r2, [pc, #76]	; (80006cc <returnAutomatic+0x64>)
 8000680:	fb82 1203 	smull	r1, r2, r2, r3
 8000684:	1192      	asrs	r2, r2, #6
 8000686:	17db      	asrs	r3, r3, #31
 8000688:	1ad3      	subs	r3, r2, r3
 800068a:	4a11      	ldr	r2, [pc, #68]	; (80006d0 <returnAutomatic+0x68>)
 800068c:	6013      	str	r3, [r2, #0]
	timerTraffic2 = durationGREEN / 1000;
 800068e:	4b0e      	ldr	r3, [pc, #56]	; (80006c8 <returnAutomatic+0x60>)
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4a0e      	ldr	r2, [pc, #56]	; (80006cc <returnAutomatic+0x64>)
 8000694:	fb82 1203 	smull	r1, r2, r2, r3
 8000698:	1192      	asrs	r2, r2, #6
 800069a:	17db      	asrs	r3, r3, #31
 800069c:	1ad3      	subs	r3, r2, r3
 800069e:	4a0d      	ldr	r2, [pc, #52]	; (80006d4 <returnAutomatic+0x6c>)
 80006a0:	6013      	str	r3, [r2, #0]
	setTimer(0, durationGREEN);
 80006a2:	4b09      	ldr	r3, [pc, #36]	; (80006c8 <returnAutomatic+0x60>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	4619      	mov	r1, r3
 80006a8:	2000      	movs	r0, #0
 80006aa:	f001 f9b3 	bl	8001a14 <setTimer>
	setTimerSecond(1000);
 80006ae:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006b2:	f001 f993 	bl	80019dc <setTimerSecond>
	status = RED_GREEN;
 80006b6:	4b08      	ldr	r3, [pc, #32]	; (80006d8 <returnAutomatic+0x70>)
 80006b8:	2215      	movs	r2, #21
 80006ba:	601a      	str	r2, [r3, #0]
}
 80006bc:	bf00      	nop
 80006be:	bd80      	pop	{r7, pc}
 80006c0:	2000001c 	.word	0x2000001c
 80006c4:	20000020 	.word	0x20000020
 80006c8:	20000024 	.word	0x20000024
 80006cc:	10624dd3 	.word	0x10624dd3
 80006d0:	200000d8 	.word	0x200000d8
 80006d4:	200000dc 	.word	0x200000dc
 80006d8:	20000018 	.word	0x20000018

080006dc <fsm_manual_run>:

void fsm_manual_run(){
 80006dc:	b580      	push	{r7, lr}
 80006de:	b08e      	sub	sp, #56	; 0x38
 80006e0:	af00      	add	r7, sp, #0
	char str[50];
	switch(status){
 80006e2:	4bac      	ldr	r3, [pc, #688]	; (8000994 <fsm_manual_run+0x2b8>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	2b0d      	cmp	r3, #13
 80006e8:	f000 8129 	beq.w	800093e <fsm_manual_run+0x262>
 80006ec:	2b0d      	cmp	r3, #13
 80006ee:	f300 81c3 	bgt.w	8000a78 <fsm_manual_run+0x39c>
 80006f2:	2b0b      	cmp	r3, #11
 80006f4:	d003      	beq.n	80006fe <fsm_manual_run+0x22>
 80006f6:	2b0c      	cmp	r3, #12
 80006f8:	f000 808b 	beq.w	8000812 <fsm_manual_run+0x136>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
			}
			break;
		default:
			break;
 80006fc:	e1bc      	b.n	8000a78 <fsm_manual_run+0x39c>
			if(timerFlag[1] == 1){
 80006fe:	4ba6      	ldr	r3, [pc, #664]	; (8000998 <fsm_manual_run+0x2bc>)
 8000700:	685b      	ldr	r3, [r3, #4]
 8000702:	2b01      	cmp	r3, #1
 8000704:	d10b      	bne.n	800071e <fsm_manual_run+0x42>
				setTimer(1, 250); // blink every 0.25s
 8000706:	21fa      	movs	r1, #250	; 0xfa
 8000708:	2001      	movs	r0, #1
 800070a:	f001 f983 	bl	8001a14 <setTimer>
				blinkLEDs(TRAFFIC_1, AUTO_RED);
 800070e:	2102      	movs	r1, #2
 8000710:	2007      	movs	r0, #7
 8000712:	f000 fb29 	bl	8000d68 <blinkLEDs>
				blinkLEDs(TRAFFIC_2, AUTO_RED);
 8000716:	2102      	movs	r1, #2
 8000718:	2008      	movs	r0, #8
 800071a:	f000 fb25 	bl	8000d68 <blinkLEDs>
			if(isButtonPressed(2) == 1){
 800071e:	2002      	movs	r0, #2
 8000720:	f000 fd16 	bl	8001150 <isButtonPressed>
 8000724:	4603      	mov	r3, r0
 8000726:	2b01      	cmp	r3, #1
 8000728:	d119      	bne.n	800075e <fsm_manual_run+0x82>
				setTimer(5, 5000);
 800072a:	f241 3188 	movw	r1, #5000	; 0x1388
 800072e:	2005      	movs	r0, #5
 8000730:	f001 f970 	bl	8001a14 <setTimer>
				RED_sec++;
 8000734:	4b99      	ldr	r3, [pc, #612]	; (800099c <fsm_manual_run+0x2c0>)
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	3301      	adds	r3, #1
 800073a:	4a98      	ldr	r2, [pc, #608]	; (800099c <fsm_manual_run+0x2c0>)
 800073c:	6013      	str	r3, [r2, #0]
				if(RED_sec >= 100) {
 800073e:	4b97      	ldr	r3, [pc, #604]	; (800099c <fsm_manual_run+0x2c0>)
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	2b63      	cmp	r3, #99	; 0x63
 8000744:	dd06      	ble.n	8000754 <fsm_manual_run+0x78>
					RED_sec = 1;
 8000746:	4b95      	ldr	r3, [pc, #596]	; (800099c <fsm_manual_run+0x2c0>)
 8000748:	2201      	movs	r2, #1
 800074a:	601a      	str	r2, [r3, #0]
					timerTraffic1 = 1;
 800074c:	4b94      	ldr	r3, [pc, #592]	; (80009a0 <fsm_manual_run+0x2c4>)
 800074e:	2201      	movs	r2, #1
 8000750:	601a      	str	r2, [r3, #0]
 8000752:	e004      	b.n	800075e <fsm_manual_run+0x82>
				else timerTraffic1++;
 8000754:	4b92      	ldr	r3, [pc, #584]	; (80009a0 <fsm_manual_run+0x2c4>)
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	3301      	adds	r3, #1
 800075a:	4a91      	ldr	r2, [pc, #580]	; (80009a0 <fsm_manual_run+0x2c4>)
 800075c:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(3) == 1){
 800075e:	2003      	movs	r0, #3
 8000760:	f000 fcf6 	bl	8001150 <isButtonPressed>
 8000764:	4603      	mov	r3, r0
 8000766:	2b01      	cmp	r3, #1
 8000768:	d10c      	bne.n	8000784 <fsm_manual_run+0xa8>
				setTimer(5, 5000);
 800076a:	f241 3188 	movw	r1, #5000	; 0x1388
 800076e:	2005      	movs	r0, #5
 8000770:	f001 f950 	bl	8001a14 <setTimer>
				durationRED = RED_sec * 1000;
 8000774:	4b89      	ldr	r3, [pc, #548]	; (800099c <fsm_manual_run+0x2c0>)
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800077c:	fb02 f303 	mul.w	r3, r2, r3
 8000780:	4a88      	ldr	r2, [pc, #544]	; (80009a4 <fsm_manual_run+0x2c8>)
 8000782:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(1) == 1){
 8000784:	2001      	movs	r0, #1
 8000786:	f000 fce3 	bl	8001150 <isButtonPressed>
 800078a:	4603      	mov	r3, r0
 800078c:	2b01      	cmp	r3, #1
 800078e:	d118      	bne.n	80007c2 <fsm_manual_run+0xe6>
				setTimer(5, 5000);
 8000790:	f241 3188 	movw	r1, #5000	; 0x1388
 8000794:	2005      	movs	r0, #5
 8000796:	f001 f93d 	bl	8001a14 <setTimer>
				setTimer(1, 10);
 800079a:	210a      	movs	r1, #10
 800079c:	2001      	movs	r0, #1
 800079e:	f001 f939 	bl	8001a14 <setTimer>
				status = MOD_YELLOW;
 80007a2:	4b7c      	ldr	r3, [pc, #496]	; (8000994 <fsm_manual_run+0x2b8>)
 80007a4:	220c      	movs	r2, #12
 80007a6:	601a      	str	r2, [r3, #0]
				timerTraffic1 = durationYELLOW / 1000;
 80007a8:	4b7f      	ldr	r3, [pc, #508]	; (80009a8 <fsm_manual_run+0x2cc>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	4a7f      	ldr	r2, [pc, #508]	; (80009ac <fsm_manual_run+0x2d0>)
 80007ae:	fb82 1203 	smull	r1, r2, r2, r3
 80007b2:	1192      	asrs	r2, r2, #6
 80007b4:	17db      	asrs	r3, r3, #31
 80007b6:	1ad3      	subs	r3, r2, r3
 80007b8:	4a79      	ldr	r2, [pc, #484]	; (80009a0 <fsm_manual_run+0x2c4>)
 80007ba:	6013      	str	r3, [r2, #0]
				timerTraffic2 = 3;
 80007bc:	4b7c      	ldr	r3, [pc, #496]	; (80009b0 <fsm_manual_run+0x2d4>)
 80007be:	2203      	movs	r2, #3
 80007c0:	601a      	str	r2, [r3, #0]
			if(timerSecond == 1){
 80007c2:	4b7c      	ldr	r3, [pc, #496]	; (80009b4 <fsm_manual_run+0x2d8>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	2b01      	cmp	r3, #1
 80007c8:	f040 8158 	bne.w	8000a7c <fsm_manual_run+0x3a0>
				setTimerSecond(1000);
 80007cc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80007d0:	f001 f904 	bl	80019dc <setTimerSecond>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 80007d4:	4b72      	ldr	r3, [pc, #456]	; (80009a0 <fsm_manual_run+0x2c4>)
 80007d6:	681a      	ldr	r2, [r3, #0]
 80007d8:	463b      	mov	r3, r7
 80007da:	4977      	ldr	r1, [pc, #476]	; (80009b8 <fsm_manual_run+0x2dc>)
 80007dc:	4618      	mov	r0, r3
 80007de:	f004 f8eb 	bl	80049b8 <siprintf>
 80007e2:	4603      	mov	r3, r0
 80007e4:	b29a      	uxth	r2, r3
 80007e6:	4639      	mov	r1, r7
 80007e8:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80007ec:	4873      	ldr	r0, [pc, #460]	; (80009bc <fsm_manual_run+0x2e0>)
 80007ee:	f003 fadd 	bl	8003dac <HAL_UART_Transmit>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 80007f2:	4b6f      	ldr	r3, [pc, #444]	; (80009b0 <fsm_manual_run+0x2d4>)
 80007f4:	681a      	ldr	r2, [r3, #0]
 80007f6:	463b      	mov	r3, r7
 80007f8:	4971      	ldr	r1, [pc, #452]	; (80009c0 <fsm_manual_run+0x2e4>)
 80007fa:	4618      	mov	r0, r3
 80007fc:	f004 f8dc 	bl	80049b8 <siprintf>
 8000800:	4603      	mov	r3, r0
 8000802:	b29a      	uxth	r2, r3
 8000804:	4639      	mov	r1, r7
 8000806:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800080a:	486c      	ldr	r0, [pc, #432]	; (80009bc <fsm_manual_run+0x2e0>)
 800080c:	f003 face 	bl	8003dac <HAL_UART_Transmit>
			break;
 8000810:	e134      	b.n	8000a7c <fsm_manual_run+0x3a0>
			if(timerFlag[1] == 1){
 8000812:	4b61      	ldr	r3, [pc, #388]	; (8000998 <fsm_manual_run+0x2bc>)
 8000814:	685b      	ldr	r3, [r3, #4]
 8000816:	2b01      	cmp	r3, #1
 8000818:	d10b      	bne.n	8000832 <fsm_manual_run+0x156>
				setTimer(1, 250); // blink every 0.25s
 800081a:	21fa      	movs	r1, #250	; 0xfa
 800081c:	2001      	movs	r0, #1
 800081e:	f001 f8f9 	bl	8001a14 <setTimer>
				blinkLEDs(TRAFFIC_1, AUTO_YELLOW);
 8000822:	2104      	movs	r1, #4
 8000824:	2007      	movs	r0, #7
 8000826:	f000 fa9f 	bl	8000d68 <blinkLEDs>
				blinkLEDs(TRAFFIC_2, AUTO_YELLOW);
 800082a:	2104      	movs	r1, #4
 800082c:	2008      	movs	r0, #8
 800082e:	f000 fa9b 	bl	8000d68 <blinkLEDs>
			if(isButtonPressed(2) == 1){
 8000832:	2002      	movs	r0, #2
 8000834:	f000 fc8c 	bl	8001150 <isButtonPressed>
 8000838:	4603      	mov	r3, r0
 800083a:	2b01      	cmp	r3, #1
 800083c:	d119      	bne.n	8000872 <fsm_manual_run+0x196>
				setTimer(5, 5000);
 800083e:	f241 3188 	movw	r1, #5000	; 0x1388
 8000842:	2005      	movs	r0, #5
 8000844:	f001 f8e6 	bl	8001a14 <setTimer>
				YELLOW_sec++;
 8000848:	4b5e      	ldr	r3, [pc, #376]	; (80009c4 <fsm_manual_run+0x2e8>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	3301      	adds	r3, #1
 800084e:	4a5d      	ldr	r2, [pc, #372]	; (80009c4 <fsm_manual_run+0x2e8>)
 8000850:	6013      	str	r3, [r2, #0]
				if(YELLOW_sec >= 100) {
 8000852:	4b5c      	ldr	r3, [pc, #368]	; (80009c4 <fsm_manual_run+0x2e8>)
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	2b63      	cmp	r3, #99	; 0x63
 8000858:	dd06      	ble.n	8000868 <fsm_manual_run+0x18c>
					YELLOW_sec = 1;
 800085a:	4b5a      	ldr	r3, [pc, #360]	; (80009c4 <fsm_manual_run+0x2e8>)
 800085c:	2201      	movs	r2, #1
 800085e:	601a      	str	r2, [r3, #0]
					timerTraffic1 = 1;
 8000860:	4b4f      	ldr	r3, [pc, #316]	; (80009a0 <fsm_manual_run+0x2c4>)
 8000862:	2201      	movs	r2, #1
 8000864:	601a      	str	r2, [r3, #0]
 8000866:	e004      	b.n	8000872 <fsm_manual_run+0x196>
				else timerTraffic1++;
 8000868:	4b4d      	ldr	r3, [pc, #308]	; (80009a0 <fsm_manual_run+0x2c4>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	3301      	adds	r3, #1
 800086e:	4a4c      	ldr	r2, [pc, #304]	; (80009a0 <fsm_manual_run+0x2c4>)
 8000870:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(3) == 1){
 8000872:	2003      	movs	r0, #3
 8000874:	f000 fc6c 	bl	8001150 <isButtonPressed>
 8000878:	4603      	mov	r3, r0
 800087a:	2b01      	cmp	r3, #1
 800087c:	d118      	bne.n	80008b0 <fsm_manual_run+0x1d4>
				setTimer(5, 5000);
 800087e:	f241 3188 	movw	r1, #5000	; 0x1388
 8000882:	2005      	movs	r0, #5
 8000884:	f001 f8c6 	bl	8001a14 <setTimer>
				int prevDurationYELLOW = durationYELLOW;
 8000888:	4b47      	ldr	r3, [pc, #284]	; (80009a8 <fsm_manual_run+0x2cc>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	637b      	str	r3, [r7, #52]	; 0x34
				durationYELLOW = YELLOW_sec * 1000;
 800088e:	4b4d      	ldr	r3, [pc, #308]	; (80009c4 <fsm_manual_run+0x2e8>)
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000896:	fb02 f303 	mul.w	r3, r2, r3
 800089a:	4a43      	ldr	r2, [pc, #268]	; (80009a8 <fsm_manual_run+0x2cc>)
 800089c:	6013      	str	r3, [r2, #0]
				if(durationYELLOW > durationRED) durationYELLOW = prevDurationYELLOW; // Check the logic
 800089e:	4b42      	ldr	r3, [pc, #264]	; (80009a8 <fsm_manual_run+0x2cc>)
 80008a0:	681a      	ldr	r2, [r3, #0]
 80008a2:	4b40      	ldr	r3, [pc, #256]	; (80009a4 <fsm_manual_run+0x2c8>)
 80008a4:	681b      	ldr	r3, [r3, #0]
 80008a6:	429a      	cmp	r2, r3
 80008a8:	dd02      	ble.n	80008b0 <fsm_manual_run+0x1d4>
 80008aa:	4a3f      	ldr	r2, [pc, #252]	; (80009a8 <fsm_manual_run+0x2cc>)
 80008ac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80008ae:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(1) == 1){
 80008b0:	2001      	movs	r0, #1
 80008b2:	f000 fc4d 	bl	8001150 <isButtonPressed>
 80008b6:	4603      	mov	r3, r0
 80008b8:	2b01      	cmp	r3, #1
 80008ba:	d118      	bne.n	80008ee <fsm_manual_run+0x212>
				setTimer(1, 10);
 80008bc:	210a      	movs	r1, #10
 80008be:	2001      	movs	r0, #1
 80008c0:	f001 f8a8 	bl	8001a14 <setTimer>
				status = MOD_GREEN;
 80008c4:	4b33      	ldr	r3, [pc, #204]	; (8000994 <fsm_manual_run+0x2b8>)
 80008c6:	220d      	movs	r2, #13
 80008c8:	601a      	str	r2, [r3, #0]
				timerTraffic1 = durationGREEN / 1000;
 80008ca:	4b3f      	ldr	r3, [pc, #252]	; (80009c8 <fsm_manual_run+0x2ec>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	4a37      	ldr	r2, [pc, #220]	; (80009ac <fsm_manual_run+0x2d0>)
 80008d0:	fb82 1203 	smull	r1, r2, r2, r3
 80008d4:	1192      	asrs	r2, r2, #6
 80008d6:	17db      	asrs	r3, r3, #31
 80008d8:	1ad3      	subs	r3, r2, r3
 80008da:	4a31      	ldr	r2, [pc, #196]	; (80009a0 <fsm_manual_run+0x2c4>)
 80008dc:	6013      	str	r3, [r2, #0]
				timerTraffic2 = 4;
 80008de:	4b34      	ldr	r3, [pc, #208]	; (80009b0 <fsm_manual_run+0x2d4>)
 80008e0:	2204      	movs	r2, #4
 80008e2:	601a      	str	r2, [r3, #0]
				setTimer(5, 5000);
 80008e4:	f241 3188 	movw	r1, #5000	; 0x1388
 80008e8:	2005      	movs	r0, #5
 80008ea:	f001 f893 	bl	8001a14 <setTimer>
			if(timerSecond == 1){
 80008ee:	4b31      	ldr	r3, [pc, #196]	; (80009b4 <fsm_manual_run+0x2d8>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	2b01      	cmp	r3, #1
 80008f4:	f040 80c4 	bne.w	8000a80 <fsm_manual_run+0x3a4>
				setTimerSecond(1000);
 80008f8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80008fc:	f001 f86e 	bl	80019dc <setTimerSecond>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 8000900:	4b27      	ldr	r3, [pc, #156]	; (80009a0 <fsm_manual_run+0x2c4>)
 8000902:	681a      	ldr	r2, [r3, #0]
 8000904:	463b      	mov	r3, r7
 8000906:	492c      	ldr	r1, [pc, #176]	; (80009b8 <fsm_manual_run+0x2dc>)
 8000908:	4618      	mov	r0, r3
 800090a:	f004 f855 	bl	80049b8 <siprintf>
 800090e:	4603      	mov	r3, r0
 8000910:	b29a      	uxth	r2, r3
 8000912:	4639      	mov	r1, r7
 8000914:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000918:	4828      	ldr	r0, [pc, #160]	; (80009bc <fsm_manual_run+0x2e0>)
 800091a:	f003 fa47 	bl	8003dac <HAL_UART_Transmit>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 800091e:	4b24      	ldr	r3, [pc, #144]	; (80009b0 <fsm_manual_run+0x2d4>)
 8000920:	681a      	ldr	r2, [r3, #0]
 8000922:	463b      	mov	r3, r7
 8000924:	4926      	ldr	r1, [pc, #152]	; (80009c0 <fsm_manual_run+0x2e4>)
 8000926:	4618      	mov	r0, r3
 8000928:	f004 f846 	bl	80049b8 <siprintf>
 800092c:	4603      	mov	r3, r0
 800092e:	b29a      	uxth	r2, r3
 8000930:	4639      	mov	r1, r7
 8000932:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000936:	4821      	ldr	r0, [pc, #132]	; (80009bc <fsm_manual_run+0x2e0>)
 8000938:	f003 fa38 	bl	8003dac <HAL_UART_Transmit>
			break;
 800093c:	e0a0      	b.n	8000a80 <fsm_manual_run+0x3a4>
			if(timerFlag[1] == 1){
 800093e:	4b16      	ldr	r3, [pc, #88]	; (8000998 <fsm_manual_run+0x2bc>)
 8000940:	685b      	ldr	r3, [r3, #4]
 8000942:	2b01      	cmp	r3, #1
 8000944:	d10b      	bne.n	800095e <fsm_manual_run+0x282>
				setTimer(1, 250); // blink every 0.25s
 8000946:	21fa      	movs	r1, #250	; 0xfa
 8000948:	2001      	movs	r0, #1
 800094a:	f001 f863 	bl	8001a14 <setTimer>
				blinkLEDs(TRAFFIC_1, AUTO_GREEN);
 800094e:	2103      	movs	r1, #3
 8000950:	2007      	movs	r0, #7
 8000952:	f000 fa09 	bl	8000d68 <blinkLEDs>
				blinkLEDs(TRAFFIC_2, AUTO_GREEN);
 8000956:	2103      	movs	r1, #3
 8000958:	2008      	movs	r0, #8
 800095a:	f000 fa05 	bl	8000d68 <blinkLEDs>
			if(isButtonPressed(2) == 1){
 800095e:	2002      	movs	r0, #2
 8000960:	f000 fbf6 	bl	8001150 <isButtonPressed>
 8000964:	4603      	mov	r3, r0
 8000966:	2b01      	cmp	r3, #1
 8000968:	d137      	bne.n	80009da <fsm_manual_run+0x2fe>
				setTimer(5, 5000);
 800096a:	f241 3188 	movw	r1, #5000	; 0x1388
 800096e:	2005      	movs	r0, #5
 8000970:	f001 f850 	bl	8001a14 <setTimer>
				GREEN_sec++;
 8000974:	4b15      	ldr	r3, [pc, #84]	; (80009cc <fsm_manual_run+0x2f0>)
 8000976:	681b      	ldr	r3, [r3, #0]
 8000978:	3301      	adds	r3, #1
 800097a:	4a14      	ldr	r2, [pc, #80]	; (80009cc <fsm_manual_run+0x2f0>)
 800097c:	6013      	str	r3, [r2, #0]
				if(GREEN_sec >= 100){
 800097e:	4b13      	ldr	r3, [pc, #76]	; (80009cc <fsm_manual_run+0x2f0>)
 8000980:	681b      	ldr	r3, [r3, #0]
 8000982:	2b63      	cmp	r3, #99	; 0x63
 8000984:	dd24      	ble.n	80009d0 <fsm_manual_run+0x2f4>
					GREEN_sec = 1;
 8000986:	4b11      	ldr	r3, [pc, #68]	; (80009cc <fsm_manual_run+0x2f0>)
 8000988:	2201      	movs	r2, #1
 800098a:	601a      	str	r2, [r3, #0]
					timerTraffic1 = 1;
 800098c:	4b04      	ldr	r3, [pc, #16]	; (80009a0 <fsm_manual_run+0x2c4>)
 800098e:	2201      	movs	r2, #1
 8000990:	601a      	str	r2, [r3, #0]
 8000992:	e022      	b.n	80009da <fsm_manual_run+0x2fe>
 8000994:	20000018 	.word	0x20000018
 8000998:	200001f4 	.word	0x200001f4
 800099c:	20000238 	.word	0x20000238
 80009a0:	200000d8 	.word	0x200000d8
 80009a4:	2000001c 	.word	0x2000001c
 80009a8:	20000020 	.word	0x20000020
 80009ac:	10624dd3 	.word	0x10624dd3
 80009b0:	200000dc 	.word	0x200000dc
 80009b4:	200001ec 	.word	0x200001ec
 80009b8:	08005268 	.word	0x08005268
 80009bc:	200002cc 	.word	0x200002cc
 80009c0:	08005278 	.word	0x08005278
 80009c4:	20000234 	.word	0x20000234
 80009c8:	20000024 	.word	0x20000024
 80009cc:	20000230 	.word	0x20000230
				else timerTraffic1++;
 80009d0:	4b38      	ldr	r3, [pc, #224]	; (8000ab4 <fsm_manual_run+0x3d8>)
 80009d2:	681b      	ldr	r3, [r3, #0]
 80009d4:	3301      	adds	r3, #1
 80009d6:	4a37      	ldr	r2, [pc, #220]	; (8000ab4 <fsm_manual_run+0x3d8>)
 80009d8:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(3) == 1){
 80009da:	2003      	movs	r0, #3
 80009dc:	f000 fbb8 	bl	8001150 <isButtonPressed>
 80009e0:	4603      	mov	r3, r0
 80009e2:	2b01      	cmp	r3, #1
 80009e4:	d119      	bne.n	8000a1a <fsm_manual_run+0x33e>
				setTimer(5, 5000);
 80009e6:	f241 3188 	movw	r1, #5000	; 0x1388
 80009ea:	2005      	movs	r0, #5
 80009ec:	f001 f812 	bl	8001a14 <setTimer>
				durationGREEN = GREEN_sec * 1000;
 80009f0:	4b31      	ldr	r3, [pc, #196]	; (8000ab8 <fsm_manual_run+0x3dc>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80009f8:	fb02 f303 	mul.w	r3, r2, r3
 80009fc:	4a2f      	ldr	r2, [pc, #188]	; (8000abc <fsm_manual_run+0x3e0>)
 80009fe:	6013      	str	r3, [r2, #0]
				if(durationGREEN < durationRED) durationYELLOW = durationRED - durationGREEN;
 8000a00:	4b2e      	ldr	r3, [pc, #184]	; (8000abc <fsm_manual_run+0x3e0>)
 8000a02:	681a      	ldr	r2, [r3, #0]
 8000a04:	4b2e      	ldr	r3, [pc, #184]	; (8000ac0 <fsm_manual_run+0x3e4>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	429a      	cmp	r2, r3
 8000a0a:	da06      	bge.n	8000a1a <fsm_manual_run+0x33e>
 8000a0c:	4b2c      	ldr	r3, [pc, #176]	; (8000ac0 <fsm_manual_run+0x3e4>)
 8000a0e:	681a      	ldr	r2, [r3, #0]
 8000a10:	4b2a      	ldr	r3, [pc, #168]	; (8000abc <fsm_manual_run+0x3e0>)
 8000a12:	681b      	ldr	r3, [r3, #0]
 8000a14:	1ad3      	subs	r3, r2, r3
 8000a16:	4a2b      	ldr	r2, [pc, #172]	; (8000ac4 <fsm_manual_run+0x3e8>)
 8000a18:	6013      	str	r3, [r2, #0]
			if(isButtonPressed(1) == 1) returnAutomatic();
 8000a1a:	2001      	movs	r0, #1
 8000a1c:	f000 fb98 	bl	8001150 <isButtonPressed>
 8000a20:	4603      	mov	r3, r0
 8000a22:	2b01      	cmp	r3, #1
 8000a24:	d101      	bne.n	8000a2a <fsm_manual_run+0x34e>
 8000a26:	f7ff fe1f 	bl	8000668 <returnAutomatic>
			if(timerSecond == 1){
 8000a2a:	4b27      	ldr	r3, [pc, #156]	; (8000ac8 <fsm_manual_run+0x3ec>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	2b01      	cmp	r3, #1
 8000a30:	d128      	bne.n	8000a84 <fsm_manual_run+0x3a8>
				setTimerSecond(1000);
 8000a32:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a36:	f000 ffd1 	bl	80019dc <setTimerSecond>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG1: %d#\r\n",timerTraffic1), 500);
 8000a3a:	4b1e      	ldr	r3, [pc, #120]	; (8000ab4 <fsm_manual_run+0x3d8>)
 8000a3c:	681a      	ldr	r2, [r3, #0]
 8000a3e:	463b      	mov	r3, r7
 8000a40:	4922      	ldr	r1, [pc, #136]	; (8000acc <fsm_manual_run+0x3f0>)
 8000a42:	4618      	mov	r0, r3
 8000a44:	f003 ffb8 	bl	80049b8 <siprintf>
 8000a48:	4603      	mov	r3, r0
 8000a4a:	b29a      	uxth	r2, r3
 8000a4c:	4639      	mov	r1, r7
 8000a4e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000a52:	481f      	ldr	r0, [pc, #124]	; (8000ad0 <fsm_manual_run+0x3f4>)
 8000a54:	f003 f9aa 	bl	8003dac <HAL_UART_Transmit>
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "\r\n!7SEG2: %d#\r\n\n\n",timerTraffic2), 500);
 8000a58:	4b1e      	ldr	r3, [pc, #120]	; (8000ad4 <fsm_manual_run+0x3f8>)
 8000a5a:	681a      	ldr	r2, [r3, #0]
 8000a5c:	463b      	mov	r3, r7
 8000a5e:	491e      	ldr	r1, [pc, #120]	; (8000ad8 <fsm_manual_run+0x3fc>)
 8000a60:	4618      	mov	r0, r3
 8000a62:	f003 ffa9 	bl	80049b8 <siprintf>
 8000a66:	4603      	mov	r3, r0
 8000a68:	b29a      	uxth	r2, r3
 8000a6a:	4639      	mov	r1, r7
 8000a6c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000a70:	4817      	ldr	r0, [pc, #92]	; (8000ad0 <fsm_manual_run+0x3f4>)
 8000a72:	f003 f99b 	bl	8003dac <HAL_UART_Transmit>
			break;
 8000a76:	e005      	b.n	8000a84 <fsm_manual_run+0x3a8>
			break;
 8000a78:	bf00      	nop
 8000a7a:	e004      	b.n	8000a86 <fsm_manual_run+0x3aa>
			break;
 8000a7c:	bf00      	nop
 8000a7e:	e002      	b.n	8000a86 <fsm_manual_run+0x3aa>
			break;
 8000a80:	bf00      	nop
 8000a82:	e000      	b.n	8000a86 <fsm_manual_run+0x3aa>
			break;
 8000a84:	bf00      	nop
	}
	// Check time out
	if(status == MOD_RED || status == MOD_YELLOW || status == MOD_GREEN){
 8000a86:	4b15      	ldr	r3, [pc, #84]	; (8000adc <fsm_manual_run+0x400>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	2b0b      	cmp	r3, #11
 8000a8c:	d007      	beq.n	8000a9e <fsm_manual_run+0x3c2>
 8000a8e:	4b13      	ldr	r3, [pc, #76]	; (8000adc <fsm_manual_run+0x400>)
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	2b0c      	cmp	r3, #12
 8000a94:	d003      	beq.n	8000a9e <fsm_manual_run+0x3c2>
 8000a96:	4b11      	ldr	r3, [pc, #68]	; (8000adc <fsm_manual_run+0x400>)
 8000a98:	681b      	ldr	r3, [r3, #0]
 8000a9a:	2b0d      	cmp	r3, #13
 8000a9c:	d105      	bne.n	8000aaa <fsm_manual_run+0x3ce>
		// Go back to automatic...
		if(timerFlag[5] == 1) returnAutomatic();
 8000a9e:	4b10      	ldr	r3, [pc, #64]	; (8000ae0 <fsm_manual_run+0x404>)
 8000aa0:	695b      	ldr	r3, [r3, #20]
 8000aa2:	2b01      	cmp	r3, #1
 8000aa4:	d101      	bne.n	8000aaa <fsm_manual_run+0x3ce>
 8000aa6:	f7ff fddf 	bl	8000668 <returnAutomatic>
	}
}
 8000aaa:	bf00      	nop
 8000aac:	3738      	adds	r7, #56	; 0x38
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bd80      	pop	{r7, pc}
 8000ab2:	bf00      	nop
 8000ab4:	200000d8 	.word	0x200000d8
 8000ab8:	20000230 	.word	0x20000230
 8000abc:	20000024 	.word	0x20000024
 8000ac0:	2000001c 	.word	0x2000001c
 8000ac4:	20000020 	.word	0x20000020
 8000ac8:	200001ec 	.word	0x200001ec
 8000acc:	08005268 	.word	0x08005268
 8000ad0:	200002cc 	.word	0x200002cc
 8000ad4:	200000dc 	.word	0x200000dc
 8000ad8:	08005278 	.word	0x08005278
 8000adc:	20000018 	.word	0x20000018
 8000ae0:	200001f4 	.word	0x200001f4

08000ae4 <buzzerProcess>:
 8000ae4:	b580      	push	{r7, lr}
 8000ae6:	b082      	sub	sp, #8
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	6078      	str	r0, [r7, #4]
 8000aec:	4a04      	ldr	r2, [pc, #16]	; (8000b00 <buzzerProcess+0x1c>)
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	6013      	str	r3, [r2, #0]
 8000af2:	f001 f98b 	bl	8001e0c <buzzer>
 8000af6:	bf00      	nop
 8000af8:	3708      	adds	r7, #8
 8000afa:	46bd      	mov	sp, r7
 8000afc:	bd80      	pop	{r7, pc}
 8000afe:	bf00      	nop
 8000b00:	200000e0 	.word	0x200000e0

08000b04 <fsm_pedestrian_run>:
 8000b04:	b580      	push	{r7, lr}
 8000b06:	b082      	sub	sp, #8
 8000b08:	af00      	add	r7, sp, #0
 8000b0a:	4b8e      	ldr	r3, [pc, #568]	; (8000d44 <fsm_pedestrian_run+0x240>)
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	4a8e      	ldr	r2, [pc, #568]	; (8000d48 <fsm_pedestrian_run+0x244>)
 8000b10:	fb82 1203 	smull	r1, r2, r2, r3
 8000b14:	1192      	asrs	r2, r2, #6
 8000b16:	17db      	asrs	r3, r3, #31
 8000b18:	1a9b      	subs	r3, r3, r2
 8000b1a:	3305      	adds	r3, #5
 8000b1c:	607b      	str	r3, [r7, #4]
 8000b1e:	4b8b      	ldr	r3, [pc, #556]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000b20:	681b      	ldr	r3, [r3, #0]
 8000b22:	2b03      	cmp	r3, #3
 8000b24:	d039      	beq.n	8000b9a <fsm_pedestrian_run+0x96>
 8000b26:	2b03      	cmp	r3, #3
 8000b28:	f300 8100 	bgt.w	8000d2c <fsm_pedestrian_run+0x228>
 8000b2c:	2b01      	cmp	r3, #1
 8000b2e:	d003      	beq.n	8000b38 <fsm_pedestrian_run+0x34>
 8000b30:	2b02      	cmp	r3, #2
 8000b32:	f000 80d6 	beq.w	8000ce2 <fsm_pedestrian_run+0x1de>
 8000b36:	e0f9      	b.n	8000d2c <fsm_pedestrian_run+0x228>
 8000b38:	2000      	movs	r0, #0
 8000b3a:	f7ff ffd3 	bl	8000ae4 <buzzerProcess>
 8000b3e:	4b84      	ldr	r3, [pc, #528]	; (8000d50 <fsm_pedestrian_run+0x24c>)
 8000b40:	2200      	movs	r2, #0
 8000b42:	601a      	str	r2, [r3, #0]
 8000b44:	210a      	movs	r1, #10
 8000b46:	2003      	movs	r0, #3
 8000b48:	f000 ff64 	bl	8001a14 <setTimer>
 8000b4c:	210a      	movs	r1, #10
 8000b4e:	2004      	movs	r0, #4
 8000b50:	f000 ff60 	bl	8001a14 <setTimer>
 8000b54:	2005      	movs	r0, #5
 8000b56:	f000 fa2d 	bl	8000fb4 <Pedestrian_setColor>
 8000b5a:	4b7e      	ldr	r3, [pc, #504]	; (8000d54 <fsm_pedestrian_run+0x250>)
 8000b5c:	681b      	ldr	r3, [r3, #0]
 8000b5e:	2b01      	cmp	r3, #1
 8000b60:	f040 80e6 	bne.w	8000d30 <fsm_pedestrian_run+0x22c>
 8000b64:	4b7c      	ldr	r3, [pc, #496]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000b66:	681b      	ldr	r3, [r3, #0]
 8000b68:	2b15      	cmp	r3, #21
 8000b6a:	d003      	beq.n	8000b74 <fsm_pedestrian_run+0x70>
 8000b6c:	4b7a      	ldr	r3, [pc, #488]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	2b16      	cmp	r3, #22
 8000b72:	d103      	bne.n	8000b7c <fsm_pedestrian_run+0x78>
 8000b74:	4b75      	ldr	r3, [pc, #468]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000b76:	2203      	movs	r2, #3
 8000b78:	601a      	str	r2, [r3, #0]
 8000b7a:	e00a      	b.n	8000b92 <fsm_pedestrian_run+0x8e>
 8000b7c:	4b76      	ldr	r3, [pc, #472]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	2b18      	cmp	r3, #24
 8000b82:	d003      	beq.n	8000b8c <fsm_pedestrian_run+0x88>
 8000b84:	4b74      	ldr	r3, [pc, #464]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000b86:	681b      	ldr	r3, [r3, #0]
 8000b88:	2b17      	cmp	r3, #23
 8000b8a:	d102      	bne.n	8000b92 <fsm_pedestrian_run+0x8e>
 8000b8c:	4b6f      	ldr	r3, [pc, #444]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000b8e:	2202      	movs	r2, #2
 8000b90:	601a      	str	r2, [r3, #0]
 8000b92:	4b70      	ldr	r3, [pc, #448]	; (8000d54 <fsm_pedestrian_run+0x250>)
 8000b94:	2200      	movs	r2, #0
 8000b96:	601a      	str	r2, [r3, #0]
 8000b98:	e0ca      	b.n	8000d30 <fsm_pedestrian_run+0x22c>
 8000b9a:	2003      	movs	r0, #3
 8000b9c:	f000 fa0a 	bl	8000fb4 <Pedestrian_setColor>
 8000ba0:	4b6e      	ldr	r3, [pc, #440]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000ba2:	689b      	ldr	r3, [r3, #8]
 8000ba4:	2b01      	cmp	r3, #1
 8000ba6:	d103      	bne.n	8000bb0 <fsm_pedestrian_run+0xac>
 8000ba8:	4b68      	ldr	r3, [pc, #416]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000baa:	2201      	movs	r2, #1
 8000bac:	601a      	str	r2, [r3, #0]
 8000bae:	e00a      	b.n	8000bc6 <fsm_pedestrian_run+0xc2>
 8000bb0:	4b69      	ldr	r3, [pc, #420]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	2b18      	cmp	r3, #24
 8000bb6:	d003      	beq.n	8000bc0 <fsm_pedestrian_run+0xbc>
 8000bb8:	4b67      	ldr	r3, [pc, #412]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	2b17      	cmp	r3, #23
 8000bbe:	d102      	bne.n	8000bc6 <fsm_pedestrian_run+0xc2>
 8000bc0:	4b62      	ldr	r3, [pc, #392]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000bc2:	2202      	movs	r2, #2
 8000bc4:	601a      	str	r2, [r3, #0]
 8000bc6:	4b5f      	ldr	r3, [pc, #380]	; (8000d44 <fsm_pedestrian_run+0x240>)
 8000bc8:	681b      	ldr	r3, [r3, #0]
 8000bca:	f241 3287 	movw	r2, #4999	; 0x1387
 8000bce:	4293      	cmp	r3, r2
 8000bd0:	dc55      	bgt.n	8000c7e <fsm_pedestrian_run+0x17a>
 8000bd2:	4b61      	ldr	r3, [pc, #388]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000bd4:	681b      	ldr	r3, [r3, #0]
 8000bd6:	2b15      	cmp	r3, #21
 8000bd8:	d12a      	bne.n	8000c30 <fsm_pedestrian_run+0x12c>
 8000bda:	4b61      	ldr	r3, [pc, #388]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	687a      	ldr	r2, [r7, #4]
 8000be0:	429a      	cmp	r2, r3
 8000be2:	db25      	blt.n	8000c30 <fsm_pedestrian_run+0x12c>
 8000be4:	4b5e      	ldr	r3, [pc, #376]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000be6:	681b      	ldr	r3, [r3, #0]
 8000be8:	687a      	ldr	r2, [r7, #4]
 8000bea:	1ad3      	subs	r3, r2, r3
 8000bec:	4a58      	ldr	r2, [pc, #352]	; (8000d50 <fsm_pedestrian_run+0x24c>)
 8000bee:	6013      	str	r3, [r2, #0]
 8000bf0:	4b5a      	ldr	r3, [pc, #360]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000bf2:	68db      	ldr	r3, [r3, #12]
 8000bf4:	2b01      	cmp	r3, #1
 8000bf6:	d113      	bne.n	8000c20 <fsm_pedestrian_run+0x11c>
 8000bf8:	4b55      	ldr	r3, [pc, #340]	; (8000d50 <fsm_pedestrian_run+0x24c>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	3301      	adds	r3, #1
 8000bfe:	025b      	lsls	r3, r3, #9
 8000c00:	4618      	mov	r0, r3
 8000c02:	f7ff ff6f 	bl	8000ae4 <buzzerProcess>
 8000c06:	4b52      	ldr	r3, [pc, #328]	; (8000d50 <fsm_pedestrian_run+0x24c>)
 8000c08:	681b      	ldr	r3, [r3, #0]
 8000c0a:	4a56      	ldr	r2, [pc, #344]	; (8000d64 <fsm_pedestrian_run+0x260>)
 8000c0c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000c10:	4619      	mov	r1, r3
 8000c12:	2003      	movs	r0, #3
 8000c14:	f000 fefe 	bl	8001a14 <setTimer>
 8000c18:	2114      	movs	r1, #20
 8000c1a:	2004      	movs	r0, #4
 8000c1c:	f000 fefa 	bl	8001a14 <setTimer>
 8000c20:	4b4e      	ldr	r3, [pc, #312]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000c22:	691b      	ldr	r3, [r3, #16]
 8000c24:	2b01      	cmp	r3, #1
 8000c26:	d15b      	bne.n	8000ce0 <fsm_pedestrian_run+0x1dc>
 8000c28:	2000      	movs	r0, #0
 8000c2a:	f7ff ff5b 	bl	8000ae4 <buzzerProcess>
 8000c2e:	e057      	b.n	8000ce0 <fsm_pedestrian_run+0x1dc>
 8000c30:	4b49      	ldr	r3, [pc, #292]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	2b16      	cmp	r3, #22
 8000c36:	d17d      	bne.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c38:	4b48      	ldr	r3, [pc, #288]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000c3a:	68db      	ldr	r3, [r3, #12]
 8000c3c:	2b01      	cmp	r3, #1
 8000c3e:	d116      	bne.n	8000c6e <fsm_pedestrian_run+0x16a>
 8000c40:	4b47      	ldr	r3, [pc, #284]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	f1c3 0306 	rsb	r3, r3, #6
 8000c48:	025b      	lsls	r3, r3, #9
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	f7ff ff4a 	bl	8000ae4 <buzzerProcess>
 8000c50:	4b43      	ldr	r3, [pc, #268]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000c52:	681b      	ldr	r3, [r3, #0]
 8000c54:	f1c3 0305 	rsb	r3, r3, #5
 8000c58:	4a42      	ldr	r2, [pc, #264]	; (8000d64 <fsm_pedestrian_run+0x260>)
 8000c5a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000c5e:	4619      	mov	r1, r3
 8000c60:	2003      	movs	r0, #3
 8000c62:	f000 fed7 	bl	8001a14 <setTimer>
 8000c66:	2114      	movs	r1, #20
 8000c68:	2004      	movs	r0, #4
 8000c6a:	f000 fed3 	bl	8001a14 <setTimer>
 8000c6e:	4b3b      	ldr	r3, [pc, #236]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000c70:	691b      	ldr	r3, [r3, #16]
 8000c72:	2b01      	cmp	r3, #1
 8000c74:	d15e      	bne.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c76:	2000      	movs	r0, #0
 8000c78:	f7ff ff34 	bl	8000ae4 <buzzerProcess>
 8000c7c:	e05a      	b.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c7e:	4b31      	ldr	r3, [pc, #196]	; (8000d44 <fsm_pedestrian_run+0x240>)
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	f241 3287 	movw	r2, #4999	; 0x1387
 8000c86:	4293      	cmp	r3, r2
 8000c88:	dd54      	ble.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c8a:	4b33      	ldr	r3, [pc, #204]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	2b16      	cmp	r3, #22
 8000c90:	d150      	bne.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c92:	4b33      	ldr	r3, [pc, #204]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000c94:	681b      	ldr	r3, [r3, #0]
 8000c96:	2b05      	cmp	r3, #5
 8000c98:	dc4c      	bgt.n	8000d34 <fsm_pedestrian_run+0x230>
 8000c9a:	4b30      	ldr	r3, [pc, #192]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000c9c:	68db      	ldr	r3, [r3, #12]
 8000c9e:	2b01      	cmp	r3, #1
 8000ca0:	d116      	bne.n	8000cd0 <fsm_pedestrian_run+0x1cc>
 8000ca2:	4b2f      	ldr	r3, [pc, #188]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	f1c3 0306 	rsb	r3, r3, #6
 8000caa:	025b      	lsls	r3, r3, #9
 8000cac:	4618      	mov	r0, r3
 8000cae:	f7ff ff19 	bl	8000ae4 <buzzerProcess>
 8000cb2:	4b2b      	ldr	r3, [pc, #172]	; (8000d60 <fsm_pedestrian_run+0x25c>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	f1c3 0305 	rsb	r3, r3, #5
 8000cba:	4a2a      	ldr	r2, [pc, #168]	; (8000d64 <fsm_pedestrian_run+0x260>)
 8000cbc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cc0:	4619      	mov	r1, r3
 8000cc2:	2003      	movs	r0, #3
 8000cc4:	f000 fea6 	bl	8001a14 <setTimer>
 8000cc8:	2114      	movs	r1, #20
 8000cca:	2004      	movs	r0, #4
 8000ccc:	f000 fea2 	bl	8001a14 <setTimer>
 8000cd0:	4b22      	ldr	r3, [pc, #136]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000cd2:	691b      	ldr	r3, [r3, #16]
 8000cd4:	2b01      	cmp	r3, #1
 8000cd6:	d12d      	bne.n	8000d34 <fsm_pedestrian_run+0x230>
 8000cd8:	2000      	movs	r0, #0
 8000cda:	f7ff ff03 	bl	8000ae4 <buzzerProcess>
 8000cde:	e029      	b.n	8000d34 <fsm_pedestrian_run+0x230>
 8000ce0:	e028      	b.n	8000d34 <fsm_pedestrian_run+0x230>
 8000ce2:	2000      	movs	r0, #0
 8000ce4:	f7ff fefe 	bl	8000ae4 <buzzerProcess>
 8000ce8:	4b19      	ldr	r3, [pc, #100]	; (8000d50 <fsm_pedestrian_run+0x24c>)
 8000cea:	2200      	movs	r2, #0
 8000cec:	601a      	str	r2, [r3, #0]
 8000cee:	210a      	movs	r1, #10
 8000cf0:	2003      	movs	r0, #3
 8000cf2:	f000 fe8f 	bl	8001a14 <setTimer>
 8000cf6:	210a      	movs	r1, #10
 8000cf8:	2004      	movs	r0, #4
 8000cfa:	f000 fe8b 	bl	8001a14 <setTimer>
 8000cfe:	2002      	movs	r0, #2
 8000d00:	f000 f958 	bl	8000fb4 <Pedestrian_setColor>
 8000d04:	4b15      	ldr	r3, [pc, #84]	; (8000d5c <fsm_pedestrian_run+0x258>)
 8000d06:	689b      	ldr	r3, [r3, #8]
 8000d08:	2b01      	cmp	r3, #1
 8000d0a:	d103      	bne.n	8000d14 <fsm_pedestrian_run+0x210>
 8000d0c:	4b0f      	ldr	r3, [pc, #60]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000d0e:	2201      	movs	r2, #1
 8000d10:	601a      	str	r2, [r3, #0]
 8000d12:	e011      	b.n	8000d38 <fsm_pedestrian_run+0x234>
 8000d14:	4b10      	ldr	r3, [pc, #64]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	2b15      	cmp	r3, #21
 8000d1a:	d003      	beq.n	8000d24 <fsm_pedestrian_run+0x220>
 8000d1c:	4b0e      	ldr	r3, [pc, #56]	; (8000d58 <fsm_pedestrian_run+0x254>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	2b16      	cmp	r3, #22
 8000d22:	d109      	bne.n	8000d38 <fsm_pedestrian_run+0x234>
 8000d24:	4b09      	ldr	r3, [pc, #36]	; (8000d4c <fsm_pedestrian_run+0x248>)
 8000d26:	2203      	movs	r2, #3
 8000d28:	601a      	str	r2, [r3, #0]
 8000d2a:	e005      	b.n	8000d38 <fsm_pedestrian_run+0x234>
 8000d2c:	bf00      	nop
 8000d2e:	e004      	b.n	8000d3a <fsm_pedestrian_run+0x236>
 8000d30:	bf00      	nop
 8000d32:	e002      	b.n	8000d3a <fsm_pedestrian_run+0x236>
 8000d34:	bf00      	nop
 8000d36:	e000      	b.n	8000d3a <fsm_pedestrian_run+0x236>
 8000d38:	bf00      	nop
 8000d3a:	bf00      	nop
 8000d3c:	3708      	adds	r7, #8
 8000d3e:	46bd      	mov	sp, r7
 8000d40:	bd80      	pop	{r7, pc}
 8000d42:	bf00      	nop
 8000d44:	20000020 	.word	0x20000020
 8000d48:	10624dd3 	.word	0x10624dd3
 8000d4c:	20000000 	.word	0x20000000
 8000d50:	200000d4 	.word	0x200000d4
 8000d54:	200000d0 	.word	0x200000d0
 8000d58:	20000018 	.word	0x20000018
 8000d5c:	200001f4 	.word	0x200001f4
 8000d60:	200000dc 	.word	0x200000dc
 8000d64:	20000004 	.word	0x20000004

08000d68 <blinkLEDs>:
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0
 8000d6e:	6078      	str	r0, [r7, #4]
 8000d70:	6039      	str	r1, [r7, #0]
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	2b07      	cmp	r3, #7
 8000d76:	d13c      	bne.n	8000df2 <blinkLEDs+0x8a>
 8000d78:	4b42      	ldr	r3, [pc, #264]	; (8000e84 <blinkLEDs+0x11c>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	f1c3 0301 	rsb	r3, r3, #1
 8000d80:	4a40      	ldr	r2, [pc, #256]	; (8000e84 <blinkLEDs+0x11c>)
 8000d82:	6013      	str	r3, [r2, #0]
 8000d84:	683b      	ldr	r3, [r7, #0]
 8000d86:	2b04      	cmp	r3, #4
 8000d88:	d017      	beq.n	8000dba <blinkLEDs+0x52>
 8000d8a:	683b      	ldr	r3, [r7, #0]
 8000d8c:	2b04      	cmp	r3, #4
 8000d8e:	dc70      	bgt.n	8000e72 <blinkLEDs+0x10a>
 8000d90:	683b      	ldr	r3, [r7, #0]
 8000d92:	2b02      	cmp	r3, #2
 8000d94:	d003      	beq.n	8000d9e <blinkLEDs+0x36>
 8000d96:	683b      	ldr	r3, [r7, #0]
 8000d98:	2b03      	cmp	r3, #3
 8000d9a:	d01c      	beq.n	8000dd6 <blinkLEDs+0x6e>
 8000d9c:	e069      	b.n	8000e72 <blinkLEDs+0x10a>
 8000d9e:	4b39      	ldr	r3, [pc, #228]	; (8000e84 <blinkLEDs+0x11c>)
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d004      	beq.n	8000db0 <blinkLEDs+0x48>
 8000da6:	2102      	movs	r1, #2
 8000da8:	2001      	movs	r0, #1
 8000daa:	f000 f86f 	bl	8000e8c <Traffic_setColor>
 8000dae:	e065      	b.n	8000e7c <blinkLEDs+0x114>
 8000db0:	2105      	movs	r1, #5
 8000db2:	2001      	movs	r0, #1
 8000db4:	f000 f86a 	bl	8000e8c <Traffic_setColor>
 8000db8:	e060      	b.n	8000e7c <blinkLEDs+0x114>
 8000dba:	4b32      	ldr	r3, [pc, #200]	; (8000e84 <blinkLEDs+0x11c>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d004      	beq.n	8000dcc <blinkLEDs+0x64>
 8000dc2:	2104      	movs	r1, #4
 8000dc4:	2001      	movs	r0, #1
 8000dc6:	f000 f861 	bl	8000e8c <Traffic_setColor>
 8000dca:	e057      	b.n	8000e7c <blinkLEDs+0x114>
 8000dcc:	2105      	movs	r1, #5
 8000dce:	2001      	movs	r0, #1
 8000dd0:	f000 f85c 	bl	8000e8c <Traffic_setColor>
 8000dd4:	e052      	b.n	8000e7c <blinkLEDs+0x114>
 8000dd6:	4b2b      	ldr	r3, [pc, #172]	; (8000e84 <blinkLEDs+0x11c>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	d004      	beq.n	8000de8 <blinkLEDs+0x80>
 8000dde:	2103      	movs	r1, #3
 8000de0:	2001      	movs	r0, #1
 8000de2:	f000 f853 	bl	8000e8c <Traffic_setColor>
 8000de6:	e049      	b.n	8000e7c <blinkLEDs+0x114>
 8000de8:	2105      	movs	r1, #5
 8000dea:	2001      	movs	r0, #1
 8000dec:	f000 f84e 	bl	8000e8c <Traffic_setColor>
 8000df0:	e044      	b.n	8000e7c <blinkLEDs+0x114>
 8000df2:	687b      	ldr	r3, [r7, #4]
 8000df4:	2b08      	cmp	r3, #8
 8000df6:	d13e      	bne.n	8000e76 <blinkLEDs+0x10e>
 8000df8:	4b23      	ldr	r3, [pc, #140]	; (8000e88 <blinkLEDs+0x120>)
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	f1c3 0301 	rsb	r3, r3, #1
 8000e00:	4a21      	ldr	r2, [pc, #132]	; (8000e88 <blinkLEDs+0x120>)
 8000e02:	6013      	str	r3, [r2, #0]
 8000e04:	683b      	ldr	r3, [r7, #0]
 8000e06:	2b04      	cmp	r3, #4
 8000e08:	d017      	beq.n	8000e3a <blinkLEDs+0xd2>
 8000e0a:	683b      	ldr	r3, [r7, #0]
 8000e0c:	2b04      	cmp	r3, #4
 8000e0e:	dc34      	bgt.n	8000e7a <blinkLEDs+0x112>
 8000e10:	683b      	ldr	r3, [r7, #0]
 8000e12:	2b02      	cmp	r3, #2
 8000e14:	d003      	beq.n	8000e1e <blinkLEDs+0xb6>
 8000e16:	683b      	ldr	r3, [r7, #0]
 8000e18:	2b03      	cmp	r3, #3
 8000e1a:	d01c      	beq.n	8000e56 <blinkLEDs+0xee>
 8000e1c:	e02d      	b.n	8000e7a <blinkLEDs+0x112>
 8000e1e:	4b1a      	ldr	r3, [pc, #104]	; (8000e88 <blinkLEDs+0x120>)
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	2b00      	cmp	r3, #0
 8000e24:	d004      	beq.n	8000e30 <blinkLEDs+0xc8>
 8000e26:	2102      	movs	r1, #2
 8000e28:	2002      	movs	r0, #2
 8000e2a:	f000 f82f 	bl	8000e8c <Traffic_setColor>
 8000e2e:	e025      	b.n	8000e7c <blinkLEDs+0x114>
 8000e30:	2105      	movs	r1, #5
 8000e32:	2002      	movs	r0, #2
 8000e34:	f000 f82a 	bl	8000e8c <Traffic_setColor>
 8000e38:	e020      	b.n	8000e7c <blinkLEDs+0x114>
 8000e3a:	4b13      	ldr	r3, [pc, #76]	; (8000e88 <blinkLEDs+0x120>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	d004      	beq.n	8000e4c <blinkLEDs+0xe4>
 8000e42:	2104      	movs	r1, #4
 8000e44:	2002      	movs	r0, #2
 8000e46:	f000 f821 	bl	8000e8c <Traffic_setColor>
 8000e4a:	e017      	b.n	8000e7c <blinkLEDs+0x114>
 8000e4c:	2105      	movs	r1, #5
 8000e4e:	2002      	movs	r0, #2
 8000e50:	f000 f81c 	bl	8000e8c <Traffic_setColor>
 8000e54:	e012      	b.n	8000e7c <blinkLEDs+0x114>
 8000e56:	4b0c      	ldr	r3, [pc, #48]	; (8000e88 <blinkLEDs+0x120>)
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d004      	beq.n	8000e68 <blinkLEDs+0x100>
 8000e5e:	2103      	movs	r1, #3
 8000e60:	2002      	movs	r0, #2
 8000e62:	f000 f813 	bl	8000e8c <Traffic_setColor>
 8000e66:	e009      	b.n	8000e7c <blinkLEDs+0x114>
 8000e68:	2105      	movs	r1, #5
 8000e6a:	2002      	movs	r0, #2
 8000e6c:	f000 f80e 	bl	8000e8c <Traffic_setColor>
 8000e70:	e004      	b.n	8000e7c <blinkLEDs+0x114>
 8000e72:	bf00      	nop
 8000e74:	e002      	b.n	8000e7c <blinkLEDs+0x114>
 8000e76:	bf00      	nop
 8000e78:	e000      	b.n	8000e7c <blinkLEDs+0x114>
 8000e7a:	bf00      	nop
 8000e7c:	bf00      	nop
 8000e7e:	3708      	adds	r7, #8
 8000e80:	46bd      	mov	sp, r7
 8000e82:	bd80      	pop	{r7, pc}
 8000e84:	200000e4 	.word	0x200000e4
 8000e88:	200000e8 	.word	0x200000e8

08000e8c <Traffic_setColor>:
 8000e8c:	b580      	push	{r7, lr}
 8000e8e:	b082      	sub	sp, #8
 8000e90:	af00      	add	r7, sp, #0
 8000e92:	6078      	str	r0, [r7, #4]
 8000e94:	6039      	str	r1, [r7, #0]
 8000e96:	687b      	ldr	r3, [r7, #4]
 8000e98:	2b01      	cmp	r3, #1
 8000e9a:	d13f      	bne.n	8000f1c <Traffic_setColor+0x90>
 8000e9c:	683b      	ldr	r3, [r7, #0]
 8000e9e:	3b02      	subs	r3, #2
 8000ea0:	2b03      	cmp	r3, #3
 8000ea2:	d879      	bhi.n	8000f98 <Traffic_setColor+0x10c>
 8000ea4:	a201      	add	r2, pc, #4	; (adr r2, 8000eac <Traffic_setColor+0x20>)
 8000ea6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000eaa:	bf00      	nop
 8000eac:	08000ebd 	.word	0x08000ebd
 8000eb0:	08000eed 	.word	0x08000eed
 8000eb4:	08000ed5 	.word	0x08000ed5
 8000eb8:	08000f05 	.word	0x08000f05
 8000ebc:	2210      	movs	r2, #16
 8000ebe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ec2:	483a      	ldr	r0, [pc, #232]	; (8000fac <Traffic_setColor+0x120>)
 8000ec4:	f001 fb95 	bl	80025f2 <HAL_GPIO_WritePin>
 8000ec8:	2200      	movs	r2, #0
 8000eca:	2108      	movs	r1, #8
 8000ecc:	4838      	ldr	r0, [pc, #224]	; (8000fb0 <Traffic_setColor+0x124>)
 8000ece:	f001 fb90 	bl	80025f2 <HAL_GPIO_WritePin>
 8000ed2:	e066      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000ed4:	2210      	movs	r2, #16
 8000ed6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000eda:	4834      	ldr	r0, [pc, #208]	; (8000fac <Traffic_setColor+0x120>)
 8000edc:	f001 fb89 	bl	80025f2 <HAL_GPIO_WritePin>
 8000ee0:	2210      	movs	r2, #16
 8000ee2:	2108      	movs	r1, #8
 8000ee4:	4832      	ldr	r0, [pc, #200]	; (8000fb0 <Traffic_setColor+0x124>)
 8000ee6:	f001 fb84 	bl	80025f2 <HAL_GPIO_WritePin>
 8000eea:	e05a      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000eec:	2200      	movs	r2, #0
 8000eee:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ef2:	482e      	ldr	r0, [pc, #184]	; (8000fac <Traffic_setColor+0x120>)
 8000ef4:	f001 fb7d 	bl	80025f2 <HAL_GPIO_WritePin>
 8000ef8:	2210      	movs	r2, #16
 8000efa:	2108      	movs	r1, #8
 8000efc:	482c      	ldr	r0, [pc, #176]	; (8000fb0 <Traffic_setColor+0x124>)
 8000efe:	f001 fb78 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f02:	e04e      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f04:	2200      	movs	r2, #0
 8000f06:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f0a:	4828      	ldr	r0, [pc, #160]	; (8000fac <Traffic_setColor+0x120>)
 8000f0c:	f001 fb71 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f10:	2200      	movs	r2, #0
 8000f12:	2108      	movs	r1, #8
 8000f14:	4826      	ldr	r0, [pc, #152]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f16:	f001 fb6c 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f1a:	e042      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f1c:	687b      	ldr	r3, [r7, #4]
 8000f1e:	2b02      	cmp	r3, #2
 8000f20:	d13c      	bne.n	8000f9c <Traffic_setColor+0x110>
 8000f22:	683b      	ldr	r3, [r7, #0]
 8000f24:	3b02      	subs	r3, #2
 8000f26:	2b03      	cmp	r3, #3
 8000f28:	d83a      	bhi.n	8000fa0 <Traffic_setColor+0x114>
 8000f2a:	a201      	add	r2, pc, #4	; (adr r2, 8000f30 <Traffic_setColor+0xa4>)
 8000f2c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f30:	08000f41 	.word	0x08000f41
 8000f34:	08000f6d 	.word	0x08000f6d
 8000f38:	08000f57 	.word	0x08000f57
 8000f3c:	08000f83 	.word	0x08000f83
 8000f40:	2210      	movs	r2, #16
 8000f42:	2120      	movs	r1, #32
 8000f44:	481a      	ldr	r0, [pc, #104]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f46:	f001 fb54 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f4a:	2200      	movs	r2, #0
 8000f4c:	2110      	movs	r1, #16
 8000f4e:	4818      	ldr	r0, [pc, #96]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f50:	f001 fb4f 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f54:	e025      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f56:	2210      	movs	r2, #16
 8000f58:	2120      	movs	r1, #32
 8000f5a:	4815      	ldr	r0, [pc, #84]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f5c:	f001 fb49 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f60:	2210      	movs	r2, #16
 8000f62:	2110      	movs	r1, #16
 8000f64:	4812      	ldr	r0, [pc, #72]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f66:	f001 fb44 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f6a:	e01a      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f6c:	2200      	movs	r2, #0
 8000f6e:	2120      	movs	r1, #32
 8000f70:	480f      	ldr	r0, [pc, #60]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f72:	f001 fb3e 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f76:	2210      	movs	r2, #16
 8000f78:	2110      	movs	r1, #16
 8000f7a:	480d      	ldr	r0, [pc, #52]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f7c:	f001 fb39 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f80:	e00f      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f82:	2200      	movs	r2, #0
 8000f84:	2120      	movs	r1, #32
 8000f86:	480a      	ldr	r0, [pc, #40]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f88:	f001 fb33 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f8c:	2200      	movs	r2, #0
 8000f8e:	2110      	movs	r1, #16
 8000f90:	4807      	ldr	r0, [pc, #28]	; (8000fb0 <Traffic_setColor+0x124>)
 8000f92:	f001 fb2e 	bl	80025f2 <HAL_GPIO_WritePin>
 8000f96:	e004      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f98:	bf00      	nop
 8000f9a:	e002      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000f9c:	bf00      	nop
 8000f9e:	e000      	b.n	8000fa2 <Traffic_setColor+0x116>
 8000fa0:	bf00      	nop
 8000fa2:	bf00      	nop
 8000fa4:	3708      	adds	r7, #8
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bd80      	pop	{r7, pc}
 8000faa:	bf00      	nop
 8000fac:	40010800 	.word	0x40010800
 8000fb0:	40010c00 	.word	0x40010c00

08000fb4 <Pedestrian_setColor>:
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	b082      	sub	sp, #8
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	6078      	str	r0, [r7, #4]
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	2b02      	cmp	r3, #2
 8000fc0:	d10c      	bne.n	8000fdc <Pedestrian_setColor+0x28>
 8000fc2:	2210      	movs	r2, #16
 8000fc4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000fc8:	4816      	ldr	r0, [pc, #88]	; (8001024 <Pedestrian_setColor+0x70>)
 8000fca:	f001 fb12 	bl	80025f2 <HAL_GPIO_WritePin>
 8000fce:	2200      	movs	r2, #0
 8000fd0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000fd4:	4814      	ldr	r0, [pc, #80]	; (8001028 <Pedestrian_setColor+0x74>)
 8000fd6:	f001 fb0c 	bl	80025f2 <HAL_GPIO_WritePin>
 8000fda:	e01e      	b.n	800101a <Pedestrian_setColor+0x66>
 8000fdc:	687b      	ldr	r3, [r7, #4]
 8000fde:	2b03      	cmp	r3, #3
 8000fe0:	d10c      	bne.n	8000ffc <Pedestrian_setColor+0x48>
 8000fe2:	2200      	movs	r2, #0
 8000fe4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000fe8:	480e      	ldr	r0, [pc, #56]	; (8001024 <Pedestrian_setColor+0x70>)
 8000fea:	f001 fb02 	bl	80025f2 <HAL_GPIO_WritePin>
 8000fee:	2210      	movs	r2, #16
 8000ff0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000ff4:	480c      	ldr	r0, [pc, #48]	; (8001028 <Pedestrian_setColor+0x74>)
 8000ff6:	f001 fafc 	bl	80025f2 <HAL_GPIO_WritePin>
 8000ffa:	e00e      	b.n	800101a <Pedestrian_setColor+0x66>
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	2b05      	cmp	r3, #5
 8001000:	d10b      	bne.n	800101a <Pedestrian_setColor+0x66>
 8001002:	2200      	movs	r2, #0
 8001004:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001008:	4806      	ldr	r0, [pc, #24]	; (8001024 <Pedestrian_setColor+0x70>)
 800100a:	f001 faf2 	bl	80025f2 <HAL_GPIO_WritePin>
 800100e:	2200      	movs	r2, #0
 8001010:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001014:	4804      	ldr	r0, [pc, #16]	; (8001028 <Pedestrian_setColor+0x74>)
 8001016:	f001 faec 	bl	80025f2 <HAL_GPIO_WritePin>
 800101a:	bf00      	nop
 800101c:	3708      	adds	r7, #8
 800101e:	46bd      	mov	sp, r7
 8001020:	bd80      	pop	{r7, pc}
 8001022:	bf00      	nop
 8001024:	40010c00 	.word	0x40010c00
 8001028:	40010800 	.word	0x40010800

0800102c <button_reading>:
int buttonTimeOut[NO_OF_BUTTONS] = {0};

uint16_t pins[NO_OF_BUTTONS] = {A0_Pin, A1_Pin, A2_Pin, A3_Pin};
GPIO_TypeDef* ports[NO_OF_BUTTONS] = {A0_GPIO_Port, A1_GPIO_Port, A2_GPIO_Port, A3_GPIO_Port};

void button_reading(){
 800102c:	b580      	push	{r7, lr}
 800102e:	b082      	sub	sp, #8
 8001030:	af00      	add	r7, sp, #0
	for(int i = 0; i < NO_OF_BUTTONS; i++){
 8001032:	2300      	movs	r3, #0
 8001034:	607b      	str	r3, [r7, #4]
 8001036:	e073      	b.n	8001120 <button_reading+0xf4>
		debounceButtonBuffer3[i] = debounceButtonBuffer2[i];
 8001038:	4a3d      	ldr	r2, [pc, #244]	; (8001130 <button_reading+0x104>)
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	4413      	add	r3, r2
 800103e:	7819      	ldrb	r1, [r3, #0]
 8001040:	4a3c      	ldr	r2, [pc, #240]	; (8001134 <button_reading+0x108>)
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	4413      	add	r3, r2
 8001046:	460a      	mov	r2, r1
 8001048:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 800104a:	4a3b      	ldr	r2, [pc, #236]	; (8001138 <button_reading+0x10c>)
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	4413      	add	r3, r2
 8001050:	7819      	ldrb	r1, [r3, #0]
 8001052:	4a37      	ldr	r2, [pc, #220]	; (8001130 <button_reading+0x104>)
 8001054:	687b      	ldr	r3, [r7, #4]
 8001056:	4413      	add	r3, r2
 8001058:	460a      	mov	r2, r1
 800105a:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = HAL_GPIO_ReadPin(ports[i], pins[i]);
 800105c:	4a37      	ldr	r2, [pc, #220]	; (800113c <button_reading+0x110>)
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001064:	4936      	ldr	r1, [pc, #216]	; (8001140 <button_reading+0x114>)
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 800106c:	4619      	mov	r1, r3
 800106e:	4610      	mov	r0, r2
 8001070:	f001 faa8 	bl	80025c4 <HAL_GPIO_ReadPin>
 8001074:	4603      	mov	r3, r0
 8001076:	4619      	mov	r1, r3
 8001078:	4a2f      	ldr	r2, [pc, #188]	; (8001138 <button_reading+0x10c>)
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	4413      	add	r3, r2
 800107e:	460a      	mov	r2, r1
 8001080:	701a      	strb	r2, [r3, #0]
		if((debounceButtonBuffer3[i] == debounceButtonBuffer2[i]) && (debounceButtonBuffer2[i] == debounceButtonBuffer1[i])){
 8001082:	4a2c      	ldr	r2, [pc, #176]	; (8001134 <button_reading+0x108>)
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	4413      	add	r3, r2
 8001088:	781a      	ldrb	r2, [r3, #0]
 800108a:	4929      	ldr	r1, [pc, #164]	; (8001130 <button_reading+0x104>)
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	440b      	add	r3, r1
 8001090:	781b      	ldrb	r3, [r3, #0]
 8001092:	429a      	cmp	r2, r3
 8001094:	d141      	bne.n	800111a <button_reading+0xee>
 8001096:	4a26      	ldr	r2, [pc, #152]	; (8001130 <button_reading+0x104>)
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	4413      	add	r3, r2
 800109c:	781a      	ldrb	r2, [r3, #0]
 800109e:	4926      	ldr	r1, [pc, #152]	; (8001138 <button_reading+0x10c>)
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	440b      	add	r3, r1
 80010a4:	781b      	ldrb	r3, [r3, #0]
 80010a6:	429a      	cmp	r2, r3
 80010a8:	d137      	bne.n	800111a <button_reading+0xee>
			if(debounceButtonBuffer1[i] != buttonBuffer[i]){
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <button_reading+0x10c>)
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	4413      	add	r3, r2
 80010b0:	781a      	ldrb	r2, [r3, #0]
 80010b2:	4924      	ldr	r1, [pc, #144]	; (8001144 <button_reading+0x118>)
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	440b      	add	r3, r1
 80010b8:	781b      	ldrb	r3, [r3, #0]
 80010ba:	429a      	cmp	r2, r3
 80010bc:	d019      	beq.n	80010f2 <button_reading+0xc6>
				buttonBuffer[i] = debounceButtonBuffer1[i];
 80010be:	4a1e      	ldr	r2, [pc, #120]	; (8001138 <button_reading+0x10c>)
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	4413      	add	r3, r2
 80010c4:	7819      	ldrb	r1, [r3, #0]
 80010c6:	4a1f      	ldr	r2, [pc, #124]	; (8001144 <button_reading+0x118>)
 80010c8:	687b      	ldr	r3, [r7, #4]
 80010ca:	4413      	add	r3, r2
 80010cc:	460a      	mov	r2, r1
 80010ce:	701a      	strb	r2, [r3, #0]
				if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 80010d0:	4a1c      	ldr	r2, [pc, #112]	; (8001144 <button_reading+0x118>)
 80010d2:	687b      	ldr	r3, [r7, #4]
 80010d4:	4413      	add	r3, r2
 80010d6:	781b      	ldrb	r3, [r3, #0]
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d11e      	bne.n	800111a <button_reading+0xee>
					buttonFlag[i] = 1;
 80010dc:	4a1a      	ldr	r2, [pc, #104]	; (8001148 <button_reading+0x11c>)
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	2101      	movs	r1, #1
 80010e2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
					buttonTimeOut[i] = 100;
 80010e6:	4a19      	ldr	r2, [pc, #100]	; (800114c <button_reading+0x120>)
 80010e8:	687b      	ldr	r3, [r7, #4]
 80010ea:	2164      	movs	r1, #100	; 0x64
 80010ec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80010f0:	e013      	b.n	800111a <button_reading+0xee>
				}
			}
			else{
				buttonTimeOut[i]--;
 80010f2:	4a16      	ldr	r2, [pc, #88]	; (800114c <button_reading+0x120>)
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010fa:	1e5a      	subs	r2, r3, #1
 80010fc:	4913      	ldr	r1, [pc, #76]	; (800114c <button_reading+0x120>)
 80010fe:	687b      	ldr	r3, [r7, #4]
 8001100:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				if(buttonTimeOut[i] <= 0){
 8001104:	4a11      	ldr	r2, [pc, #68]	; (800114c <button_reading+0x120>)
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800110c:	2b00      	cmp	r3, #0
 800110e:	dc04      	bgt.n	800111a <button_reading+0xee>
					buttonBuffer[i] = BUTTON_IS_RELEASED;
 8001110:	4a0c      	ldr	r2, [pc, #48]	; (8001144 <button_reading+0x118>)
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	4413      	add	r3, r2
 8001116:	2201      	movs	r2, #1
 8001118:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < NO_OF_BUTTONS; i++){
 800111a:	687b      	ldr	r3, [r7, #4]
 800111c:	3301      	adds	r3, #1
 800111e:	607b      	str	r3, [r7, #4]
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	2b03      	cmp	r3, #3
 8001124:	dd88      	ble.n	8001038 <button_reading+0xc>
				}
			}
		}
	}
}
 8001126:	bf00      	nop
 8001128:	bf00      	nop
 800112a:	3708      	adds	r7, #8
 800112c:	46bd      	mov	sp, r7
 800112e:	bd80      	pop	{r7, pc}
 8001130:	200000f0 	.word	0x200000f0
 8001134:	200000f4 	.word	0x200000f4
 8001138:	200000ec 	.word	0x200000ec
 800113c:	20000034 	.word	0x20000034
 8001140:	2000002c 	.word	0x2000002c
 8001144:	20000028 	.word	0x20000028
 8001148:	200000f8 	.word	0x200000f8
 800114c:	20000108 	.word	0x20000108

08001150 <isButtonPressed>:

int isButtonPressed(int button_index){
 8001150:	b480      	push	{r7}
 8001152:	b083      	sub	sp, #12
 8001154:	af00      	add	r7, sp, #0
 8001156:	6078      	str	r0, [r7, #4]
	if(button_index >= NO_OF_BUTTONS || button_index < 0) return 0;
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	2b03      	cmp	r3, #3
 800115c:	dc02      	bgt.n	8001164 <isButtonPressed+0x14>
 800115e:	687b      	ldr	r3, [r7, #4]
 8001160:	2b00      	cmp	r3, #0
 8001162:	da01      	bge.n	8001168 <isButtonPressed+0x18>
 8001164:	2300      	movs	r3, #0
 8001166:	e00d      	b.n	8001184 <isButtonPressed+0x34>
	if(buttonFlag[button_index] == 1){
 8001168:	4a09      	ldr	r2, [pc, #36]	; (8001190 <isButtonPressed+0x40>)
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001170:	2b01      	cmp	r3, #1
 8001172:	d106      	bne.n	8001182 <isButtonPressed+0x32>
		buttonFlag[button_index] = 0;
 8001174:	4a06      	ldr	r2, [pc, #24]	; (8001190 <isButtonPressed+0x40>)
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	2100      	movs	r1, #0
 800117a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800117e:	2301      	movs	r3, #1
 8001180:	e000      	b.n	8001184 <isButtonPressed+0x34>
	}
	return 0;
 8001182:	2300      	movs	r3, #0
}
 8001184:	4618      	mov	r0, r3
 8001186:	370c      	adds	r7, #12
 8001188:	46bd      	mov	sp, r7
 800118a:	bc80      	pop	{r7}
 800118c:	4770      	bx	lr
 800118e:	bf00      	nop
 8001190:	200000f8 	.word	0x200000f8

08001194 <setBackButtonFlag>:

void setBackButtonFlag(int index){
 8001194:	b480      	push	{r7}
 8001196:	b083      	sub	sp, #12
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
	buttonFlag[index] = 1;
 800119c:	4a04      	ldr	r2, [pc, #16]	; (80011b0 <setBackButtonFlag+0x1c>)
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	2101      	movs	r1, #1
 80011a2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80011a6:	bf00      	nop
 80011a8:	370c      	adds	r7, #12
 80011aa:	46bd      	mov	sp, r7
 80011ac:	bc80      	pop	{r7}
 80011ae:	4770      	bx	lr
 80011b0:	200000f8 	.word	0x200000f8

080011b4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80011b8:	f000 fe5e 	bl	8001e78 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80011bc:	f000 f85a 	bl	8001274 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80011c0:	f000 f986 	bl	80014d0 <MX_GPIO_Init>
  MX_TIM2_Init();
 80011c4:	f000 f898 	bl	80012f8 <MX_TIM2_Init>
  MX_TIM3_Init();
 80011c8:	f000 f8e2 	bl	8001390 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 80011cc:	f000 f956 	bl	800147c <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 80011d0:	481f      	ldr	r0, [pc, #124]	; (8001250 <main+0x9c>)
 80011d2:	f001 fe85 	bl	8002ee0 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 80011d6:	2100      	movs	r1, #0
 80011d8:	481e      	ldr	r0, [pc, #120]	; (8001254 <main+0xa0>)
 80011da:	f001 ff2b 	bl	8003034 <HAL_TIM_PWM_Start>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  setTimer(0, 10);
 80011de:	210a      	movs	r1, #10
 80011e0:	2000      	movs	r0, #0
 80011e2:	f000 fc17 	bl	8001a14 <setTimer>
  setTimer(1, 10);
 80011e6:	210a      	movs	r1, #10
 80011e8:	2001      	movs	r0, #1
 80011ea:	f000 fc13 	bl	8001a14 <setTimer>
  setTimer(2, 10);
 80011ee:	210a      	movs	r1, #10
 80011f0:	2002      	movs	r0, #2
 80011f2:	f000 fc0f 	bl	8001a14 <setTimer>
  setTimer(3, 10);
 80011f6:	210a      	movs	r1, #10
 80011f8:	2003      	movs	r0, #3
 80011fa:	f000 fc0b 	bl	8001a14 <setTimer>
   SCH_Init();
 80011fe:	f000 f9e5 	bl	80015cc <SCH_Init>
   //blinkLEDs(TRAFFIC_1, AUTO_RED);
   SCH_Add_Task(timerRun, 0, 1);
 8001202:	2201      	movs	r2, #1
 8001204:	2100      	movs	r1, #0
 8001206:	4814      	ldr	r0, [pc, #80]	; (8001258 <main+0xa4>)
 8001208:	f000 fa46 	bl	8001698 <SCH_Add_Task>
   SCH_Add_Task(timerRunSecond, 0, 1);
 800120c:	2201      	movs	r2, #1
 800120e:	2100      	movs	r1, #0
 8001210:	4812      	ldr	r0, [pc, #72]	; (800125c <main+0xa8>)
 8001212:	f000 fa41 	bl	8001698 <SCH_Add_Task>
   SCH_Add_Task(timerRun7SEG, 0, 1);
 8001216:	2201      	movs	r2, #1
 8001218:	2100      	movs	r1, #0
 800121a:	4811      	ldr	r0, [pc, #68]	; (8001260 <main+0xac>)
 800121c:	f000 fa3c 	bl	8001698 <SCH_Add_Task>
   SCH_Add_Task(button_reading, 0, 1);
 8001220:	2201      	movs	r2, #1
 8001222:	2100      	movs	r1, #0
 8001224:	480f      	ldr	r0, [pc, #60]	; (8001264 <main+0xb0>)
 8001226:	f000 fa37 	bl	8001698 <SCH_Add_Task>
   //SCH_Add_Task(update7SEG, 1, 25);
   //SCH_Add_Task(updateBuffer, 1,10);
   SCH_Add_Task(fsm_pedestrian_run, 0, 1);
 800122a:	2201      	movs	r2, #1
 800122c:	2100      	movs	r1, #0
 800122e:	480e      	ldr	r0, [pc, #56]	; (8001268 <main+0xb4>)
 8001230:	f000 fa32 	bl	8001698 <SCH_Add_Task>
   SCH_Add_Task(fsm_automatic_run, 0, 1);
 8001234:	2201      	movs	r2, #1
 8001236:	2100      	movs	r1, #0
 8001238:	480c      	ldr	r0, [pc, #48]	; (800126c <main+0xb8>)
 800123a:	f000 fa2d 	bl	8001698 <SCH_Add_Task>
   SCH_Add_Task(fsm_manual_run, 0, 1);
 800123e:	2201      	movs	r2, #1
 8001240:	2100      	movs	r1, #0
 8001242:	480b      	ldr	r0, [pc, #44]	; (8001270 <main+0xbc>)
 8001244:	f000 fa28 	bl	8001698 <SCH_Add_Task>
   while (1)
   {
    /* USER CODE END WHILE */
	   SCH_Dispatch_Tasks();
 8001248:	f000 fb90 	bl	800196c <SCH_Dispatch_Tasks>
   {
 800124c:	e7fc      	b.n	8001248 <main+0x94>
 800124e:	bf00      	nop
 8001250:	20000284 	.word	0x20000284
 8001254:	2000023c 	.word	0x2000023c
 8001258:	08001a55 	.word	0x08001a55
 800125c:	08001ab5 	.word	0x08001ab5
 8001260:	08001ae9 	.word	0x08001ae9
 8001264:	0800102d 	.word	0x0800102d
 8001268:	08000b05 	.word	0x08000b05
 800126c:	0800014d 	.word	0x0800014d
 8001270:	080006dd 	.word	0x080006dd

08001274 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001274:	b580      	push	{r7, lr}
 8001276:	b090      	sub	sp, #64	; 0x40
 8001278:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800127a:	f107 0318 	add.w	r3, r7, #24
 800127e:	2228      	movs	r2, #40	; 0x28
 8001280:	2100      	movs	r1, #0
 8001282:	4618      	mov	r0, r3
 8001284:	f003 fb90 	bl	80049a8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001288:	1d3b      	adds	r3, r7, #4
 800128a:	2200      	movs	r2, #0
 800128c:	601a      	str	r2, [r3, #0]
 800128e:	605a      	str	r2, [r3, #4]
 8001290:	609a      	str	r2, [r3, #8]
 8001292:	60da      	str	r2, [r3, #12]
 8001294:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001296:	2302      	movs	r3, #2
 8001298:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800129a:	2301      	movs	r3, #1
 800129c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800129e:	2310      	movs	r3, #16
 80012a0:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012a2:	2302      	movs	r3, #2
 80012a4:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 80012a6:	2300      	movs	r3, #0
 80012a8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 80012aa:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 80012ae:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012b0:	f107 0318 	add.w	r3, r7, #24
 80012b4:	4618      	mov	r0, r3
 80012b6:	f001 f9b5 	bl	8002624 <HAL_RCC_OscConfig>
 80012ba:	4603      	mov	r3, r0
 80012bc:	2b00      	cmp	r3, #0
 80012be:	d001      	beq.n	80012c4 <SystemClock_Config+0x50>
  {
    Error_Handler();
 80012c0:	f000 f97e 	bl	80015c0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80012c4:	230f      	movs	r3, #15
 80012c6:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012c8:	2302      	movs	r3, #2
 80012ca:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80012cc:	2300      	movs	r3, #0
 80012ce:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80012d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012d4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80012d6:	2300      	movs	r3, #0
 80012d8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80012da:	1d3b      	adds	r3, r7, #4
 80012dc:	2102      	movs	r1, #2
 80012de:	4618      	mov	r0, r3
 80012e0:	f001 fc20 	bl	8002b24 <HAL_RCC_ClockConfig>
 80012e4:	4603      	mov	r3, r0
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d001      	beq.n	80012ee <SystemClock_Config+0x7a>
  {
    Error_Handler();
 80012ea:	f000 f969 	bl	80015c0 <Error_Handler>
  }
}
 80012ee:	bf00      	nop
 80012f0:	3740      	adds	r7, #64	; 0x40
 80012f2:	46bd      	mov	sp, r7
 80012f4:	bd80      	pop	{r7, pc}
	...

080012f8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80012f8:	b580      	push	{r7, lr}
 80012fa:	b086      	sub	sp, #24
 80012fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80012fe:	f107 0308 	add.w	r3, r7, #8
 8001302:	2200      	movs	r2, #0
 8001304:	601a      	str	r2, [r3, #0]
 8001306:	605a      	str	r2, [r3, #4]
 8001308:	609a      	str	r2, [r3, #8]
 800130a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800130c:	463b      	mov	r3, r7
 800130e:	2200      	movs	r2, #0
 8001310:	601a      	str	r2, [r3, #0]
 8001312:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001314:	4b1d      	ldr	r3, [pc, #116]	; (800138c <MX_TIM2_Init+0x94>)
 8001316:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800131a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 6399;
 800131c:	4b1b      	ldr	r3, [pc, #108]	; (800138c <MX_TIM2_Init+0x94>)
 800131e:	f641 02ff 	movw	r2, #6399	; 0x18ff
 8001322:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001324:	4b19      	ldr	r3, [pc, #100]	; (800138c <MX_TIM2_Init+0x94>)
 8001326:	2200      	movs	r2, #0
 8001328:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 800132a:	4b18      	ldr	r3, [pc, #96]	; (800138c <MX_TIM2_Init+0x94>)
 800132c:	2263      	movs	r2, #99	; 0x63
 800132e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001330:	4b16      	ldr	r3, [pc, #88]	; (800138c <MX_TIM2_Init+0x94>)
 8001332:	2200      	movs	r2, #0
 8001334:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001336:	4b15      	ldr	r3, [pc, #84]	; (800138c <MX_TIM2_Init+0x94>)
 8001338:	2200      	movs	r2, #0
 800133a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800133c:	4813      	ldr	r0, [pc, #76]	; (800138c <MX_TIM2_Init+0x94>)
 800133e:	f001 fd7f 	bl	8002e40 <HAL_TIM_Base_Init>
 8001342:	4603      	mov	r3, r0
 8001344:	2b00      	cmp	r3, #0
 8001346:	d001      	beq.n	800134c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001348:	f000 f93a 	bl	80015c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800134c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001350:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001352:	f107 0308 	add.w	r3, r7, #8
 8001356:	4619      	mov	r1, r3
 8001358:	480c      	ldr	r0, [pc, #48]	; (800138c <MX_TIM2_Init+0x94>)
 800135a:	f002 f8d7 	bl	800350c <HAL_TIM_ConfigClockSource>
 800135e:	4603      	mov	r3, r0
 8001360:	2b00      	cmp	r3, #0
 8001362:	d001      	beq.n	8001368 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001364:	f000 f92c 	bl	80015c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001368:	2300      	movs	r3, #0
 800136a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800136c:	2300      	movs	r3, #0
 800136e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001370:	463b      	mov	r3, r7
 8001372:	4619      	mov	r1, r3
 8001374:	4805      	ldr	r0, [pc, #20]	; (800138c <MX_TIM2_Init+0x94>)
 8001376:	f002 fc59 	bl	8003c2c <HAL_TIMEx_MasterConfigSynchronization>
 800137a:	4603      	mov	r3, r0
 800137c:	2b00      	cmp	r3, #0
 800137e:	d001      	beq.n	8001384 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001380:	f000 f91e 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001384:	bf00      	nop
 8001386:	3718      	adds	r7, #24
 8001388:	46bd      	mov	sp, r7
 800138a:	bd80      	pop	{r7, pc}
 800138c:	20000284 	.word	0x20000284

08001390 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b08e      	sub	sp, #56	; 0x38
 8001394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001396:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800139a:	2200      	movs	r2, #0
 800139c:	601a      	str	r2, [r3, #0]
 800139e:	605a      	str	r2, [r3, #4]
 80013a0:	609a      	str	r2, [r3, #8]
 80013a2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013a4:	f107 0320 	add.w	r3, r7, #32
 80013a8:	2200      	movs	r2, #0
 80013aa:	601a      	str	r2, [r3, #0]
 80013ac:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013ae:	1d3b      	adds	r3, r7, #4
 80013b0:	2200      	movs	r2, #0
 80013b2:	601a      	str	r2, [r3, #0]
 80013b4:	605a      	str	r2, [r3, #4]
 80013b6:	609a      	str	r2, [r3, #8]
 80013b8:	60da      	str	r2, [r3, #12]
 80013ba:	611a      	str	r2, [r3, #16]
 80013bc:	615a      	str	r2, [r3, #20]
 80013be:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80013c0:	4b2c      	ldr	r3, [pc, #176]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013c2:	4a2d      	ldr	r2, [pc, #180]	; (8001478 <MX_TIM3_Init+0xe8>)
 80013c4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 80013c6:	4b2b      	ldr	r3, [pc, #172]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013c8:	223f      	movs	r2, #63	; 0x3f
 80013ca:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013cc:	4b29      	ldr	r3, [pc, #164]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013ce:	2200      	movs	r2, #0
 80013d0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80013d2:	4b28      	ldr	r3, [pc, #160]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013d4:	f240 32e7 	movw	r2, #999	; 0x3e7
 80013d8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013da:	4b26      	ldr	r3, [pc, #152]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013dc:	2200      	movs	r2, #0
 80013de:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013e0:	4b24      	ldr	r3, [pc, #144]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013e2:	2200      	movs	r2, #0
 80013e4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80013e6:	4823      	ldr	r0, [pc, #140]	; (8001474 <MX_TIM3_Init+0xe4>)
 80013e8:	f001 fd2a 	bl	8002e40 <HAL_TIM_Base_Init>
 80013ec:	4603      	mov	r3, r0
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	d001      	beq.n	80013f6 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80013f2:	f000 f8e5 	bl	80015c0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013f6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013fa:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80013fc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001400:	4619      	mov	r1, r3
 8001402:	481c      	ldr	r0, [pc, #112]	; (8001474 <MX_TIM3_Init+0xe4>)
 8001404:	f002 f882 	bl	800350c <HAL_TIM_ConfigClockSource>
 8001408:	4603      	mov	r3, r0
 800140a:	2b00      	cmp	r3, #0
 800140c:	d001      	beq.n	8001412 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 800140e:	f000 f8d7 	bl	80015c0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001412:	4818      	ldr	r0, [pc, #96]	; (8001474 <MX_TIM3_Init+0xe4>)
 8001414:	f001 fdb6 	bl	8002f84 <HAL_TIM_PWM_Init>
 8001418:	4603      	mov	r3, r0
 800141a:	2b00      	cmp	r3, #0
 800141c:	d001      	beq.n	8001422 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 800141e:	f000 f8cf 	bl	80015c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001422:	2300      	movs	r3, #0
 8001424:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001426:	2300      	movs	r3, #0
 8001428:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800142a:	f107 0320 	add.w	r3, r7, #32
 800142e:	4619      	mov	r1, r3
 8001430:	4810      	ldr	r0, [pc, #64]	; (8001474 <MX_TIM3_Init+0xe4>)
 8001432:	f002 fbfb 	bl	8003c2c <HAL_TIMEx_MasterConfigSynchronization>
 8001436:	4603      	mov	r3, r0
 8001438:	2b00      	cmp	r3, #0
 800143a:	d001      	beq.n	8001440 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 800143c:	f000 f8c0 	bl	80015c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001440:	2360      	movs	r3, #96	; 0x60
 8001442:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001444:	2300      	movs	r3, #0
 8001446:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001448:	2300      	movs	r3, #0
 800144a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800144c:	2300      	movs	r3, #0
 800144e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001450:	1d3b      	adds	r3, r7, #4
 8001452:	2200      	movs	r2, #0
 8001454:	4619      	mov	r1, r3
 8001456:	4807      	ldr	r0, [pc, #28]	; (8001474 <MX_TIM3_Init+0xe4>)
 8001458:	f001 ff96 	bl	8003388 <HAL_TIM_PWM_ConfigChannel>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8001462:	f000 f8ad 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001466:	4803      	ldr	r0, [pc, #12]	; (8001474 <MX_TIM3_Init+0xe4>)
 8001468:	f000 fbca 	bl	8001c00 <HAL_TIM_MspPostInit>

}
 800146c:	bf00      	nop
 800146e:	3738      	adds	r7, #56	; 0x38
 8001470:	46bd      	mov	sp, r7
 8001472:	bd80      	pop	{r7, pc}
 8001474:	2000023c 	.word	0x2000023c
 8001478:	40000400 	.word	0x40000400

0800147c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800147c:	b580      	push	{r7, lr}
 800147e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001480:	4b11      	ldr	r3, [pc, #68]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 8001482:	4a12      	ldr	r2, [pc, #72]	; (80014cc <MX_USART2_UART_Init+0x50>)
 8001484:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8001486:	4b10      	ldr	r3, [pc, #64]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 8001488:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 800148c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800148e:	4b0e      	ldr	r3, [pc, #56]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 8001490:	2200      	movs	r2, #0
 8001492:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001494:	4b0c      	ldr	r3, [pc, #48]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 8001496:	2200      	movs	r2, #0
 8001498:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800149a:	4b0b      	ldr	r3, [pc, #44]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 800149c:	2200      	movs	r2, #0
 800149e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80014a0:	4b09      	ldr	r3, [pc, #36]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 80014a2:	220c      	movs	r2, #12
 80014a4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014a6:	4b08      	ldr	r3, [pc, #32]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 80014a8:	2200      	movs	r2, #0
 80014aa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014ac:	4b06      	ldr	r3, [pc, #24]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 80014ae:	2200      	movs	r2, #0
 80014b0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014b2:	4805      	ldr	r0, [pc, #20]	; (80014c8 <MX_USART2_UART_Init+0x4c>)
 80014b4:	f002 fc2a 	bl	8003d0c <HAL_UART_Init>
 80014b8:	4603      	mov	r3, r0
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d001      	beq.n	80014c2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80014be:	f000 f87f 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80014c2:	bf00      	nop
 80014c4:	bd80      	pop	{r7, pc}
 80014c6:	bf00      	nop
 80014c8:	200002cc 	.word	0x200002cc
 80014cc:	40004400 	.word	0x40004400

080014d0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80014d0:	b580      	push	{r7, lr}
 80014d2:	b086      	sub	sp, #24
 80014d4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d6:	f107 0308 	add.w	r3, r7, #8
 80014da:	2200      	movs	r2, #0
 80014dc:	601a      	str	r2, [r3, #0]
 80014de:	605a      	str	r2, [r3, #4]
 80014e0:	609a      	str	r2, [r3, #8]
 80014e2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014e4:	4b2e      	ldr	r3, [pc, #184]	; (80015a0 <MX_GPIO_Init+0xd0>)
 80014e6:	699b      	ldr	r3, [r3, #24]
 80014e8:	4a2d      	ldr	r2, [pc, #180]	; (80015a0 <MX_GPIO_Init+0xd0>)
 80014ea:	f043 0304 	orr.w	r3, r3, #4
 80014ee:	6193      	str	r3, [r2, #24]
 80014f0:	4b2b      	ldr	r3, [pc, #172]	; (80015a0 <MX_GPIO_Init+0xd0>)
 80014f2:	699b      	ldr	r3, [r3, #24]
 80014f4:	f003 0304 	and.w	r3, r3, #4
 80014f8:	607b      	str	r3, [r7, #4]
 80014fa:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014fc:	4b28      	ldr	r3, [pc, #160]	; (80015a0 <MX_GPIO_Init+0xd0>)
 80014fe:	699b      	ldr	r3, [r3, #24]
 8001500:	4a27      	ldr	r2, [pc, #156]	; (80015a0 <MX_GPIO_Init+0xd0>)
 8001502:	f043 0308 	orr.w	r3, r3, #8
 8001506:	6193      	str	r3, [r2, #24]
 8001508:	4b25      	ldr	r3, [pc, #148]	; (80015a0 <MX_GPIO_Init+0xd0>)
 800150a:	699b      	ldr	r3, [r3, #24]
 800150c:	f003 0308 	and.w	r3, r3, #8
 8001510:	603b      	str	r3, [r7, #0]
 8001512:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 8001514:	2200      	movs	r2, #0
 8001516:	f44f 6187 	mov.w	r1, #1080	; 0x438
 800151a:	4822      	ldr	r0, [pc, #136]	; (80015a4 <MX_GPIO_Init+0xd4>)
 800151c:	f001 f869 	bl	80025f2 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, D7_Pin|D2_Pin, GPIO_PIN_RESET);
 8001520:	2200      	movs	r2, #0
 8001522:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8001526:	4820      	ldr	r0, [pc, #128]	; (80015a8 <MX_GPIO_Init+0xd8>)
 8001528:	f001 f863 	bl	80025f2 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : A0_Pin A1_Pin A2_Pin */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin;
 800152c:	2313      	movs	r3, #19
 800152e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001530:	2300      	movs	r3, #0
 8001532:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001534:	2301      	movs	r3, #1
 8001536:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001538:	f107 0308 	add.w	r3, r7, #8
 800153c:	4619      	mov	r1, r3
 800153e:	481a      	ldr	r0, [pc, #104]	; (80015a8 <MX_GPIO_Init+0xd8>)
 8001540:	f000 febc 	bl	80022bc <HAL_GPIO_Init>

  /*Configure GPIO pin : A3_Pin */
  GPIO_InitStruct.Pin = A3_Pin;
 8001544:	2301      	movs	r3, #1
 8001546:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001548:	2300      	movs	r3, #0
 800154a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800154c:	2301      	movs	r3, #1
 800154e:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(A3_GPIO_Port, &GPIO_InitStruct);
 8001550:	f107 0308 	add.w	r3, r7, #8
 8001554:	4619      	mov	r1, r3
 8001556:	4813      	ldr	r0, [pc, #76]	; (80015a4 <MX_GPIO_Init+0xd4>)
 8001558:	f000 feb0 	bl	80022bc <HAL_GPIO_Init>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 800155c:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8001560:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001562:	2301      	movs	r3, #1
 8001564:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001566:	2300      	movs	r3, #0
 8001568:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800156a:	2302      	movs	r3, #2
 800156c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800156e:	f107 0308 	add.w	r3, r7, #8
 8001572:	4619      	mov	r1, r3
 8001574:	480b      	ldr	r0, [pc, #44]	; (80015a4 <MX_GPIO_Init+0xd4>)
 8001576:	f000 fea1 	bl	80022bc <HAL_GPIO_Init>

  /*Configure GPIO pins : D7_Pin D2_Pin */
  GPIO_InitStruct.Pin = D7_Pin|D2_Pin;
 800157a:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 800157e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001580:	2301      	movs	r3, #1
 8001582:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001584:	2300      	movs	r3, #0
 8001586:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001588:	2302      	movs	r3, #2
 800158a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800158c:	f107 0308 	add.w	r3, r7, #8
 8001590:	4619      	mov	r1, r3
 8001592:	4805      	ldr	r0, [pc, #20]	; (80015a8 <MX_GPIO_Init+0xd8>)
 8001594:	f000 fe92 	bl	80022bc <HAL_GPIO_Init>

}
 8001598:	bf00      	nop
 800159a:	3718      	adds	r7, #24
 800159c:	46bd      	mov	sp, r7
 800159e:	bd80      	pop	{r7, pc}
 80015a0:	40021000 	.word	0x40021000
 80015a4:	40010c00 	.word	0x40010c00
 80015a8:	40010800 	.word	0x40010800

080015ac <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 80015ac:	b580      	push	{r7, lr}
 80015ae:	b082      	sub	sp, #8
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
//	timerRun();
//	timerRun7SEG();
//	timerRunSecond();
//	button_reading();
	SCH_Update();
 80015b4:	f000 f850 	bl	8001658 <SCH_Update>
}
 80015b8:	bf00      	nop
 80015ba:	3708      	adds	r7, #8
 80015bc:	46bd      	mov	sp, r7
 80015be:	bd80      	pop	{r7, pc}

080015c0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80015c0:	b480      	push	{r7}
 80015c2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80015c4:	b672      	cpsid	i
}
 80015c6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80015c8:	e7fe      	b.n	80015c8 <Error_Handler+0x8>
	...

080015cc <SCH_Init>:


static uint32_t Get_New_Task_ID(void);


void SCH_Init(void){
 80015cc:	b480      	push	{r7}
 80015ce:	b083      	sub	sp, #12
 80015d0:	af00      	add	r7, sp, #0
    for (int i=0; i<SCH_MAX_TASKS; i++){
 80015d2:	2300      	movs	r3, #0
 80015d4:	607b      	str	r3, [r7, #4]
 80015d6:	e034      	b.n	8001642 <SCH_Init+0x76>
        SCH_tasks_Array[i].pTask = 0;
 80015d8:	491e      	ldr	r1, [pc, #120]	; (8001654 <SCH_Init+0x88>)
 80015da:	687a      	ldr	r2, [r7, #4]
 80015dc:	4613      	mov	r3, r2
 80015de:	009b      	lsls	r3, r3, #2
 80015e0:	4413      	add	r3, r2
 80015e2:	009b      	lsls	r3, r3, #2
 80015e4:	440b      	add	r3, r1
 80015e6:	2200      	movs	r2, #0
 80015e8:	601a      	str	r2, [r3, #0]
        SCH_tasks_Array[i].Delay = 0;
 80015ea:	491a      	ldr	r1, [pc, #104]	; (8001654 <SCH_Init+0x88>)
 80015ec:	687a      	ldr	r2, [r7, #4]
 80015ee:	4613      	mov	r3, r2
 80015f0:	009b      	lsls	r3, r3, #2
 80015f2:	4413      	add	r3, r2
 80015f4:	009b      	lsls	r3, r3, #2
 80015f6:	440b      	add	r3, r1
 80015f8:	3304      	adds	r3, #4
 80015fa:	2200      	movs	r2, #0
 80015fc:	601a      	str	r2, [r3, #0]
        SCH_tasks_Array[i].Period = 0;
 80015fe:	4915      	ldr	r1, [pc, #84]	; (8001654 <SCH_Init+0x88>)
 8001600:	687a      	ldr	r2, [r7, #4]
 8001602:	4613      	mov	r3, r2
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	4413      	add	r3, r2
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	440b      	add	r3, r1
 800160c:	3308      	adds	r3, #8
 800160e:	2200      	movs	r2, #0
 8001610:	601a      	str	r2, [r3, #0]
        SCH_tasks_Array[i].RunMe = 0;
 8001612:	4910      	ldr	r1, [pc, #64]	; (8001654 <SCH_Init+0x88>)
 8001614:	687a      	ldr	r2, [r7, #4]
 8001616:	4613      	mov	r3, r2
 8001618:	009b      	lsls	r3, r3, #2
 800161a:	4413      	add	r3, r2
 800161c:	009b      	lsls	r3, r3, #2
 800161e:	440b      	add	r3, r1
 8001620:	330c      	adds	r3, #12
 8001622:	2200      	movs	r2, #0
 8001624:	701a      	strb	r2, [r3, #0]

        SCH_tasks_Array[i].TaskID = -1;
 8001626:	490b      	ldr	r1, [pc, #44]	; (8001654 <SCH_Init+0x88>)
 8001628:	687a      	ldr	r2, [r7, #4]
 800162a:	4613      	mov	r3, r2
 800162c:	009b      	lsls	r3, r3, #2
 800162e:	4413      	add	r3, r2
 8001630:	009b      	lsls	r3, r3, #2
 8001632:	440b      	add	r3, r1
 8001634:	3310      	adds	r3, #16
 8001636:	f04f 32ff 	mov.w	r2, #4294967295
 800163a:	601a      	str	r2, [r3, #0]
    for (int i=0; i<SCH_MAX_TASKS; i++){
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	3301      	adds	r3, #1
 8001640:	607b      	str	r3, [r7, #4]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	2b09      	cmp	r3, #9
 8001646:	ddc7      	ble.n	80015d8 <SCH_Init+0xc>
    }
}
 8001648:	bf00      	nop
 800164a:	bf00      	nop
 800164c:	370c      	adds	r7, #12
 800164e:	46bd      	mov	sp, r7
 8001650:	bc80      	pop	{r7}
 8001652:	4770      	bx	lr
 8001654:	20000118 	.word	0x20000118

08001658 <SCH_Update>:

void SCH_Update(){
 8001658:	b480      	push	{r7}
 800165a:	af00      	add	r7, sp, #0
	if (SCH_tasks_Array[0].pTask && SCH_tasks_Array[0].RunMe == 0) {
 800165c:	4b0d      	ldr	r3, [pc, #52]	; (8001694 <SCH_Update+0x3c>)
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	2b00      	cmp	r3, #0
 8001662:	d013      	beq.n	800168c <SCH_Update+0x34>
 8001664:	4b0b      	ldr	r3, [pc, #44]	; (8001694 <SCH_Update+0x3c>)
 8001666:	7b1b      	ldrb	r3, [r3, #12]
 8001668:	2b00      	cmp	r3, #0
 800166a:	d10f      	bne.n	800168c <SCH_Update+0x34>
		if(SCH_tasks_Array[0].Delay > 0){
 800166c:	4b09      	ldr	r3, [pc, #36]	; (8001694 <SCH_Update+0x3c>)
 800166e:	685b      	ldr	r3, [r3, #4]
 8001670:	2b00      	cmp	r3, #0
 8001672:	d004      	beq.n	800167e <SCH_Update+0x26>
			SCH_tasks_Array[0].Delay = SCH_tasks_Array[0].Delay - 1;
 8001674:	4b07      	ldr	r3, [pc, #28]	; (8001694 <SCH_Update+0x3c>)
 8001676:	685b      	ldr	r3, [r3, #4]
 8001678:	3b01      	subs	r3, #1
 800167a:	4a06      	ldr	r2, [pc, #24]	; (8001694 <SCH_Update+0x3c>)
 800167c:	6053      	str	r3, [r2, #4]
		}
		if (SCH_tasks_Array[0].Delay == 0) {
 800167e:	4b05      	ldr	r3, [pc, #20]	; (8001694 <SCH_Update+0x3c>)
 8001680:	685b      	ldr	r3, [r3, #4]
 8001682:	2b00      	cmp	r3, #0
 8001684:	d102      	bne.n	800168c <SCH_Update+0x34>
			SCH_tasks_Array[0].RunMe = 1;
 8001686:	4b03      	ldr	r3, [pc, #12]	; (8001694 <SCH_Update+0x3c>)
 8001688:	2201      	movs	r2, #1
 800168a:	731a      	strb	r2, [r3, #12]
		}
	}
}
 800168c:	bf00      	nop
 800168e:	46bd      	mov	sp, r7
 8001690:	bc80      	pop	{r7}
 8001692:	4770      	bx	lr
 8001694:	20000118 	.word	0x20000118

08001698 <SCH_Add_Task>:

void SCH_Add_Task(void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD) {
 8001698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800169a:	b093      	sub	sp, #76	; 0x4c
 800169c:	af00      	add	r7, sp, #0
 800169e:	60f8      	str	r0, [r7, #12]
 80016a0:	60b9      	str	r1, [r7, #8]
 80016a2:	607a      	str	r2, [r7, #4]
    uint8_t newTaskIndex = 0;
 80016a4:	2300      	movs	r3, #0
 80016a6:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
    uint32_t sumDelay = 0;
 80016aa:	2300      	movs	r3, #0
 80016ac:	643b      	str	r3, [r7, #64]	; 0x40
    uint32_t newDelay = 0;
 80016ae:	2300      	movs	r3, #0
 80016b0:	63bb      	str	r3, [r7, #56]	; 0x38

    // Iterate through the task array to find the appropriate position for the new task
    for (newTaskIndex = 0; newTaskIndex < SCH_MAX_TASKS; newTaskIndex++) {
 80016b2:	2300      	movs	r3, #0
 80016b4:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80016b8:	e0d5      	b.n	8001866 <SCH_Add_Task+0x1ce>
        // Calculate the cumulative delay of existing tasks
        sumDelay += SCH_tasks_Array[newTaskIndex].Delay;
 80016ba:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 80016be:	496e      	ldr	r1, [pc, #440]	; (8001878 <SCH_Add_Task+0x1e0>)
 80016c0:	4613      	mov	r3, r2
 80016c2:	009b      	lsls	r3, r3, #2
 80016c4:	4413      	add	r3, r2
 80016c6:	009b      	lsls	r3, r3, #2
 80016c8:	440b      	add	r3, r1
 80016ca:	3304      	adds	r3, #4
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80016d0:	4413      	add	r3, r2
 80016d2:	643b      	str	r3, [r7, #64]	; 0x40

        // Check if the cumulative delay is greater than the specified initial delay (DELAY)
        if (sumDelay > DELAY) {
 80016d4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80016d6:	68bb      	ldr	r3, [r7, #8]
 80016d8:	429a      	cmp	r2, r3
 80016da:	d979      	bls.n	80017d0 <SCH_Add_Task+0x138>
            // Calculate the new delay for the current task
            newDelay = DELAY - (sumDelay - SCH_tasks_Array[newTaskIndex].Delay);
 80016dc:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 80016e0:	4965      	ldr	r1, [pc, #404]	; (8001878 <SCH_Add_Task+0x1e0>)
 80016e2:	4613      	mov	r3, r2
 80016e4:	009b      	lsls	r3, r3, #2
 80016e6:	4413      	add	r3, r2
 80016e8:	009b      	lsls	r3, r3, #2
 80016ea:	440b      	add	r3, r1
 80016ec:	3304      	adds	r3, #4
 80016ee:	681a      	ldr	r2, [r3, #0]
 80016f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80016f2:	1ad3      	subs	r3, r2, r3
 80016f4:	68ba      	ldr	r2, [r7, #8]
 80016f6:	4413      	add	r3, r2
 80016f8:	63bb      	str	r3, [r7, #56]	; 0x38

            // Adjust the delay of the current task and shift existing tasks to make room
            SCH_tasks_Array[newTaskIndex].Delay = sumDelay - DELAY;
 80016fa:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 80016fe:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8001700:	68bb      	ldr	r3, [r7, #8]
 8001702:	1ac9      	subs	r1, r1, r3
 8001704:	485c      	ldr	r0, [pc, #368]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001706:	4613      	mov	r3, r2
 8001708:	009b      	lsls	r3, r3, #2
 800170a:	4413      	add	r3, r2
 800170c:	009b      	lsls	r3, r3, #2
 800170e:	4403      	add	r3, r0
 8001710:	3304      	adds	r3, #4
 8001712:	6019      	str	r1, [r3, #0]
            for (uint8_t i = SCH_MAX_TASKS - 1; i > newTaskIndex; i--) {
 8001714:	2309      	movs	r3, #9
 8001716:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 800171a:	e01b      	b.n	8001754 <SCH_Add_Task+0xbc>
                SCH_tasks_Array[i] = SCH_tasks_Array[i - 1];
 800171c:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8001720:	1e5a      	subs	r2, r3, #1
 8001722:	f897 103f 	ldrb.w	r1, [r7, #63]	; 0x3f
 8001726:	4854      	ldr	r0, [pc, #336]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001728:	460b      	mov	r3, r1
 800172a:	009b      	lsls	r3, r3, #2
 800172c:	440b      	add	r3, r1
 800172e:	009b      	lsls	r3, r3, #2
 8001730:	4418      	add	r0, r3
 8001732:	4951      	ldr	r1, [pc, #324]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001734:	4613      	mov	r3, r2
 8001736:	009b      	lsls	r3, r3, #2
 8001738:	4413      	add	r3, r2
 800173a:	009b      	lsls	r3, r3, #2
 800173c:	440b      	add	r3, r1
 800173e:	4604      	mov	r4, r0
 8001740:	461d      	mov	r5, r3
 8001742:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001744:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001746:	682b      	ldr	r3, [r5, #0]
 8001748:	6023      	str	r3, [r4, #0]
            for (uint8_t i = SCH_MAX_TASKS - 1; i > newTaskIndex; i--) {
 800174a:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800174e:	3b01      	subs	r3, #1
 8001750:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001754:	f897 203f 	ldrb.w	r2, [r7, #63]	; 0x3f
 8001758:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800175c:	429a      	cmp	r2, r3
 800175e:	d8dd      	bhi.n	800171c <SCH_Add_Task+0x84>
            }

            // Add the new task at the appropriate position in the array
            SCH_tasks_Array[newTaskIndex] = (sTask){
 8001760:	f897 4047 	ldrb.w	r4, [r7, #71]	; 0x47
                .pTask = pFunction,
                .Delay = newDelay,
                .Period = PERIOD,
                .RunMe = (newDelay == 0),  // Set RunMe flag based on newDelay
 8001764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001766:	2b00      	cmp	r3, #0
 8001768:	bf0c      	ite	eq
 800176a:	2301      	moveq	r3, #1
 800176c:	2300      	movne	r3, #0
 800176e:	b2db      	uxtb	r3, r3
 8001770:	461d      	mov	r5, r3
                .TaskID = Get_New_Task_ID(),  // Assign a unique TaskID
 8001772:	f000 f923 	bl	80019bc <Get_New_Task_ID>
 8001776:	4601      	mov	r1, r0
            SCH_tasks_Array[newTaskIndex] = (sTask){
 8001778:	4a3f      	ldr	r2, [pc, #252]	; (8001878 <SCH_Add_Task+0x1e0>)
 800177a:	4623      	mov	r3, r4
 800177c:	009b      	lsls	r3, r3, #2
 800177e:	4423      	add	r3, r4
 8001780:	009b      	lsls	r3, r3, #2
 8001782:	4413      	add	r3, r2
 8001784:	68fa      	ldr	r2, [r7, #12]
 8001786:	601a      	str	r2, [r3, #0]
 8001788:	4a3b      	ldr	r2, [pc, #236]	; (8001878 <SCH_Add_Task+0x1e0>)
 800178a:	4623      	mov	r3, r4
 800178c:	009b      	lsls	r3, r3, #2
 800178e:	4423      	add	r3, r4
 8001790:	009b      	lsls	r3, r3, #2
 8001792:	4413      	add	r3, r2
 8001794:	3304      	adds	r3, #4
 8001796:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8001798:	601a      	str	r2, [r3, #0]
 800179a:	4a37      	ldr	r2, [pc, #220]	; (8001878 <SCH_Add_Task+0x1e0>)
 800179c:	4623      	mov	r3, r4
 800179e:	009b      	lsls	r3, r3, #2
 80017a0:	4423      	add	r3, r4
 80017a2:	009b      	lsls	r3, r3, #2
 80017a4:	4413      	add	r3, r2
 80017a6:	3308      	adds	r3, #8
 80017a8:	687a      	ldr	r2, [r7, #4]
 80017aa:	601a      	str	r2, [r3, #0]
 80017ac:	4a32      	ldr	r2, [pc, #200]	; (8001878 <SCH_Add_Task+0x1e0>)
 80017ae:	4623      	mov	r3, r4
 80017b0:	009b      	lsls	r3, r3, #2
 80017b2:	4423      	add	r3, r4
 80017b4:	009b      	lsls	r3, r3, #2
 80017b6:	4413      	add	r3, r2
 80017b8:	330c      	adds	r3, #12
 80017ba:	462a      	mov	r2, r5
 80017bc:	701a      	strb	r2, [r3, #0]
 80017be:	4a2e      	ldr	r2, [pc, #184]	; (8001878 <SCH_Add_Task+0x1e0>)
 80017c0:	4623      	mov	r3, r4
 80017c2:	009b      	lsls	r3, r3, #2
 80017c4:	4423      	add	r3, r4
 80017c6:	009b      	lsls	r3, r3, #2
 80017c8:	4413      	add	r3, r2
 80017ca:	3310      	adds	r3, #16
 80017cc:	6019      	str	r1, [r3, #0]
 80017ce:	e04f      	b.n	8001870 <SCH_Add_Task+0x1d8>
            };

            return;
        } else {
            // If the current task slot is empty, add the new task to this slot
            if (SCH_tasks_Array[newTaskIndex].pTask == 0) {
 80017d0:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 80017d4:	4928      	ldr	r1, [pc, #160]	; (8001878 <SCH_Add_Task+0x1e0>)
 80017d6:	4613      	mov	r3, r2
 80017d8:	009b      	lsls	r3, r3, #2
 80017da:	4413      	add	r3, r2
 80017dc:	009b      	lsls	r3, r3, #2
 80017de:	440b      	add	r3, r1
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d13a      	bne.n	800185c <SCH_Add_Task+0x1c4>
                SCH_tasks_Array[newTaskIndex] = (sTask){
 80017e6:	f897 4047 	ldrb.w	r4, [r7, #71]	; 0x47
                    .pTask = pFunction,
                    .Delay = DELAY - sumDelay,
 80017ea:	68ba      	ldr	r2, [r7, #8]
 80017ec:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80017ee:	1ad5      	subs	r5, r2, r3
                    .Period = PERIOD,
                    .RunMe = (DELAY - sumDelay == 0),  // Set RunMe flag based on remaining delay
 80017f0:	68ba      	ldr	r2, [r7, #8]
 80017f2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80017f4:	429a      	cmp	r2, r3
 80017f6:	bf0c      	ite	eq
 80017f8:	2301      	moveq	r3, #1
 80017fa:	2300      	movne	r3, #0
 80017fc:	b2db      	uxtb	r3, r3
 80017fe:	461e      	mov	r6, r3
                    .TaskID = Get_New_Task_ID(),  // Assign a unique TaskID
 8001800:	f000 f8dc 	bl	80019bc <Get_New_Task_ID>
 8001804:	4601      	mov	r1, r0
                SCH_tasks_Array[newTaskIndex] = (sTask){
 8001806:	4a1c      	ldr	r2, [pc, #112]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001808:	4623      	mov	r3, r4
 800180a:	009b      	lsls	r3, r3, #2
 800180c:	4423      	add	r3, r4
 800180e:	009b      	lsls	r3, r3, #2
 8001810:	4413      	add	r3, r2
 8001812:	68fa      	ldr	r2, [r7, #12]
 8001814:	601a      	str	r2, [r3, #0]
 8001816:	4a18      	ldr	r2, [pc, #96]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001818:	4623      	mov	r3, r4
 800181a:	009b      	lsls	r3, r3, #2
 800181c:	4423      	add	r3, r4
 800181e:	009b      	lsls	r3, r3, #2
 8001820:	4413      	add	r3, r2
 8001822:	3304      	adds	r3, #4
 8001824:	601d      	str	r5, [r3, #0]
 8001826:	4a14      	ldr	r2, [pc, #80]	; (8001878 <SCH_Add_Task+0x1e0>)
 8001828:	4623      	mov	r3, r4
 800182a:	009b      	lsls	r3, r3, #2
 800182c:	4423      	add	r3, r4
 800182e:	009b      	lsls	r3, r3, #2
 8001830:	4413      	add	r3, r2
 8001832:	3308      	adds	r3, #8
 8001834:	687a      	ldr	r2, [r7, #4]
 8001836:	601a      	str	r2, [r3, #0]
 8001838:	4a0f      	ldr	r2, [pc, #60]	; (8001878 <SCH_Add_Task+0x1e0>)
 800183a:	4623      	mov	r3, r4
 800183c:	009b      	lsls	r3, r3, #2
 800183e:	4423      	add	r3, r4
 8001840:	009b      	lsls	r3, r3, #2
 8001842:	4413      	add	r3, r2
 8001844:	330c      	adds	r3, #12
 8001846:	4632      	mov	r2, r6
 8001848:	701a      	strb	r2, [r3, #0]
 800184a:	4a0b      	ldr	r2, [pc, #44]	; (8001878 <SCH_Add_Task+0x1e0>)
 800184c:	4623      	mov	r3, r4
 800184e:	009b      	lsls	r3, r3, #2
 8001850:	4423      	add	r3, r4
 8001852:	009b      	lsls	r3, r3, #2
 8001854:	4413      	add	r3, r2
 8001856:	3310      	adds	r3, #16
 8001858:	6019      	str	r1, [r3, #0]
 800185a:	e009      	b.n	8001870 <SCH_Add_Task+0x1d8>
    for (newTaskIndex = 0; newTaskIndex < SCH_MAX_TASKS; newTaskIndex++) {
 800185c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8001860:	3301      	adds	r3, #1
 8001862:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8001866:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800186a:	2b09      	cmp	r3, #9
 800186c:	f67f af25 	bls.w	80016ba <SCH_Add_Task+0x22>

                return;
            }
        }
    }
}
 8001870:	374c      	adds	r7, #76	; 0x4c
 8001872:	46bd      	mov	sp, r7
 8001874:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001876:	bf00      	nop
 8001878:	20000118 	.word	0x20000118

0800187c <SCH_Delete_Task>:



void SCH_Delete_Task(uint32_t taskID) {
 800187c:	b4b0      	push	{r4, r5, r7}
 800187e:	b089      	sub	sp, #36	; 0x24
 8001880:	af00      	add	r7, sp, #0
 8001882:	6078      	str	r0, [r7, #4]
    // Check if the provided task ID is NO_TASK_ID (invalid).
    if (taskID == NO_TASK_ID) return;
 8001884:	687b      	ldr	r3, [r7, #4]
 8001886:	2b00      	cmp	r3, #0
 8001888:	d068      	beq.n	800195c <SCH_Delete_Task+0xe0>

    // Iterate through the task array to find the task with the specified TaskID
    for (uint8_t taskIndex = 0; taskIndex < SCH_MAX_TASKS; taskIndex++) {
 800188a:	2300      	movs	r3, #0
 800188c:	77fb      	strb	r3, [r7, #31]
 800188e:	e061      	b.n	8001954 <SCH_Delete_Task+0xd8>
        if (SCH_tasks_Array[taskIndex].TaskID == taskID) {
 8001890:	7ffa      	ldrb	r2, [r7, #31]
 8001892:	4935      	ldr	r1, [pc, #212]	; (8001968 <SCH_Delete_Task+0xec>)
 8001894:	4613      	mov	r3, r2
 8001896:	009b      	lsls	r3, r3, #2
 8001898:	4413      	add	r3, r2
 800189a:	009b      	lsls	r3, r3, #2
 800189c:	440b      	add	r3, r1
 800189e:	3310      	adds	r3, #16
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	687a      	ldr	r2, [r7, #4]
 80018a4:	429a      	cmp	r2, r3
 80018a6:	d152      	bne.n	800194e <SCH_Delete_Task+0xd2>
            // Task found, proceed with deletion

            // If the current task is not the last one and the next task is not empty,
            // adjust the delay of the next task to include the delay of the deleted task.
            if (taskIndex < SCH_MAX_TASKS - 1 && SCH_tasks_Array[taskIndex + 1].pTask != 0) {
 80018a8:	7ffb      	ldrb	r3, [r7, #31]
 80018aa:	2b08      	cmp	r3, #8
 80018ac:	d828      	bhi.n	8001900 <SCH_Delete_Task+0x84>
 80018ae:	7ffb      	ldrb	r3, [r7, #31]
 80018b0:	1c5a      	adds	r2, r3, #1
 80018b2:	492d      	ldr	r1, [pc, #180]	; (8001968 <SCH_Delete_Task+0xec>)
 80018b4:	4613      	mov	r3, r2
 80018b6:	009b      	lsls	r3, r3, #2
 80018b8:	4413      	add	r3, r2
 80018ba:	009b      	lsls	r3, r3, #2
 80018bc:	440b      	add	r3, r1
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d01d      	beq.n	8001900 <SCH_Delete_Task+0x84>
                SCH_tasks_Array[taskIndex + 1].Delay += SCH_tasks_Array[taskIndex].Delay;
 80018c4:	7ffb      	ldrb	r3, [r7, #31]
 80018c6:	1c5a      	adds	r2, r3, #1
 80018c8:	4927      	ldr	r1, [pc, #156]	; (8001968 <SCH_Delete_Task+0xec>)
 80018ca:	4613      	mov	r3, r2
 80018cc:	009b      	lsls	r3, r3, #2
 80018ce:	4413      	add	r3, r2
 80018d0:	009b      	lsls	r3, r3, #2
 80018d2:	440b      	add	r3, r1
 80018d4:	3304      	adds	r3, #4
 80018d6:	6819      	ldr	r1, [r3, #0]
 80018d8:	7ffa      	ldrb	r2, [r7, #31]
 80018da:	4823      	ldr	r0, [pc, #140]	; (8001968 <SCH_Delete_Task+0xec>)
 80018dc:	4613      	mov	r3, r2
 80018de:	009b      	lsls	r3, r3, #2
 80018e0:	4413      	add	r3, r2
 80018e2:	009b      	lsls	r3, r3, #2
 80018e4:	4403      	add	r3, r0
 80018e6:	3304      	adds	r3, #4
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	7ffa      	ldrb	r2, [r7, #31]
 80018ec:	3201      	adds	r2, #1
 80018ee:	4419      	add	r1, r3
 80018f0:	481d      	ldr	r0, [pc, #116]	; (8001968 <SCH_Delete_Task+0xec>)
 80018f2:	4613      	mov	r3, r2
 80018f4:	009b      	lsls	r3, r3, #2
 80018f6:	4413      	add	r3, r2
 80018f8:	009b      	lsls	r3, r3, #2
 80018fa:	4403      	add	r3, r0
 80018fc:	3304      	adds	r3, #4
 80018fe:	6019      	str	r1, [r3, #0]
            }

            // Shift the remaining tasks to fill the gap created by the deleted task
            for (uint8_t j = taskIndex; j < SCH_MAX_TASKS - 1; j++) {
 8001900:	7ffb      	ldrb	r3, [r7, #31]
 8001902:	77bb      	strb	r3, [r7, #30]
 8001904:	e017      	b.n	8001936 <SCH_Delete_Task+0xba>
                SCH_tasks_Array[j] = SCH_tasks_Array[j + 1];
 8001906:	7fbb      	ldrb	r3, [r7, #30]
 8001908:	1c5a      	adds	r2, r3, #1
 800190a:	7fb9      	ldrb	r1, [r7, #30]
 800190c:	4816      	ldr	r0, [pc, #88]	; (8001968 <SCH_Delete_Task+0xec>)
 800190e:	460b      	mov	r3, r1
 8001910:	009b      	lsls	r3, r3, #2
 8001912:	440b      	add	r3, r1
 8001914:	009b      	lsls	r3, r3, #2
 8001916:	4418      	add	r0, r3
 8001918:	4913      	ldr	r1, [pc, #76]	; (8001968 <SCH_Delete_Task+0xec>)
 800191a:	4613      	mov	r3, r2
 800191c:	009b      	lsls	r3, r3, #2
 800191e:	4413      	add	r3, r2
 8001920:	009b      	lsls	r3, r3, #2
 8001922:	440b      	add	r3, r1
 8001924:	4604      	mov	r4, r0
 8001926:	461d      	mov	r5, r3
 8001928:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800192a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800192c:	682b      	ldr	r3, [r5, #0]
 800192e:	6023      	str	r3, [r4, #0]
            for (uint8_t j = taskIndex; j < SCH_MAX_TASKS - 1; j++) {
 8001930:	7fbb      	ldrb	r3, [r7, #30]
 8001932:	3301      	adds	r3, #1
 8001934:	77bb      	strb	r3, [r7, #30]
 8001936:	7fbb      	ldrb	r3, [r7, #30]
 8001938:	2b08      	cmp	r3, #8
 800193a:	d9e4      	bls.n	8001906 <SCH_Delete_Task+0x8a>
            }

            // Clear the last task slot to ensure no leftover data
            SCH_tasks_Array[SCH_MAX_TASKS - 1] = (sTask){0};
 800193c:	4b0a      	ldr	r3, [pc, #40]	; (8001968 <SCH_Delete_Task+0xec>)
 800193e:	33b4      	adds	r3, #180	; 0xb4
 8001940:	2200      	movs	r2, #0
 8001942:	601a      	str	r2, [r3, #0]
 8001944:	605a      	str	r2, [r3, #4]
 8001946:	609a      	str	r2, [r3, #8]
 8001948:	60da      	str	r2, [r3, #12]
 800194a:	611a      	str	r2, [r3, #16]
 800194c:	e007      	b.n	800195e <SCH_Delete_Task+0xe2>
    for (uint8_t taskIndex = 0; taskIndex < SCH_MAX_TASKS; taskIndex++) {
 800194e:	7ffb      	ldrb	r3, [r7, #31]
 8001950:	3301      	adds	r3, #1
 8001952:	77fb      	strb	r3, [r7, #31]
 8001954:	7ffb      	ldrb	r3, [r7, #31]
 8001956:	2b09      	cmp	r3, #9
 8001958:	d99a      	bls.n	8001890 <SCH_Delete_Task+0x14>

            return;
        }
    }

    return; // Task ID not found, exit the function
 800195a:	e000      	b.n	800195e <SCH_Delete_Task+0xe2>
    if (taskID == NO_TASK_ID) return;
 800195c:	bf00      	nop
}
 800195e:	3724      	adds	r7, #36	; 0x24
 8001960:	46bd      	mov	sp, r7
 8001962:	bcb0      	pop	{r4, r5, r7}
 8001964:	4770      	bx	lr
 8001966:	bf00      	nop
 8001968:	20000118 	.word	0x20000118

0800196c <SCH_Dispatch_Tasks>:


void SCH_Dispatch_Tasks(){
 800196c:	b5b0      	push	{r4, r5, r7, lr}
 800196e:	b086      	sub	sp, #24
 8001970:	af00      	add	r7, sp, #0
	if(SCH_tasks_Array[0].RunMe > 0) {
 8001972:	4b11      	ldr	r3, [pc, #68]	; (80019b8 <SCH_Dispatch_Tasks+0x4c>)
 8001974:	7b1b      	ldrb	r3, [r3, #12]
 8001976:	2b00      	cmp	r3, #0
 8001978:	d019      	beq.n	80019ae <SCH_Dispatch_Tasks+0x42>
		(*SCH_tasks_Array[0].pTask)(); // Function pointer -> Run task
 800197a:	4b0f      	ldr	r3, [pc, #60]	; (80019b8 <SCH_Dispatch_Tasks+0x4c>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	4798      	blx	r3
		SCH_tasks_Array[0].RunMe = 0; // Set back RunMe flag
 8001980:	4b0d      	ldr	r3, [pc, #52]	; (80019b8 <SCH_Dispatch_Tasks+0x4c>)
 8001982:	2200      	movs	r2, #0
 8001984:	731a      	strb	r2, [r3, #12]
		sTask temtask = SCH_tasks_Array[0];
 8001986:	4b0c      	ldr	r3, [pc, #48]	; (80019b8 <SCH_Dispatch_Tasks+0x4c>)
 8001988:	1d3c      	adds	r4, r7, #4
 800198a:	461d      	mov	r5, r3
 800198c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800198e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001990:	682b      	ldr	r3, [r5, #0]
 8001992:	6023      	str	r3, [r4, #0]
		SCH_Delete_Task(temtask.TaskID);
 8001994:	697b      	ldr	r3, [r7, #20]
 8001996:	4618      	mov	r0, r3
 8001998:	f7ff ff70 	bl	800187c <SCH_Delete_Task>
		if (temtask.Period != 0) {
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	2b00      	cmp	r3, #0
 80019a0:	d005      	beq.n	80019ae <SCH_Dispatch_Tasks+0x42>
			SCH_Add_Task(temtask.pTask, temtask.Period, temtask.Period);
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	68f9      	ldr	r1, [r7, #12]
 80019a6:	68fa      	ldr	r2, [r7, #12]
 80019a8:	4618      	mov	r0, r3
 80019aa:	f7ff fe75 	bl	8001698 <SCH_Add_Task>
		}
	}
}
 80019ae:	bf00      	nop
 80019b0:	3718      	adds	r7, #24
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bdb0      	pop	{r4, r5, r7, pc}
 80019b6:	bf00      	nop
 80019b8:	20000118 	.word	0x20000118

080019bc <Get_New_Task_ID>:

static uint32_t Get_New_Task_ID() {
 80019bc:	b480      	push	{r7}
 80019be:	af00      	add	r7, sp, #0
    return ++newTaskID;
 80019c0:	4b05      	ldr	r3, [pc, #20]	; (80019d8 <Get_New_Task_ID+0x1c>)
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	3301      	adds	r3, #1
 80019c6:	4a04      	ldr	r2, [pc, #16]	; (80019d8 <Get_New_Task_ID+0x1c>)
 80019c8:	6013      	str	r3, [r2, #0]
 80019ca:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <Get_New_Task_ID+0x1c>)
 80019cc:	681b      	ldr	r3, [r3, #0]
}
 80019ce:	4618      	mov	r0, r3
 80019d0:	46bd      	mov	sp, r7
 80019d2:	bc80      	pop	{r7}
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	200001e0 	.word	0x200001e0

080019dc <setTimerSecond>:
 80019dc:	b480      	push	{r7}
 80019de:	b083      	sub	sp, #12
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	4a08      	ldr	r2, [pc, #32]	; (8001a08 <setTimerSecond+0x2c>)
 80019e8:	fb82 1203 	smull	r1, r2, r2, r3
 80019ec:	1092      	asrs	r2, r2, #2
 80019ee:	17db      	asrs	r3, r3, #31
 80019f0:	1ad3      	subs	r3, r2, r3
 80019f2:	4a06      	ldr	r2, [pc, #24]	; (8001a0c <setTimerSecond+0x30>)
 80019f4:	6013      	str	r3, [r2, #0]
 80019f6:	4b06      	ldr	r3, [pc, #24]	; (8001a10 <setTimerSecond+0x34>)
 80019f8:	2200      	movs	r2, #0
 80019fa:	601a      	str	r2, [r3, #0]
 80019fc:	bf00      	nop
 80019fe:	370c      	adds	r7, #12
 8001a00:	46bd      	mov	sp, r7
 8001a02:	bc80      	pop	{r7}
 8001a04:	4770      	bx	lr
 8001a06:	bf00      	nop
 8001a08:	66666667 	.word	0x66666667
 8001a0c:	200001f0 	.word	0x200001f0
 8001a10:	200001ec 	.word	0x200001ec

08001a14 <setTimer>:
 8001a14:	b480      	push	{r7}
 8001a16:	b083      	sub	sp, #12
 8001a18:	af00      	add	r7, sp, #0
 8001a1a:	6078      	str	r0, [r7, #4]
 8001a1c:	6039      	str	r1, [r7, #0]
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	4a09      	ldr	r2, [pc, #36]	; (8001a48 <setTimer+0x34>)
 8001a22:	fb82 1203 	smull	r1, r2, r2, r3
 8001a26:	1092      	asrs	r2, r2, #2
 8001a28:	17db      	asrs	r3, r3, #31
 8001a2a:	1ad2      	subs	r2, r2, r3
 8001a2c:	4907      	ldr	r1, [pc, #28]	; (8001a4c <setTimer+0x38>)
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a34:	4a06      	ldr	r2, [pc, #24]	; (8001a50 <setTimer+0x3c>)
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	2100      	movs	r1, #0
 8001a3a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8001a3e:	bf00      	nop
 8001a40:	370c      	adds	r7, #12
 8001a42:	46bd      	mov	sp, r7
 8001a44:	bc80      	pop	{r7}
 8001a46:	4770      	bx	lr
 8001a48:	66666667 	.word	0x66666667
 8001a4c:	2000020c 	.word	0x2000020c
 8001a50:	200001f4 	.word	0x200001f4

08001a54 <timerRun>:
 8001a54:	b480      	push	{r7}
 8001a56:	b083      	sub	sp, #12
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	607b      	str	r3, [r7, #4]
 8001a5e:	e01c      	b.n	8001a9a <timerRun+0x46>
 8001a60:	4a12      	ldr	r2, [pc, #72]	; (8001aac <timerRun+0x58>)
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	dd13      	ble.n	8001a94 <timerRun+0x40>
 8001a6c:	4a0f      	ldr	r2, [pc, #60]	; (8001aac <timerRun+0x58>)
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a74:	1e5a      	subs	r2, r3, #1
 8001a76:	490d      	ldr	r1, [pc, #52]	; (8001aac <timerRun+0x58>)
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a7e:	4a0b      	ldr	r2, [pc, #44]	; (8001aac <timerRun+0x58>)
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	dc04      	bgt.n	8001a94 <timerRun+0x40>
 8001a8a:	4a09      	ldr	r2, [pc, #36]	; (8001ab0 <timerRun+0x5c>)
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	2101      	movs	r1, #1
 8001a90:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	3301      	adds	r3, #1
 8001a98:	607b      	str	r3, [r7, #4]
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	2b05      	cmp	r3, #5
 8001a9e:	dddf      	ble.n	8001a60 <timerRun+0xc>
 8001aa0:	bf00      	nop
 8001aa2:	bf00      	nop
 8001aa4:	370c      	adds	r7, #12
 8001aa6:	46bd      	mov	sp, r7
 8001aa8:	bc80      	pop	{r7}
 8001aaa:	4770      	bx	lr
 8001aac:	2000020c 	.word	0x2000020c
 8001ab0:	200001f4 	.word	0x200001f4

08001ab4 <timerRunSecond>:
 8001ab4:	b480      	push	{r7}
 8001ab6:	af00      	add	r7, sp, #0
 8001ab8:	4b09      	ldr	r3, [pc, #36]	; (8001ae0 <timerRunSecond+0x2c>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	dd0b      	ble.n	8001ad8 <timerRunSecond+0x24>
 8001ac0:	4b07      	ldr	r3, [pc, #28]	; (8001ae0 <timerRunSecond+0x2c>)
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	3b01      	subs	r3, #1
 8001ac6:	4a06      	ldr	r2, [pc, #24]	; (8001ae0 <timerRunSecond+0x2c>)
 8001ac8:	6013      	str	r3, [r2, #0]
 8001aca:	4b05      	ldr	r3, [pc, #20]	; (8001ae0 <timerRunSecond+0x2c>)
 8001acc:	681b      	ldr	r3, [r3, #0]
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	dc02      	bgt.n	8001ad8 <timerRunSecond+0x24>
 8001ad2:	4b04      	ldr	r3, [pc, #16]	; (8001ae4 <timerRunSecond+0x30>)
 8001ad4:	2201      	movs	r2, #1
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	bf00      	nop
 8001ada:	46bd      	mov	sp, r7
 8001adc:	bc80      	pop	{r7}
 8001ade:	4770      	bx	lr
 8001ae0:	200001f0 	.word	0x200001f0
 8001ae4:	200001ec 	.word	0x200001ec

08001ae8 <timerRun7SEG>:
 8001ae8:	b480      	push	{r7}
 8001aea:	af00      	add	r7, sp, #0
 8001aec:	4b09      	ldr	r3, [pc, #36]	; (8001b14 <timerRun7SEG+0x2c>)
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	dd0b      	ble.n	8001b0c <timerRun7SEG+0x24>
 8001af4:	4b07      	ldr	r3, [pc, #28]	; (8001b14 <timerRun7SEG+0x2c>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	3b01      	subs	r3, #1
 8001afa:	4a06      	ldr	r2, [pc, #24]	; (8001b14 <timerRun7SEG+0x2c>)
 8001afc:	6013      	str	r3, [r2, #0]
 8001afe:	4b05      	ldr	r3, [pc, #20]	; (8001b14 <timerRun7SEG+0x2c>)
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	dc02      	bgt.n	8001b0c <timerRun7SEG+0x24>
 8001b06:	4b04      	ldr	r3, [pc, #16]	; (8001b18 <timerRun7SEG+0x30>)
 8001b08:	2201      	movs	r2, #1
 8001b0a:	601a      	str	r2, [r3, #0]
 8001b0c:	bf00      	nop
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	bc80      	pop	{r7}
 8001b12:	4770      	bx	lr
 8001b14:	200001e8 	.word	0x200001e8
 8001b18:	200001e4 	.word	0x200001e4

08001b1c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b1c:	b480      	push	{r7}
 8001b1e:	b085      	sub	sp, #20
 8001b20:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001b22:	4b15      	ldr	r3, [pc, #84]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b24:	699b      	ldr	r3, [r3, #24]
 8001b26:	4a14      	ldr	r2, [pc, #80]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b28:	f043 0301 	orr.w	r3, r3, #1
 8001b2c:	6193      	str	r3, [r2, #24]
 8001b2e:	4b12      	ldr	r3, [pc, #72]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b30:	699b      	ldr	r3, [r3, #24]
 8001b32:	f003 0301 	and.w	r3, r3, #1
 8001b36:	60bb      	str	r3, [r7, #8]
 8001b38:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b3a:	4b0f      	ldr	r3, [pc, #60]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b3c:	69db      	ldr	r3, [r3, #28]
 8001b3e:	4a0e      	ldr	r2, [pc, #56]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b40:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b44:	61d3      	str	r3, [r2, #28]
 8001b46:	4b0c      	ldr	r3, [pc, #48]	; (8001b78 <HAL_MspInit+0x5c>)
 8001b48:	69db      	ldr	r3, [r3, #28]
 8001b4a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b4e:	607b      	str	r3, [r7, #4]
 8001b50:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001b52:	4b0a      	ldr	r3, [pc, #40]	; (8001b7c <HAL_MspInit+0x60>)
 8001b54:	685b      	ldr	r3, [r3, #4]
 8001b56:	60fb      	str	r3, [r7, #12]
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001b5e:	60fb      	str	r3, [r7, #12]
 8001b60:	68fb      	ldr	r3, [r7, #12]
 8001b62:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001b66:	60fb      	str	r3, [r7, #12]
 8001b68:	4a04      	ldr	r2, [pc, #16]	; (8001b7c <HAL_MspInit+0x60>)
 8001b6a:	68fb      	ldr	r3, [r7, #12]
 8001b6c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b6e:	bf00      	nop
 8001b70:	3714      	adds	r7, #20
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bc80      	pop	{r7}
 8001b76:	4770      	bx	lr
 8001b78:	40021000 	.word	0x40021000
 8001b7c:	40010000 	.word	0x40010000

08001b80 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b084      	sub	sp, #16
 8001b84:	af00      	add	r7, sp, #0
 8001b86:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001b90:	d114      	bne.n	8001bbc <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001b92:	4b19      	ldr	r3, [pc, #100]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001b94:	69db      	ldr	r3, [r3, #28]
 8001b96:	4a18      	ldr	r2, [pc, #96]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001b98:	f043 0301 	orr.w	r3, r3, #1
 8001b9c:	61d3      	str	r3, [r2, #28]
 8001b9e:	4b16      	ldr	r3, [pc, #88]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001ba0:	69db      	ldr	r3, [r3, #28]
 8001ba2:	f003 0301 	and.w	r3, r3, #1
 8001ba6:	60fb      	str	r3, [r7, #12]
 8001ba8:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001baa:	2200      	movs	r2, #0
 8001bac:	2100      	movs	r1, #0
 8001bae:	201c      	movs	r0, #28
 8001bb0:	f000 fa9b 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001bb4:	201c      	movs	r0, #28
 8001bb6:	f000 fab4 	bl	8002122 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001bba:	e018      	b.n	8001bee <HAL_TIM_Base_MspInit+0x6e>
  else if(htim_base->Instance==TIM3)
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a0e      	ldr	r2, [pc, #56]	; (8001bfc <HAL_TIM_Base_MspInit+0x7c>)
 8001bc2:	4293      	cmp	r3, r2
 8001bc4:	d113      	bne.n	8001bee <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001bc6:	4b0c      	ldr	r3, [pc, #48]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001bc8:	69db      	ldr	r3, [r3, #28]
 8001bca:	4a0b      	ldr	r2, [pc, #44]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001bcc:	f043 0302 	orr.w	r3, r3, #2
 8001bd0:	61d3      	str	r3, [r2, #28]
 8001bd2:	4b09      	ldr	r3, [pc, #36]	; (8001bf8 <HAL_TIM_Base_MspInit+0x78>)
 8001bd4:	69db      	ldr	r3, [r3, #28]
 8001bd6:	f003 0302 	and.w	r3, r3, #2
 8001bda:	60bb      	str	r3, [r7, #8]
 8001bdc:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001bde:	2200      	movs	r2, #0
 8001be0:	2100      	movs	r1, #0
 8001be2:	201d      	movs	r0, #29
 8001be4:	f000 fa81 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001be8:	201d      	movs	r0, #29
 8001bea:	f000 fa9a 	bl	8002122 <HAL_NVIC_EnableIRQ>
}
 8001bee:	bf00      	nop
 8001bf0:	3710      	adds	r7, #16
 8001bf2:	46bd      	mov	sp, r7
 8001bf4:	bd80      	pop	{r7, pc}
 8001bf6:	bf00      	nop
 8001bf8:	40021000 	.word	0x40021000
 8001bfc:	40000400 	.word	0x40000400

08001c00 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001c00:	b580      	push	{r7, lr}
 8001c02:	b088      	sub	sp, #32
 8001c04:	af00      	add	r7, sp, #0
 8001c06:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c08:	f107 0310 	add.w	r3, r7, #16
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	601a      	str	r2, [r3, #0]
 8001c10:	605a      	str	r2, [r3, #4]
 8001c12:	609a      	str	r2, [r3, #8]
 8001c14:	60da      	str	r2, [r3, #12]
  if(htim->Instance==TIM3)
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	681b      	ldr	r3, [r3, #0]
 8001c1a:	4a0f      	ldr	r2, [pc, #60]	; (8001c58 <HAL_TIM_MspPostInit+0x58>)
 8001c1c:	4293      	cmp	r3, r2
 8001c1e:	d117      	bne.n	8001c50 <HAL_TIM_MspPostInit+0x50>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c20:	4b0e      	ldr	r3, [pc, #56]	; (8001c5c <HAL_TIM_MspPostInit+0x5c>)
 8001c22:	699b      	ldr	r3, [r3, #24]
 8001c24:	4a0d      	ldr	r2, [pc, #52]	; (8001c5c <HAL_TIM_MspPostInit+0x5c>)
 8001c26:	f043 0304 	orr.w	r3, r3, #4
 8001c2a:	6193      	str	r3, [r2, #24]
 8001c2c:	4b0b      	ldr	r3, [pc, #44]	; (8001c5c <HAL_TIM_MspPostInit+0x5c>)
 8001c2e:	699b      	ldr	r3, [r3, #24]
 8001c30:	f003 0304 	and.w	r3, r3, #4
 8001c34:	60fb      	str	r3, [r7, #12]
 8001c36:	68fb      	ldr	r3, [r7, #12]
    /**TIM3 GPIO Configuration
    PA6     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001c38:	2340      	movs	r3, #64	; 0x40
 8001c3a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3c:	2302      	movs	r3, #2
 8001c3e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c40:	2302      	movs	r3, #2
 8001c42:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c44:	f107 0310 	add.w	r3, r7, #16
 8001c48:	4619      	mov	r1, r3
 8001c4a:	4805      	ldr	r0, [pc, #20]	; (8001c60 <HAL_TIM_MspPostInit+0x60>)
 8001c4c:	f000 fb36 	bl	80022bc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8001c50:	bf00      	nop
 8001c52:	3720      	adds	r7, #32
 8001c54:	46bd      	mov	sp, r7
 8001c56:	bd80      	pop	{r7, pc}
 8001c58:	40000400 	.word	0x40000400
 8001c5c:	40021000 	.word	0x40021000
 8001c60:	40010800 	.word	0x40010800

08001c64 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b088      	sub	sp, #32
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c6c:	f107 0310 	add.w	r3, r7, #16
 8001c70:	2200      	movs	r2, #0
 8001c72:	601a      	str	r2, [r3, #0]
 8001c74:	605a      	str	r2, [r3, #4]
 8001c76:	609a      	str	r2, [r3, #8]
 8001c78:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	4a1f      	ldr	r2, [pc, #124]	; (8001cfc <HAL_UART_MspInit+0x98>)
 8001c80:	4293      	cmp	r3, r2
 8001c82:	d137      	bne.n	8001cf4 <HAL_UART_MspInit+0x90>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001c84:	4b1e      	ldr	r3, [pc, #120]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001c86:	69db      	ldr	r3, [r3, #28]
 8001c88:	4a1d      	ldr	r2, [pc, #116]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001c8a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c8e:	61d3      	str	r3, [r2, #28]
 8001c90:	4b1b      	ldr	r3, [pc, #108]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001c92:	69db      	ldr	r3, [r3, #28]
 8001c94:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c98:	60fb      	str	r3, [r7, #12]
 8001c9a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c9c:	4b18      	ldr	r3, [pc, #96]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001c9e:	699b      	ldr	r3, [r3, #24]
 8001ca0:	4a17      	ldr	r2, [pc, #92]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001ca2:	f043 0304 	orr.w	r3, r3, #4
 8001ca6:	6193      	str	r3, [r2, #24]
 8001ca8:	4b15      	ldr	r3, [pc, #84]	; (8001d00 <HAL_UART_MspInit+0x9c>)
 8001caa:	699b      	ldr	r3, [r3, #24]
 8001cac:	f003 0304 	and.w	r3, r3, #4
 8001cb0:	60bb      	str	r3, [r7, #8]
 8001cb2:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001cb4:	2304      	movs	r3, #4
 8001cb6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb8:	2302      	movs	r3, #2
 8001cba:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cbc:	2303      	movs	r3, #3
 8001cbe:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc0:	f107 0310 	add.w	r3, r7, #16
 8001cc4:	4619      	mov	r1, r3
 8001cc6:	480f      	ldr	r0, [pc, #60]	; (8001d04 <HAL_UART_MspInit+0xa0>)
 8001cc8:	f000 faf8 	bl	80022bc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ccc:	2308      	movs	r3, #8
 8001cce:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cd4:	2300      	movs	r3, #0
 8001cd6:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd8:	f107 0310 	add.w	r3, r7, #16
 8001cdc:	4619      	mov	r1, r3
 8001cde:	4809      	ldr	r0, [pc, #36]	; (8001d04 <HAL_UART_MspInit+0xa0>)
 8001ce0:	f000 faec 	bl	80022bc <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	2100      	movs	r1, #0
 8001ce8:	2026      	movs	r0, #38	; 0x26
 8001cea:	f000 f9fe 	bl	80020ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001cee:	2026      	movs	r0, #38	; 0x26
 8001cf0:	f000 fa17 	bl	8002122 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001cf4:	bf00      	nop
 8001cf6:	3720      	adds	r7, #32
 8001cf8:	46bd      	mov	sp, r7
 8001cfa:	bd80      	pop	{r7, pc}
 8001cfc:	40004400 	.word	0x40004400
 8001d00:	40021000 	.word	0x40021000
 8001d04:	40010800 	.word	0x40010800

08001d08 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d08:	b480      	push	{r7}
 8001d0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001d0c:	e7fe      	b.n	8001d0c <NMI_Handler+0x4>

08001d0e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d0e:	b480      	push	{r7}
 8001d10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d12:	e7fe      	b.n	8001d12 <HardFault_Handler+0x4>

08001d14 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d14:	b480      	push	{r7}
 8001d16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d18:	e7fe      	b.n	8001d18 <MemManage_Handler+0x4>

08001d1a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d1a:	b480      	push	{r7}
 8001d1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001d1e:	e7fe      	b.n	8001d1e <BusFault_Handler+0x4>

08001d20 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001d20:	b480      	push	{r7}
 8001d22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001d24:	e7fe      	b.n	8001d24 <UsageFault_Handler+0x4>

08001d26 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001d26:	b480      	push	{r7}
 8001d28:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001d2a:	bf00      	nop
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bc80      	pop	{r7}
 8001d30:	4770      	bx	lr

08001d32 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001d32:	b480      	push	{r7}
 8001d34:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001d36:	bf00      	nop
 8001d38:	46bd      	mov	sp, r7
 8001d3a:	bc80      	pop	{r7}
 8001d3c:	4770      	bx	lr

08001d3e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001d3e:	b480      	push	{r7}
 8001d40:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001d42:	bf00      	nop
 8001d44:	46bd      	mov	sp, r7
 8001d46:	bc80      	pop	{r7}
 8001d48:	4770      	bx	lr

08001d4a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001d4a:	b580      	push	{r7, lr}
 8001d4c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001d4e:	f000 f8d9 	bl	8001f04 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001d52:	bf00      	nop
 8001d54:	bd80      	pop	{r7, pc}
	...

08001d58 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001d58:	b580      	push	{r7, lr}
 8001d5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001d5c:	4802      	ldr	r0, [pc, #8]	; (8001d68 <TIM2_IRQHandler+0x10>)
 8001d5e:	f001 fa0b 	bl	8003178 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001d62:	bf00      	nop
 8001d64:	bd80      	pop	{r7, pc}
 8001d66:	bf00      	nop
 8001d68:	20000284 	.word	0x20000284

08001d6c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001d70:	4802      	ldr	r0, [pc, #8]	; (8001d7c <TIM3_IRQHandler+0x10>)
 8001d72:	f001 fa01 	bl	8003178 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001d76:	bf00      	nop
 8001d78:	bd80      	pop	{r7, pc}
 8001d7a:	bf00      	nop
 8001d7c:	2000023c 	.word	0x2000023c

08001d80 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001d80:	b580      	push	{r7, lr}
 8001d82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001d84:	4802      	ldr	r0, [pc, #8]	; (8001d90 <USART2_IRQHandler+0x10>)
 8001d86:	f002 f895 	bl	8003eb4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001d8a:	bf00      	nop
 8001d8c:	bd80      	pop	{r7, pc}
 8001d8e:	bf00      	nop
 8001d90:	200002cc 	.word	0x200002cc

08001d94 <_sbrk>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b086      	sub	sp, #24
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	4a14      	ldr	r2, [pc, #80]	; (8001df0 <_sbrk+0x5c>)
 8001d9e:	4b15      	ldr	r3, [pc, #84]	; (8001df4 <_sbrk+0x60>)
 8001da0:	1ad3      	subs	r3, r2, r3
 8001da2:	617b      	str	r3, [r7, #20]
 8001da4:	697b      	ldr	r3, [r7, #20]
 8001da6:	613b      	str	r3, [r7, #16]
 8001da8:	4b13      	ldr	r3, [pc, #76]	; (8001df8 <_sbrk+0x64>)
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d102      	bne.n	8001db6 <_sbrk+0x22>
 8001db0:	4b11      	ldr	r3, [pc, #68]	; (8001df8 <_sbrk+0x64>)
 8001db2:	4a12      	ldr	r2, [pc, #72]	; (8001dfc <_sbrk+0x68>)
 8001db4:	601a      	str	r2, [r3, #0]
 8001db6:	4b10      	ldr	r3, [pc, #64]	; (8001df8 <_sbrk+0x64>)
 8001db8:	681a      	ldr	r2, [r3, #0]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	4413      	add	r3, r2
 8001dbe:	693a      	ldr	r2, [r7, #16]
 8001dc0:	429a      	cmp	r2, r3
 8001dc2:	d207      	bcs.n	8001dd4 <_sbrk+0x40>
 8001dc4:	f002 fdc6 	bl	8004954 <__errno>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	220c      	movs	r2, #12
 8001dcc:	601a      	str	r2, [r3, #0]
 8001dce:	f04f 33ff 	mov.w	r3, #4294967295
 8001dd2:	e009      	b.n	8001de8 <_sbrk+0x54>
 8001dd4:	4b08      	ldr	r3, [pc, #32]	; (8001df8 <_sbrk+0x64>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	60fb      	str	r3, [r7, #12]
 8001dda:	4b07      	ldr	r3, [pc, #28]	; (8001df8 <_sbrk+0x64>)
 8001ddc:	681a      	ldr	r2, [r3, #0]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	4413      	add	r3, r2
 8001de2:	4a05      	ldr	r2, [pc, #20]	; (8001df8 <_sbrk+0x64>)
 8001de4:	6013      	str	r3, [r2, #0]
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	4618      	mov	r0, r3
 8001dea:	3718      	adds	r7, #24
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd80      	pop	{r7, pc}
 8001df0:	20005000 	.word	0x20005000
 8001df4:	00000400 	.word	0x00000400
 8001df8:	20000224 	.word	0x20000224
 8001dfc:	20000328 	.word	0x20000328

08001e00 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001e00:	b480      	push	{r7}
 8001e02:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001e04:	bf00      	nop
 8001e06:	46bd      	mov	sp, r7
 8001e08:	bc80      	pop	{r7}
 8001e0a:	4770      	bx	lr

08001e0c <buzzer>:
 *  Created on: Nov 29, 2023
 *      Author: olkmphy
 */
#include "uart_buzzer.h"

void buzzer(){
 8001e0c:	b480      	push	{r7}
 8001e0e:	af00      	add	r7, sp, #0
	// Implement buzzer here...
	__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, buzzer_value);
 8001e10:	4b04      	ldr	r3, [pc, #16]	; (8001e24 <buzzer+0x18>)
 8001e12:	681a      	ldr	r2, [r3, #0]
 8001e14:	4b04      	ldr	r3, [pc, #16]	; (8001e28 <buzzer+0x1c>)
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	635a      	str	r2, [r3, #52]	; 0x34
}
 8001e1a:	bf00      	nop
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	bc80      	pop	{r7}
 8001e20:	4770      	bx	lr
 8001e22:	bf00      	nop
 8001e24:	200000e0 	.word	0x200000e0
 8001e28:	2000023c 	.word	0x2000023c

08001e2c <Reset_Handler>:
 8001e2c:	f7ff ffe8 	bl	8001e00 <SystemInit>
 8001e30:	480b      	ldr	r0, [pc, #44]	; (8001e60 <LoopFillZerobss+0xe>)
 8001e32:	490c      	ldr	r1, [pc, #48]	; (8001e64 <LoopFillZerobss+0x12>)
 8001e34:	4a0c      	ldr	r2, [pc, #48]	; (8001e68 <LoopFillZerobss+0x16>)
 8001e36:	2300      	movs	r3, #0
 8001e38:	e002      	b.n	8001e40 <LoopCopyDataInit>

08001e3a <CopyDataInit>:
 8001e3a:	58d4      	ldr	r4, [r2, r3]
 8001e3c:	50c4      	str	r4, [r0, r3]
 8001e3e:	3304      	adds	r3, #4

08001e40 <LoopCopyDataInit>:
 8001e40:	18c4      	adds	r4, r0, r3
 8001e42:	428c      	cmp	r4, r1
 8001e44:	d3f9      	bcc.n	8001e3a <CopyDataInit>
 8001e46:	4a09      	ldr	r2, [pc, #36]	; (8001e6c <LoopFillZerobss+0x1a>)
 8001e48:	4c09      	ldr	r4, [pc, #36]	; (8001e70 <LoopFillZerobss+0x1e>)
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	e001      	b.n	8001e52 <LoopFillZerobss>

08001e4e <FillZerobss>:
 8001e4e:	6013      	str	r3, [r2, #0]
 8001e50:	3204      	adds	r2, #4

08001e52 <LoopFillZerobss>:
 8001e52:	42a2      	cmp	r2, r4
 8001e54:	d3fb      	bcc.n	8001e4e <FillZerobss>
 8001e56:	f002 fd83 	bl	8004960 <__libc_init_array>
 8001e5a:	f7ff f9ab 	bl	80011b4 <main>
 8001e5e:	4770      	bx	lr
 8001e60:	20000000 	.word	0x20000000
 8001e64:	200000b4 	.word	0x200000b4
 8001e68:	080052f4 	.word	0x080052f4
 8001e6c:	200000b4 	.word	0x200000b4
 8001e70:	20000328 	.word	0x20000328

08001e74 <ADC1_2_IRQHandler>:
 8001e74:	e7fe      	b.n	8001e74 <ADC1_2_IRQHandler>
	...

08001e78 <HAL_Init>:
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	af00      	add	r7, sp, #0
 8001e7c:	4b08      	ldr	r3, [pc, #32]	; (8001ea0 <HAL_Init+0x28>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4a07      	ldr	r2, [pc, #28]	; (8001ea0 <HAL_Init+0x28>)
 8001e82:	f043 0310 	orr.w	r3, r3, #16
 8001e86:	6013      	str	r3, [r2, #0]
 8001e88:	2003      	movs	r0, #3
 8001e8a:	f000 f923 	bl	80020d4 <HAL_NVIC_SetPriorityGrouping>
 8001e8e:	200f      	movs	r0, #15
 8001e90:	f000 f808 	bl	8001ea4 <HAL_InitTick>
 8001e94:	f7ff fe42 	bl	8001b1c <HAL_MspInit>
 8001e98:	2300      	movs	r3, #0
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	40022000 	.word	0x40022000

08001ea4 <HAL_InitTick>:
 8001ea4:	b580      	push	{r7, lr}
 8001ea6:	b082      	sub	sp, #8
 8001ea8:	af00      	add	r7, sp, #0
 8001eaa:	6078      	str	r0, [r7, #4]
 8001eac:	4b12      	ldr	r3, [pc, #72]	; (8001ef8 <HAL_InitTick+0x54>)
 8001eae:	681a      	ldr	r2, [r3, #0]
 8001eb0:	4b12      	ldr	r3, [pc, #72]	; (8001efc <HAL_InitTick+0x58>)
 8001eb2:	781b      	ldrb	r3, [r3, #0]
 8001eb4:	4619      	mov	r1, r3
 8001eb6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001eba:	fbb3 f3f1 	udiv	r3, r3, r1
 8001ebe:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	f000 f93b 	bl	800213e <HAL_SYSTICK_Config>
 8001ec8:	4603      	mov	r3, r0
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d001      	beq.n	8001ed2 <HAL_InitTick+0x2e>
 8001ece:	2301      	movs	r3, #1
 8001ed0:	e00e      	b.n	8001ef0 <HAL_InitTick+0x4c>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	2b0f      	cmp	r3, #15
 8001ed6:	d80a      	bhi.n	8001eee <HAL_InitTick+0x4a>
 8001ed8:	2200      	movs	r2, #0
 8001eda:	6879      	ldr	r1, [r7, #4]
 8001edc:	f04f 30ff 	mov.w	r0, #4294967295
 8001ee0:	f000 f903 	bl	80020ea <HAL_NVIC_SetPriority>
 8001ee4:	4a06      	ldr	r2, [pc, #24]	; (8001f00 <HAL_InitTick+0x5c>)
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	6013      	str	r3, [r2, #0]
 8001eea:	2300      	movs	r3, #0
 8001eec:	e000      	b.n	8001ef0 <HAL_InitTick+0x4c>
 8001eee:	2301      	movs	r3, #1
 8001ef0:	4618      	mov	r0, r3
 8001ef2:	3708      	adds	r7, #8
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	bd80      	pop	{r7, pc}
 8001ef8:	20000044 	.word	0x20000044
 8001efc:	2000004c 	.word	0x2000004c
 8001f00:	20000048 	.word	0x20000048

08001f04 <HAL_IncTick>:
 8001f04:	b480      	push	{r7}
 8001f06:	af00      	add	r7, sp, #0
 8001f08:	4b05      	ldr	r3, [pc, #20]	; (8001f20 <HAL_IncTick+0x1c>)
 8001f0a:	781b      	ldrb	r3, [r3, #0]
 8001f0c:	461a      	mov	r2, r3
 8001f0e:	4b05      	ldr	r3, [pc, #20]	; (8001f24 <HAL_IncTick+0x20>)
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	4413      	add	r3, r2
 8001f14:	4a03      	ldr	r2, [pc, #12]	; (8001f24 <HAL_IncTick+0x20>)
 8001f16:	6013      	str	r3, [r2, #0]
 8001f18:	bf00      	nop
 8001f1a:	46bd      	mov	sp, r7
 8001f1c:	bc80      	pop	{r7}
 8001f1e:	4770      	bx	lr
 8001f20:	2000004c 	.word	0x2000004c
 8001f24:	20000314 	.word	0x20000314

08001f28 <HAL_GetTick>:
 8001f28:	b480      	push	{r7}
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	4b02      	ldr	r3, [pc, #8]	; (8001f38 <HAL_GetTick+0x10>)
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	4618      	mov	r0, r3
 8001f32:	46bd      	mov	sp, r7
 8001f34:	bc80      	pop	{r7}
 8001f36:	4770      	bx	lr
 8001f38:	20000314 	.word	0x20000314

08001f3c <__NVIC_SetPriorityGrouping>:
 8001f3c:	b480      	push	{r7}
 8001f3e:	b085      	sub	sp, #20
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	6078      	str	r0, [r7, #4]
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	f003 0307 	and.w	r3, r3, #7
 8001f4a:	60fb      	str	r3, [r7, #12]
 8001f4c:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <__NVIC_SetPriorityGrouping+0x44>)
 8001f4e:	68db      	ldr	r3, [r3, #12]
 8001f50:	60bb      	str	r3, [r7, #8]
 8001f52:	68ba      	ldr	r2, [r7, #8]
 8001f54:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001f58:	4013      	ands	r3, r2
 8001f5a:	60bb      	str	r3, [r7, #8]
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	021a      	lsls	r2, r3, #8
 8001f60:	68bb      	ldr	r3, [r7, #8]
 8001f62:	4313      	orrs	r3, r2
 8001f64:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001f68:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001f6c:	60bb      	str	r3, [r7, #8]
 8001f6e:	4a04      	ldr	r2, [pc, #16]	; (8001f80 <__NVIC_SetPriorityGrouping+0x44>)
 8001f70:	68bb      	ldr	r3, [r7, #8]
 8001f72:	60d3      	str	r3, [r2, #12]
 8001f74:	bf00      	nop
 8001f76:	3714      	adds	r7, #20
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bc80      	pop	{r7}
 8001f7c:	4770      	bx	lr
 8001f7e:	bf00      	nop
 8001f80:	e000ed00 	.word	0xe000ed00

08001f84 <__NVIC_GetPriorityGrouping>:
 8001f84:	b480      	push	{r7}
 8001f86:	af00      	add	r7, sp, #0
 8001f88:	4b04      	ldr	r3, [pc, #16]	; (8001f9c <__NVIC_GetPriorityGrouping+0x18>)
 8001f8a:	68db      	ldr	r3, [r3, #12]
 8001f8c:	0a1b      	lsrs	r3, r3, #8
 8001f8e:	f003 0307 	and.w	r3, r3, #7
 8001f92:	4618      	mov	r0, r3
 8001f94:	46bd      	mov	sp, r7
 8001f96:	bc80      	pop	{r7}
 8001f98:	4770      	bx	lr
 8001f9a:	bf00      	nop
 8001f9c:	e000ed00 	.word	0xe000ed00

08001fa0 <__NVIC_EnableIRQ>:
 8001fa0:	b480      	push	{r7}
 8001fa2:	b083      	sub	sp, #12
 8001fa4:	af00      	add	r7, sp, #0
 8001fa6:	4603      	mov	r3, r0
 8001fa8:	71fb      	strb	r3, [r7, #7]
 8001faa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	db0b      	blt.n	8001fca <__NVIC_EnableIRQ+0x2a>
 8001fb2:	79fb      	ldrb	r3, [r7, #7]
 8001fb4:	f003 021f 	and.w	r2, r3, #31
 8001fb8:	4906      	ldr	r1, [pc, #24]	; (8001fd4 <__NVIC_EnableIRQ+0x34>)
 8001fba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fbe:	095b      	lsrs	r3, r3, #5
 8001fc0:	2001      	movs	r0, #1
 8001fc2:	fa00 f202 	lsl.w	r2, r0, r2
 8001fc6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001fca:	bf00      	nop
 8001fcc:	370c      	adds	r7, #12
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bc80      	pop	{r7}
 8001fd2:	4770      	bx	lr
 8001fd4:	e000e100 	.word	0xe000e100

08001fd8 <__NVIC_SetPriority>:
 8001fd8:	b480      	push	{r7}
 8001fda:	b083      	sub	sp, #12
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	4603      	mov	r3, r0
 8001fe0:	6039      	str	r1, [r7, #0]
 8001fe2:	71fb      	strb	r3, [r7, #7]
 8001fe4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	db0a      	blt.n	8002002 <__NVIC_SetPriority+0x2a>
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	b2da      	uxtb	r2, r3
 8001ff0:	490c      	ldr	r1, [pc, #48]	; (8002024 <__NVIC_SetPriority+0x4c>)
 8001ff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ff6:	0112      	lsls	r2, r2, #4
 8001ff8:	b2d2      	uxtb	r2, r2
 8001ffa:	440b      	add	r3, r1
 8001ffc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002000:	e00a      	b.n	8002018 <__NVIC_SetPriority+0x40>
 8002002:	683b      	ldr	r3, [r7, #0]
 8002004:	b2da      	uxtb	r2, r3
 8002006:	4908      	ldr	r1, [pc, #32]	; (8002028 <__NVIC_SetPriority+0x50>)
 8002008:	79fb      	ldrb	r3, [r7, #7]
 800200a:	f003 030f 	and.w	r3, r3, #15
 800200e:	3b04      	subs	r3, #4
 8002010:	0112      	lsls	r2, r2, #4
 8002012:	b2d2      	uxtb	r2, r2
 8002014:	440b      	add	r3, r1
 8002016:	761a      	strb	r2, [r3, #24]
 8002018:	bf00      	nop
 800201a:	370c      	adds	r7, #12
 800201c:	46bd      	mov	sp, r7
 800201e:	bc80      	pop	{r7}
 8002020:	4770      	bx	lr
 8002022:	bf00      	nop
 8002024:	e000e100 	.word	0xe000e100
 8002028:	e000ed00 	.word	0xe000ed00

0800202c <NVIC_EncodePriority>:
 800202c:	b480      	push	{r7}
 800202e:	b089      	sub	sp, #36	; 0x24
 8002030:	af00      	add	r7, sp, #0
 8002032:	60f8      	str	r0, [r7, #12]
 8002034:	60b9      	str	r1, [r7, #8]
 8002036:	607a      	str	r2, [r7, #4]
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	f003 0307 	and.w	r3, r3, #7
 800203e:	61fb      	str	r3, [r7, #28]
 8002040:	69fb      	ldr	r3, [r7, #28]
 8002042:	f1c3 0307 	rsb	r3, r3, #7
 8002046:	2b04      	cmp	r3, #4
 8002048:	bf28      	it	cs
 800204a:	2304      	movcs	r3, #4
 800204c:	61bb      	str	r3, [r7, #24]
 800204e:	69fb      	ldr	r3, [r7, #28]
 8002050:	3304      	adds	r3, #4
 8002052:	2b06      	cmp	r3, #6
 8002054:	d902      	bls.n	800205c <NVIC_EncodePriority+0x30>
 8002056:	69fb      	ldr	r3, [r7, #28]
 8002058:	3b03      	subs	r3, #3
 800205a:	e000      	b.n	800205e <NVIC_EncodePriority+0x32>
 800205c:	2300      	movs	r3, #0
 800205e:	617b      	str	r3, [r7, #20]
 8002060:	f04f 32ff 	mov.w	r2, #4294967295
 8002064:	69bb      	ldr	r3, [r7, #24]
 8002066:	fa02 f303 	lsl.w	r3, r2, r3
 800206a:	43da      	mvns	r2, r3
 800206c:	68bb      	ldr	r3, [r7, #8]
 800206e:	401a      	ands	r2, r3
 8002070:	697b      	ldr	r3, [r7, #20]
 8002072:	409a      	lsls	r2, r3
 8002074:	f04f 31ff 	mov.w	r1, #4294967295
 8002078:	697b      	ldr	r3, [r7, #20]
 800207a:	fa01 f303 	lsl.w	r3, r1, r3
 800207e:	43d9      	mvns	r1, r3
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	400b      	ands	r3, r1
 8002084:	4313      	orrs	r3, r2
 8002086:	4618      	mov	r0, r3
 8002088:	3724      	adds	r7, #36	; 0x24
 800208a:	46bd      	mov	sp, r7
 800208c:	bc80      	pop	{r7}
 800208e:	4770      	bx	lr

08002090 <SysTick_Config>:
 8002090:	b580      	push	{r7, lr}
 8002092:	b082      	sub	sp, #8
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	3b01      	subs	r3, #1
 800209c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80020a0:	d301      	bcc.n	80020a6 <SysTick_Config+0x16>
 80020a2:	2301      	movs	r3, #1
 80020a4:	e00f      	b.n	80020c6 <SysTick_Config+0x36>
 80020a6:	4a0a      	ldr	r2, [pc, #40]	; (80020d0 <SysTick_Config+0x40>)
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	3b01      	subs	r3, #1
 80020ac:	6053      	str	r3, [r2, #4]
 80020ae:	210f      	movs	r1, #15
 80020b0:	f04f 30ff 	mov.w	r0, #4294967295
 80020b4:	f7ff ff90 	bl	8001fd8 <__NVIC_SetPriority>
 80020b8:	4b05      	ldr	r3, [pc, #20]	; (80020d0 <SysTick_Config+0x40>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	609a      	str	r2, [r3, #8]
 80020be:	4b04      	ldr	r3, [pc, #16]	; (80020d0 <SysTick_Config+0x40>)
 80020c0:	2207      	movs	r2, #7
 80020c2:	601a      	str	r2, [r3, #0]
 80020c4:	2300      	movs	r3, #0
 80020c6:	4618      	mov	r0, r3
 80020c8:	3708      	adds	r7, #8
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bd80      	pop	{r7, pc}
 80020ce:	bf00      	nop
 80020d0:	e000e010 	.word	0xe000e010

080020d4 <HAL_NVIC_SetPriorityGrouping>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b082      	sub	sp, #8
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	6878      	ldr	r0, [r7, #4]
 80020de:	f7ff ff2d 	bl	8001f3c <__NVIC_SetPriorityGrouping>
 80020e2:	bf00      	nop
 80020e4:	3708      	adds	r7, #8
 80020e6:	46bd      	mov	sp, r7
 80020e8:	bd80      	pop	{r7, pc}

080020ea <HAL_NVIC_SetPriority>:
 80020ea:	b580      	push	{r7, lr}
 80020ec:	b086      	sub	sp, #24
 80020ee:	af00      	add	r7, sp, #0
 80020f0:	4603      	mov	r3, r0
 80020f2:	60b9      	str	r1, [r7, #8]
 80020f4:	607a      	str	r2, [r7, #4]
 80020f6:	73fb      	strb	r3, [r7, #15]
 80020f8:	2300      	movs	r3, #0
 80020fa:	617b      	str	r3, [r7, #20]
 80020fc:	f7ff ff42 	bl	8001f84 <__NVIC_GetPriorityGrouping>
 8002100:	6178      	str	r0, [r7, #20]
 8002102:	687a      	ldr	r2, [r7, #4]
 8002104:	68b9      	ldr	r1, [r7, #8]
 8002106:	6978      	ldr	r0, [r7, #20]
 8002108:	f7ff ff90 	bl	800202c <NVIC_EncodePriority>
 800210c:	4602      	mov	r2, r0
 800210e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002112:	4611      	mov	r1, r2
 8002114:	4618      	mov	r0, r3
 8002116:	f7ff ff5f 	bl	8001fd8 <__NVIC_SetPriority>
 800211a:	bf00      	nop
 800211c:	3718      	adds	r7, #24
 800211e:	46bd      	mov	sp, r7
 8002120:	bd80      	pop	{r7, pc}

08002122 <HAL_NVIC_EnableIRQ>:
 8002122:	b580      	push	{r7, lr}
 8002124:	b082      	sub	sp, #8
 8002126:	af00      	add	r7, sp, #0
 8002128:	4603      	mov	r3, r0
 800212a:	71fb      	strb	r3, [r7, #7]
 800212c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002130:	4618      	mov	r0, r3
 8002132:	f7ff ff35 	bl	8001fa0 <__NVIC_EnableIRQ>
 8002136:	bf00      	nop
 8002138:	3708      	adds	r7, #8
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}

0800213e <HAL_SYSTICK_Config>:
 800213e:	b580      	push	{r7, lr}
 8002140:	b082      	sub	sp, #8
 8002142:	af00      	add	r7, sp, #0
 8002144:	6078      	str	r0, [r7, #4]
 8002146:	6878      	ldr	r0, [r7, #4]
 8002148:	f7ff ffa2 	bl	8002090 <SysTick_Config>
 800214c:	4603      	mov	r3, r0
 800214e:	4618      	mov	r0, r3
 8002150:	3708      	adds	r7, #8
 8002152:	46bd      	mov	sp, r7
 8002154:	bd80      	pop	{r7, pc}

08002156 <HAL_DMA_Abort>:
 8002156:	b480      	push	{r7}
 8002158:	b085      	sub	sp, #20
 800215a:	af00      	add	r7, sp, #0
 800215c:	6078      	str	r0, [r7, #4]
 800215e:	2300      	movs	r3, #0
 8002160:	73fb      	strb	r3, [r7, #15]
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8002168:	b2db      	uxtb	r3, r3
 800216a:	2b02      	cmp	r3, #2
 800216c:	d008      	beq.n	8002180 <HAL_DMA_Abort+0x2a>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2204      	movs	r2, #4
 8002172:	639a      	str	r2, [r3, #56]	; 0x38
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	2200      	movs	r2, #0
 8002178:	f883 2020 	strb.w	r2, [r3, #32]
 800217c:	2301      	movs	r3, #1
 800217e:	e020      	b.n	80021c2 <HAL_DMA_Abort+0x6c>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	681a      	ldr	r2, [r3, #0]
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	f022 020e 	bic.w	r2, r2, #14
 800218e:	601a      	str	r2, [r3, #0]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	681a      	ldr	r2, [r3, #0]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f022 0201 	bic.w	r2, r2, #1
 800219e:	601a      	str	r2, [r3, #0]
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80021a8:	2101      	movs	r1, #1
 80021aa:	fa01 f202 	lsl.w	r2, r1, r2
 80021ae:	605a      	str	r2, [r3, #4]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	2201      	movs	r2, #1
 80021b4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	2200      	movs	r2, #0
 80021bc:	f883 2020 	strb.w	r2, [r3, #32]
 80021c0:	7bfb      	ldrb	r3, [r7, #15]
 80021c2:	4618      	mov	r0, r3
 80021c4:	3714      	adds	r7, #20
 80021c6:	46bd      	mov	sp, r7
 80021c8:	bc80      	pop	{r7}
 80021ca:	4770      	bx	lr

080021cc <HAL_DMA_Abort_IT>:
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b084      	sub	sp, #16
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	2300      	movs	r3, #0
 80021d6:	73fb      	strb	r3, [r7, #15]
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80021de:	b2db      	uxtb	r3, r3
 80021e0:	2b02      	cmp	r3, #2
 80021e2:	d005      	beq.n	80021f0 <HAL_DMA_Abort_IT+0x24>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	2204      	movs	r2, #4
 80021e8:	639a      	str	r2, [r3, #56]	; 0x38
 80021ea:	2301      	movs	r3, #1
 80021ec:	73fb      	strb	r3, [r7, #15]
 80021ee:	e051      	b.n	8002294 <HAL_DMA_Abort_IT+0xc8>
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	681a      	ldr	r2, [r3, #0]
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	f022 020e 	bic.w	r2, r2, #14
 80021fe:	601a      	str	r2, [r3, #0]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	681a      	ldr	r2, [r3, #0]
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	f022 0201 	bic.w	r2, r2, #1
 800220e:	601a      	str	r2, [r3, #0]
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	4a22      	ldr	r2, [pc, #136]	; (80022a0 <HAL_DMA_Abort_IT+0xd4>)
 8002216:	4293      	cmp	r3, r2
 8002218:	d029      	beq.n	800226e <HAL_DMA_Abort_IT+0xa2>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	4a21      	ldr	r2, [pc, #132]	; (80022a4 <HAL_DMA_Abort_IT+0xd8>)
 8002220:	4293      	cmp	r3, r2
 8002222:	d022      	beq.n	800226a <HAL_DMA_Abort_IT+0x9e>
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	4a1f      	ldr	r2, [pc, #124]	; (80022a8 <HAL_DMA_Abort_IT+0xdc>)
 800222a:	4293      	cmp	r3, r2
 800222c:	d01a      	beq.n	8002264 <HAL_DMA_Abort_IT+0x98>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4a1e      	ldr	r2, [pc, #120]	; (80022ac <HAL_DMA_Abort_IT+0xe0>)
 8002234:	4293      	cmp	r3, r2
 8002236:	d012      	beq.n	800225e <HAL_DMA_Abort_IT+0x92>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4a1c      	ldr	r2, [pc, #112]	; (80022b0 <HAL_DMA_Abort_IT+0xe4>)
 800223e:	4293      	cmp	r3, r2
 8002240:	d00a      	beq.n	8002258 <HAL_DMA_Abort_IT+0x8c>
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	4a1b      	ldr	r2, [pc, #108]	; (80022b4 <HAL_DMA_Abort_IT+0xe8>)
 8002248:	4293      	cmp	r3, r2
 800224a:	d102      	bne.n	8002252 <HAL_DMA_Abort_IT+0x86>
 800224c:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8002250:	e00e      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 8002252:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002256:	e00b      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 8002258:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800225c:	e008      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 800225e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002262:	e005      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 8002264:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002268:	e002      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 800226a:	2310      	movs	r3, #16
 800226c:	e000      	b.n	8002270 <HAL_DMA_Abort_IT+0xa4>
 800226e:	2301      	movs	r3, #1
 8002270:	4a11      	ldr	r2, [pc, #68]	; (80022b8 <HAL_DMA_Abort_IT+0xec>)
 8002272:	6053      	str	r3, [r2, #4]
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	2201      	movs	r2, #1
 8002278:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	2200      	movs	r2, #0
 8002280:	f883 2020 	strb.w	r2, [r3, #32]
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002288:	2b00      	cmp	r3, #0
 800228a:	d003      	beq.n	8002294 <HAL_DMA_Abort_IT+0xc8>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002290:	6878      	ldr	r0, [r7, #4]
 8002292:	4798      	blx	r3
 8002294:	7bfb      	ldrb	r3, [r7, #15]
 8002296:	4618      	mov	r0, r3
 8002298:	3710      	adds	r7, #16
 800229a:	46bd      	mov	sp, r7
 800229c:	bd80      	pop	{r7, pc}
 800229e:	bf00      	nop
 80022a0:	40020008 	.word	0x40020008
 80022a4:	4002001c 	.word	0x4002001c
 80022a8:	40020030 	.word	0x40020030
 80022ac:	40020044 	.word	0x40020044
 80022b0:	40020058 	.word	0x40020058
 80022b4:	4002006c 	.word	0x4002006c
 80022b8:	40020000 	.word	0x40020000

080022bc <HAL_GPIO_Init>:
 80022bc:	b480      	push	{r7}
 80022be:	b08b      	sub	sp, #44	; 0x2c
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	6039      	str	r1, [r7, #0]
 80022c6:	2300      	movs	r3, #0
 80022c8:	627b      	str	r3, [r7, #36]	; 0x24
 80022ca:	2300      	movs	r3, #0
 80022cc:	623b      	str	r3, [r7, #32]
 80022ce:	e169      	b.n	80025a4 <HAL_GPIO_Init+0x2e8>
 80022d0:	2201      	movs	r2, #1
 80022d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80022d4:	fa02 f303 	lsl.w	r3, r2, r3
 80022d8:	61fb      	str	r3, [r7, #28]
 80022da:	683b      	ldr	r3, [r7, #0]
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	69fa      	ldr	r2, [r7, #28]
 80022e0:	4013      	ands	r3, r2
 80022e2:	61bb      	str	r3, [r7, #24]
 80022e4:	69ba      	ldr	r2, [r7, #24]
 80022e6:	69fb      	ldr	r3, [r7, #28]
 80022e8:	429a      	cmp	r2, r3
 80022ea:	f040 8158 	bne.w	800259e <HAL_GPIO_Init+0x2e2>
 80022ee:	683b      	ldr	r3, [r7, #0]
 80022f0:	685b      	ldr	r3, [r3, #4]
 80022f2:	4a9a      	ldr	r2, [pc, #616]	; (800255c <HAL_GPIO_Init+0x2a0>)
 80022f4:	4293      	cmp	r3, r2
 80022f6:	d05e      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 80022f8:	4a98      	ldr	r2, [pc, #608]	; (800255c <HAL_GPIO_Init+0x2a0>)
 80022fa:	4293      	cmp	r3, r2
 80022fc:	d875      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 80022fe:	4a98      	ldr	r2, [pc, #608]	; (8002560 <HAL_GPIO_Init+0x2a4>)
 8002300:	4293      	cmp	r3, r2
 8002302:	d058      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 8002304:	4a96      	ldr	r2, [pc, #600]	; (8002560 <HAL_GPIO_Init+0x2a4>)
 8002306:	4293      	cmp	r3, r2
 8002308:	d86f      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 800230a:	4a96      	ldr	r2, [pc, #600]	; (8002564 <HAL_GPIO_Init+0x2a8>)
 800230c:	4293      	cmp	r3, r2
 800230e:	d052      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 8002310:	4a94      	ldr	r2, [pc, #592]	; (8002564 <HAL_GPIO_Init+0x2a8>)
 8002312:	4293      	cmp	r3, r2
 8002314:	d869      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 8002316:	4a94      	ldr	r2, [pc, #592]	; (8002568 <HAL_GPIO_Init+0x2ac>)
 8002318:	4293      	cmp	r3, r2
 800231a:	d04c      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 800231c:	4a92      	ldr	r2, [pc, #584]	; (8002568 <HAL_GPIO_Init+0x2ac>)
 800231e:	4293      	cmp	r3, r2
 8002320:	d863      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 8002322:	4a92      	ldr	r2, [pc, #584]	; (800256c <HAL_GPIO_Init+0x2b0>)
 8002324:	4293      	cmp	r3, r2
 8002326:	d046      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 8002328:	4a90      	ldr	r2, [pc, #576]	; (800256c <HAL_GPIO_Init+0x2b0>)
 800232a:	4293      	cmp	r3, r2
 800232c:	d85d      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 800232e:	2b12      	cmp	r3, #18
 8002330:	d82a      	bhi.n	8002388 <HAL_GPIO_Init+0xcc>
 8002332:	2b12      	cmp	r3, #18
 8002334:	d859      	bhi.n	80023ea <HAL_GPIO_Init+0x12e>
 8002336:	a201      	add	r2, pc, #4	; (adr r2, 800233c <HAL_GPIO_Init+0x80>)
 8002338:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800233c:	080023b7 	.word	0x080023b7
 8002340:	08002391 	.word	0x08002391
 8002344:	080023a3 	.word	0x080023a3
 8002348:	080023e5 	.word	0x080023e5
 800234c:	080023eb 	.word	0x080023eb
 8002350:	080023eb 	.word	0x080023eb
 8002354:	080023eb 	.word	0x080023eb
 8002358:	080023eb 	.word	0x080023eb
 800235c:	080023eb 	.word	0x080023eb
 8002360:	080023eb 	.word	0x080023eb
 8002364:	080023eb 	.word	0x080023eb
 8002368:	080023eb 	.word	0x080023eb
 800236c:	080023eb 	.word	0x080023eb
 8002370:	080023eb 	.word	0x080023eb
 8002374:	080023eb 	.word	0x080023eb
 8002378:	080023eb 	.word	0x080023eb
 800237c:	080023eb 	.word	0x080023eb
 8002380:	08002399 	.word	0x08002399
 8002384:	080023ad 	.word	0x080023ad
 8002388:	4a79      	ldr	r2, [pc, #484]	; (8002570 <HAL_GPIO_Init+0x2b4>)
 800238a:	4293      	cmp	r3, r2
 800238c:	d013      	beq.n	80023b6 <HAL_GPIO_Init+0xfa>
 800238e:	e02c      	b.n	80023ea <HAL_GPIO_Init+0x12e>
 8002390:	683b      	ldr	r3, [r7, #0]
 8002392:	68db      	ldr	r3, [r3, #12]
 8002394:	623b      	str	r3, [r7, #32]
 8002396:	e029      	b.n	80023ec <HAL_GPIO_Init+0x130>
 8002398:	683b      	ldr	r3, [r7, #0]
 800239a:	68db      	ldr	r3, [r3, #12]
 800239c:	3304      	adds	r3, #4
 800239e:	623b      	str	r3, [r7, #32]
 80023a0:	e024      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023a2:	683b      	ldr	r3, [r7, #0]
 80023a4:	68db      	ldr	r3, [r3, #12]
 80023a6:	3308      	adds	r3, #8
 80023a8:	623b      	str	r3, [r7, #32]
 80023aa:	e01f      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023ac:	683b      	ldr	r3, [r7, #0]
 80023ae:	68db      	ldr	r3, [r3, #12]
 80023b0:	330c      	adds	r3, #12
 80023b2:	623b      	str	r3, [r7, #32]
 80023b4:	e01a      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023b6:	683b      	ldr	r3, [r7, #0]
 80023b8:	689b      	ldr	r3, [r3, #8]
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d102      	bne.n	80023c4 <HAL_GPIO_Init+0x108>
 80023be:	2304      	movs	r3, #4
 80023c0:	623b      	str	r3, [r7, #32]
 80023c2:	e013      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023c4:	683b      	ldr	r3, [r7, #0]
 80023c6:	689b      	ldr	r3, [r3, #8]
 80023c8:	2b01      	cmp	r3, #1
 80023ca:	d105      	bne.n	80023d8 <HAL_GPIO_Init+0x11c>
 80023cc:	2308      	movs	r3, #8
 80023ce:	623b      	str	r3, [r7, #32]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	69fa      	ldr	r2, [r7, #28]
 80023d4:	611a      	str	r2, [r3, #16]
 80023d6:	e009      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023d8:	2308      	movs	r3, #8
 80023da:	623b      	str	r3, [r7, #32]
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	69fa      	ldr	r2, [r7, #28]
 80023e0:	615a      	str	r2, [r3, #20]
 80023e2:	e003      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023e4:	2300      	movs	r3, #0
 80023e6:	623b      	str	r3, [r7, #32]
 80023e8:	e000      	b.n	80023ec <HAL_GPIO_Init+0x130>
 80023ea:	bf00      	nop
 80023ec:	69bb      	ldr	r3, [r7, #24]
 80023ee:	2bff      	cmp	r3, #255	; 0xff
 80023f0:	d801      	bhi.n	80023f6 <HAL_GPIO_Init+0x13a>
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	e001      	b.n	80023fa <HAL_GPIO_Init+0x13e>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	3304      	adds	r3, #4
 80023fa:	617b      	str	r3, [r7, #20]
 80023fc:	69bb      	ldr	r3, [r7, #24]
 80023fe:	2bff      	cmp	r3, #255	; 0xff
 8002400:	d802      	bhi.n	8002408 <HAL_GPIO_Init+0x14c>
 8002402:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002404:	009b      	lsls	r3, r3, #2
 8002406:	e002      	b.n	800240e <HAL_GPIO_Init+0x152>
 8002408:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800240a:	3b08      	subs	r3, #8
 800240c:	009b      	lsls	r3, r3, #2
 800240e:	613b      	str	r3, [r7, #16]
 8002410:	697b      	ldr	r3, [r7, #20]
 8002412:	681a      	ldr	r2, [r3, #0]
 8002414:	210f      	movs	r1, #15
 8002416:	693b      	ldr	r3, [r7, #16]
 8002418:	fa01 f303 	lsl.w	r3, r1, r3
 800241c:	43db      	mvns	r3, r3
 800241e:	401a      	ands	r2, r3
 8002420:	6a39      	ldr	r1, [r7, #32]
 8002422:	693b      	ldr	r3, [r7, #16]
 8002424:	fa01 f303 	lsl.w	r3, r1, r3
 8002428:	431a      	orrs	r2, r3
 800242a:	697b      	ldr	r3, [r7, #20]
 800242c:	601a      	str	r2, [r3, #0]
 800242e:	683b      	ldr	r3, [r7, #0]
 8002430:	685b      	ldr	r3, [r3, #4]
 8002432:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002436:	2b00      	cmp	r3, #0
 8002438:	f000 80b1 	beq.w	800259e <HAL_GPIO_Init+0x2e2>
 800243c:	4b4d      	ldr	r3, [pc, #308]	; (8002574 <HAL_GPIO_Init+0x2b8>)
 800243e:	699b      	ldr	r3, [r3, #24]
 8002440:	4a4c      	ldr	r2, [pc, #304]	; (8002574 <HAL_GPIO_Init+0x2b8>)
 8002442:	f043 0301 	orr.w	r3, r3, #1
 8002446:	6193      	str	r3, [r2, #24]
 8002448:	4b4a      	ldr	r3, [pc, #296]	; (8002574 <HAL_GPIO_Init+0x2b8>)
 800244a:	699b      	ldr	r3, [r3, #24]
 800244c:	f003 0301 	and.w	r3, r3, #1
 8002450:	60bb      	str	r3, [r7, #8]
 8002452:	68bb      	ldr	r3, [r7, #8]
 8002454:	4a48      	ldr	r2, [pc, #288]	; (8002578 <HAL_GPIO_Init+0x2bc>)
 8002456:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002458:	089b      	lsrs	r3, r3, #2
 800245a:	3302      	adds	r3, #2
 800245c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002460:	60fb      	str	r3, [r7, #12]
 8002462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002464:	f003 0303 	and.w	r3, r3, #3
 8002468:	009b      	lsls	r3, r3, #2
 800246a:	220f      	movs	r2, #15
 800246c:	fa02 f303 	lsl.w	r3, r2, r3
 8002470:	43db      	mvns	r3, r3
 8002472:	68fa      	ldr	r2, [r7, #12]
 8002474:	4013      	ands	r3, r2
 8002476:	60fb      	str	r3, [r7, #12]
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	4a40      	ldr	r2, [pc, #256]	; (800257c <HAL_GPIO_Init+0x2c0>)
 800247c:	4293      	cmp	r3, r2
 800247e:	d013      	beq.n	80024a8 <HAL_GPIO_Init+0x1ec>
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	4a3f      	ldr	r2, [pc, #252]	; (8002580 <HAL_GPIO_Init+0x2c4>)
 8002484:	4293      	cmp	r3, r2
 8002486:	d00d      	beq.n	80024a4 <HAL_GPIO_Init+0x1e8>
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	4a3e      	ldr	r2, [pc, #248]	; (8002584 <HAL_GPIO_Init+0x2c8>)
 800248c:	4293      	cmp	r3, r2
 800248e:	d007      	beq.n	80024a0 <HAL_GPIO_Init+0x1e4>
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	4a3d      	ldr	r2, [pc, #244]	; (8002588 <HAL_GPIO_Init+0x2cc>)
 8002494:	4293      	cmp	r3, r2
 8002496:	d101      	bne.n	800249c <HAL_GPIO_Init+0x1e0>
 8002498:	2303      	movs	r3, #3
 800249a:	e006      	b.n	80024aa <HAL_GPIO_Init+0x1ee>
 800249c:	2304      	movs	r3, #4
 800249e:	e004      	b.n	80024aa <HAL_GPIO_Init+0x1ee>
 80024a0:	2302      	movs	r3, #2
 80024a2:	e002      	b.n	80024aa <HAL_GPIO_Init+0x1ee>
 80024a4:	2301      	movs	r3, #1
 80024a6:	e000      	b.n	80024aa <HAL_GPIO_Init+0x1ee>
 80024a8:	2300      	movs	r3, #0
 80024aa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80024ac:	f002 0203 	and.w	r2, r2, #3
 80024b0:	0092      	lsls	r2, r2, #2
 80024b2:	4093      	lsls	r3, r2
 80024b4:	68fa      	ldr	r2, [r7, #12]
 80024b6:	4313      	orrs	r3, r2
 80024b8:	60fb      	str	r3, [r7, #12]
 80024ba:	492f      	ldr	r1, [pc, #188]	; (8002578 <HAL_GPIO_Init+0x2bc>)
 80024bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024be:	089b      	lsrs	r3, r3, #2
 80024c0:	3302      	adds	r3, #2
 80024c2:	68fa      	ldr	r2, [r7, #12]
 80024c4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80024c8:	683b      	ldr	r3, [r7, #0]
 80024ca:	685b      	ldr	r3, [r3, #4]
 80024cc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d006      	beq.n	80024e2 <HAL_GPIO_Init+0x226>
 80024d4:	4b2d      	ldr	r3, [pc, #180]	; (800258c <HAL_GPIO_Init+0x2d0>)
 80024d6:	689a      	ldr	r2, [r3, #8]
 80024d8:	492c      	ldr	r1, [pc, #176]	; (800258c <HAL_GPIO_Init+0x2d0>)
 80024da:	69bb      	ldr	r3, [r7, #24]
 80024dc:	4313      	orrs	r3, r2
 80024de:	608b      	str	r3, [r1, #8]
 80024e0:	e006      	b.n	80024f0 <HAL_GPIO_Init+0x234>
 80024e2:	4b2a      	ldr	r3, [pc, #168]	; (800258c <HAL_GPIO_Init+0x2d0>)
 80024e4:	689a      	ldr	r2, [r3, #8]
 80024e6:	69bb      	ldr	r3, [r7, #24]
 80024e8:	43db      	mvns	r3, r3
 80024ea:	4928      	ldr	r1, [pc, #160]	; (800258c <HAL_GPIO_Init+0x2d0>)
 80024ec:	4013      	ands	r3, r2
 80024ee:	608b      	str	r3, [r1, #8]
 80024f0:	683b      	ldr	r3, [r7, #0]
 80024f2:	685b      	ldr	r3, [r3, #4]
 80024f4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	d006      	beq.n	800250a <HAL_GPIO_Init+0x24e>
 80024fc:	4b23      	ldr	r3, [pc, #140]	; (800258c <HAL_GPIO_Init+0x2d0>)
 80024fe:	68da      	ldr	r2, [r3, #12]
 8002500:	4922      	ldr	r1, [pc, #136]	; (800258c <HAL_GPIO_Init+0x2d0>)
 8002502:	69bb      	ldr	r3, [r7, #24]
 8002504:	4313      	orrs	r3, r2
 8002506:	60cb      	str	r3, [r1, #12]
 8002508:	e006      	b.n	8002518 <HAL_GPIO_Init+0x25c>
 800250a:	4b20      	ldr	r3, [pc, #128]	; (800258c <HAL_GPIO_Init+0x2d0>)
 800250c:	68da      	ldr	r2, [r3, #12]
 800250e:	69bb      	ldr	r3, [r7, #24]
 8002510:	43db      	mvns	r3, r3
 8002512:	491e      	ldr	r1, [pc, #120]	; (800258c <HAL_GPIO_Init+0x2d0>)
 8002514:	4013      	ands	r3, r2
 8002516:	60cb      	str	r3, [r1, #12]
 8002518:	683b      	ldr	r3, [r7, #0]
 800251a:	685b      	ldr	r3, [r3, #4]
 800251c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002520:	2b00      	cmp	r3, #0
 8002522:	d006      	beq.n	8002532 <HAL_GPIO_Init+0x276>
 8002524:	4b19      	ldr	r3, [pc, #100]	; (800258c <HAL_GPIO_Init+0x2d0>)
 8002526:	685a      	ldr	r2, [r3, #4]
 8002528:	4918      	ldr	r1, [pc, #96]	; (800258c <HAL_GPIO_Init+0x2d0>)
 800252a:	69bb      	ldr	r3, [r7, #24]
 800252c:	4313      	orrs	r3, r2
 800252e:	604b      	str	r3, [r1, #4]
 8002530:	e006      	b.n	8002540 <HAL_GPIO_Init+0x284>
 8002532:	4b16      	ldr	r3, [pc, #88]	; (800258c <HAL_GPIO_Init+0x2d0>)
 8002534:	685a      	ldr	r2, [r3, #4]
 8002536:	69bb      	ldr	r3, [r7, #24]
 8002538:	43db      	mvns	r3, r3
 800253a:	4914      	ldr	r1, [pc, #80]	; (800258c <HAL_GPIO_Init+0x2d0>)
 800253c:	4013      	ands	r3, r2
 800253e:	604b      	str	r3, [r1, #4]
 8002540:	683b      	ldr	r3, [r7, #0]
 8002542:	685b      	ldr	r3, [r3, #4]
 8002544:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002548:	2b00      	cmp	r3, #0
 800254a:	d021      	beq.n	8002590 <HAL_GPIO_Init+0x2d4>
 800254c:	4b0f      	ldr	r3, [pc, #60]	; (800258c <HAL_GPIO_Init+0x2d0>)
 800254e:	681a      	ldr	r2, [r3, #0]
 8002550:	490e      	ldr	r1, [pc, #56]	; (800258c <HAL_GPIO_Init+0x2d0>)
 8002552:	69bb      	ldr	r3, [r7, #24]
 8002554:	4313      	orrs	r3, r2
 8002556:	600b      	str	r3, [r1, #0]
 8002558:	e021      	b.n	800259e <HAL_GPIO_Init+0x2e2>
 800255a:	bf00      	nop
 800255c:	10320000 	.word	0x10320000
 8002560:	10310000 	.word	0x10310000
 8002564:	10220000 	.word	0x10220000
 8002568:	10210000 	.word	0x10210000
 800256c:	10120000 	.word	0x10120000
 8002570:	10110000 	.word	0x10110000
 8002574:	40021000 	.word	0x40021000
 8002578:	40010000 	.word	0x40010000
 800257c:	40010800 	.word	0x40010800
 8002580:	40010c00 	.word	0x40010c00
 8002584:	40011000 	.word	0x40011000
 8002588:	40011400 	.word	0x40011400
 800258c:	40010400 	.word	0x40010400
 8002590:	4b0b      	ldr	r3, [pc, #44]	; (80025c0 <HAL_GPIO_Init+0x304>)
 8002592:	681a      	ldr	r2, [r3, #0]
 8002594:	69bb      	ldr	r3, [r7, #24]
 8002596:	43db      	mvns	r3, r3
 8002598:	4909      	ldr	r1, [pc, #36]	; (80025c0 <HAL_GPIO_Init+0x304>)
 800259a:	4013      	ands	r3, r2
 800259c:	600b      	str	r3, [r1, #0]
 800259e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025a0:	3301      	adds	r3, #1
 80025a2:	627b      	str	r3, [r7, #36]	; 0x24
 80025a4:	683b      	ldr	r3, [r7, #0]
 80025a6:	681a      	ldr	r2, [r3, #0]
 80025a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025aa:	fa22 f303 	lsr.w	r3, r2, r3
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	f47f ae8e 	bne.w	80022d0 <HAL_GPIO_Init+0x14>
 80025b4:	bf00      	nop
 80025b6:	bf00      	nop
 80025b8:	372c      	adds	r7, #44	; 0x2c
 80025ba:	46bd      	mov	sp, r7
 80025bc:	bc80      	pop	{r7}
 80025be:	4770      	bx	lr
 80025c0:	40010400 	.word	0x40010400

080025c4 <HAL_GPIO_ReadPin>:
 80025c4:	b480      	push	{r7}
 80025c6:	b085      	sub	sp, #20
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	460b      	mov	r3, r1
 80025ce:	807b      	strh	r3, [r7, #2]
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	689a      	ldr	r2, [r3, #8]
 80025d4:	887b      	ldrh	r3, [r7, #2]
 80025d6:	4013      	ands	r3, r2
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d002      	beq.n	80025e2 <HAL_GPIO_ReadPin+0x1e>
 80025dc:	2301      	movs	r3, #1
 80025de:	73fb      	strb	r3, [r7, #15]
 80025e0:	e001      	b.n	80025e6 <HAL_GPIO_ReadPin+0x22>
 80025e2:	2300      	movs	r3, #0
 80025e4:	73fb      	strb	r3, [r7, #15]
 80025e6:	7bfb      	ldrb	r3, [r7, #15]
 80025e8:	4618      	mov	r0, r3
 80025ea:	3714      	adds	r7, #20
 80025ec:	46bd      	mov	sp, r7
 80025ee:	bc80      	pop	{r7}
 80025f0:	4770      	bx	lr

080025f2 <HAL_GPIO_WritePin>:
 80025f2:	b480      	push	{r7}
 80025f4:	b083      	sub	sp, #12
 80025f6:	af00      	add	r7, sp, #0
 80025f8:	6078      	str	r0, [r7, #4]
 80025fa:	460b      	mov	r3, r1
 80025fc:	807b      	strh	r3, [r7, #2]
 80025fe:	4613      	mov	r3, r2
 8002600:	707b      	strb	r3, [r7, #1]
 8002602:	787b      	ldrb	r3, [r7, #1]
 8002604:	2b00      	cmp	r3, #0
 8002606:	d003      	beq.n	8002610 <HAL_GPIO_WritePin+0x1e>
 8002608:	887a      	ldrh	r2, [r7, #2]
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	611a      	str	r2, [r3, #16]
 800260e:	e003      	b.n	8002618 <HAL_GPIO_WritePin+0x26>
 8002610:	887b      	ldrh	r3, [r7, #2]
 8002612:	041a      	lsls	r2, r3, #16
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	611a      	str	r2, [r3, #16]
 8002618:	bf00      	nop
 800261a:	370c      	adds	r7, #12
 800261c:	46bd      	mov	sp, r7
 800261e:	bc80      	pop	{r7}
 8002620:	4770      	bx	lr
	...

08002624 <HAL_RCC_OscConfig>:
 8002624:	b580      	push	{r7, lr}
 8002626:	b086      	sub	sp, #24
 8002628:	af00      	add	r7, sp, #0
 800262a:	6078      	str	r0, [r7, #4]
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d101      	bne.n	8002636 <HAL_RCC_OscConfig+0x12>
 8002632:	2301      	movs	r3, #1
 8002634:	e26c      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	f003 0301 	and.w	r3, r3, #1
 800263e:	2b00      	cmp	r3, #0
 8002640:	f000 8087 	beq.w	8002752 <HAL_RCC_OscConfig+0x12e>
 8002644:	4b92      	ldr	r3, [pc, #584]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002646:	685b      	ldr	r3, [r3, #4]
 8002648:	f003 030c 	and.w	r3, r3, #12
 800264c:	2b04      	cmp	r3, #4
 800264e:	d00c      	beq.n	800266a <HAL_RCC_OscConfig+0x46>
 8002650:	4b8f      	ldr	r3, [pc, #572]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002652:	685b      	ldr	r3, [r3, #4]
 8002654:	f003 030c 	and.w	r3, r3, #12
 8002658:	2b08      	cmp	r3, #8
 800265a:	d112      	bne.n	8002682 <HAL_RCC_OscConfig+0x5e>
 800265c:	4b8c      	ldr	r3, [pc, #560]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002664:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002668:	d10b      	bne.n	8002682 <HAL_RCC_OscConfig+0x5e>
 800266a:	4b89      	ldr	r3, [pc, #548]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800266c:	681b      	ldr	r3, [r3, #0]
 800266e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002672:	2b00      	cmp	r3, #0
 8002674:	d06c      	beq.n	8002750 <HAL_RCC_OscConfig+0x12c>
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	685b      	ldr	r3, [r3, #4]
 800267a:	2b00      	cmp	r3, #0
 800267c:	d168      	bne.n	8002750 <HAL_RCC_OscConfig+0x12c>
 800267e:	2301      	movs	r3, #1
 8002680:	e246      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	685b      	ldr	r3, [r3, #4]
 8002686:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800268a:	d106      	bne.n	800269a <HAL_RCC_OscConfig+0x76>
 800268c:	4b80      	ldr	r3, [pc, #512]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800268e:	681b      	ldr	r3, [r3, #0]
 8002690:	4a7f      	ldr	r2, [pc, #508]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002692:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002696:	6013      	str	r3, [r2, #0]
 8002698:	e02e      	b.n	80026f8 <HAL_RCC_OscConfig+0xd4>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	685b      	ldr	r3, [r3, #4]
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d10c      	bne.n	80026bc <HAL_RCC_OscConfig+0x98>
 80026a2:	4b7b      	ldr	r3, [pc, #492]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	4a7a      	ldr	r2, [pc, #488]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80026ac:	6013      	str	r3, [r2, #0]
 80026ae:	4b78      	ldr	r3, [pc, #480]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	4a77      	ldr	r2, [pc, #476]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026b4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80026b8:	6013      	str	r3, [r2, #0]
 80026ba:	e01d      	b.n	80026f8 <HAL_RCC_OscConfig+0xd4>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	685b      	ldr	r3, [r3, #4]
 80026c0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80026c4:	d10c      	bne.n	80026e0 <HAL_RCC_OscConfig+0xbc>
 80026c6:	4b72      	ldr	r3, [pc, #456]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	4a71      	ldr	r2, [pc, #452]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026cc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80026d0:	6013      	str	r3, [r2, #0]
 80026d2:	4b6f      	ldr	r3, [pc, #444]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	4a6e      	ldr	r2, [pc, #440]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026d8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80026dc:	6013      	str	r3, [r2, #0]
 80026de:	e00b      	b.n	80026f8 <HAL_RCC_OscConfig+0xd4>
 80026e0:	4b6b      	ldr	r3, [pc, #428]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	4a6a      	ldr	r2, [pc, #424]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80026ea:	6013      	str	r3, [r2, #0]
 80026ec:	4b68      	ldr	r3, [pc, #416]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	4a67      	ldr	r2, [pc, #412]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80026f2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80026f6:	6013      	str	r3, [r2, #0]
 80026f8:	687b      	ldr	r3, [r7, #4]
 80026fa:	685b      	ldr	r3, [r3, #4]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d013      	beq.n	8002728 <HAL_RCC_OscConfig+0x104>
 8002700:	f7ff fc12 	bl	8001f28 <HAL_GetTick>
 8002704:	6138      	str	r0, [r7, #16]
 8002706:	e008      	b.n	800271a <HAL_RCC_OscConfig+0xf6>
 8002708:	f7ff fc0e 	bl	8001f28 <HAL_GetTick>
 800270c:	4602      	mov	r2, r0
 800270e:	693b      	ldr	r3, [r7, #16]
 8002710:	1ad3      	subs	r3, r2, r3
 8002712:	2b64      	cmp	r3, #100	; 0x64
 8002714:	d901      	bls.n	800271a <HAL_RCC_OscConfig+0xf6>
 8002716:	2303      	movs	r3, #3
 8002718:	e1fa      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 800271a:	4b5d      	ldr	r3, [pc, #372]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002722:	2b00      	cmp	r3, #0
 8002724:	d0f0      	beq.n	8002708 <HAL_RCC_OscConfig+0xe4>
 8002726:	e014      	b.n	8002752 <HAL_RCC_OscConfig+0x12e>
 8002728:	f7ff fbfe 	bl	8001f28 <HAL_GetTick>
 800272c:	6138      	str	r0, [r7, #16]
 800272e:	e008      	b.n	8002742 <HAL_RCC_OscConfig+0x11e>
 8002730:	f7ff fbfa 	bl	8001f28 <HAL_GetTick>
 8002734:	4602      	mov	r2, r0
 8002736:	693b      	ldr	r3, [r7, #16]
 8002738:	1ad3      	subs	r3, r2, r3
 800273a:	2b64      	cmp	r3, #100	; 0x64
 800273c:	d901      	bls.n	8002742 <HAL_RCC_OscConfig+0x11e>
 800273e:	2303      	movs	r3, #3
 8002740:	e1e6      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002742:	4b53      	ldr	r3, [pc, #332]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800274a:	2b00      	cmp	r3, #0
 800274c:	d1f0      	bne.n	8002730 <HAL_RCC_OscConfig+0x10c>
 800274e:	e000      	b.n	8002752 <HAL_RCC_OscConfig+0x12e>
 8002750:	bf00      	nop
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	f003 0302 	and.w	r3, r3, #2
 800275a:	2b00      	cmp	r3, #0
 800275c:	d063      	beq.n	8002826 <HAL_RCC_OscConfig+0x202>
 800275e:	4b4c      	ldr	r3, [pc, #304]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002760:	685b      	ldr	r3, [r3, #4]
 8002762:	f003 030c 	and.w	r3, r3, #12
 8002766:	2b00      	cmp	r3, #0
 8002768:	d00b      	beq.n	8002782 <HAL_RCC_OscConfig+0x15e>
 800276a:	4b49      	ldr	r3, [pc, #292]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800276c:	685b      	ldr	r3, [r3, #4]
 800276e:	f003 030c 	and.w	r3, r3, #12
 8002772:	2b08      	cmp	r3, #8
 8002774:	d11c      	bne.n	80027b0 <HAL_RCC_OscConfig+0x18c>
 8002776:	4b46      	ldr	r3, [pc, #280]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002778:	685b      	ldr	r3, [r3, #4]
 800277a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800277e:	2b00      	cmp	r3, #0
 8002780:	d116      	bne.n	80027b0 <HAL_RCC_OscConfig+0x18c>
 8002782:	4b43      	ldr	r3, [pc, #268]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	f003 0302 	and.w	r3, r3, #2
 800278a:	2b00      	cmp	r3, #0
 800278c:	d005      	beq.n	800279a <HAL_RCC_OscConfig+0x176>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	691b      	ldr	r3, [r3, #16]
 8002792:	2b01      	cmp	r3, #1
 8002794:	d001      	beq.n	800279a <HAL_RCC_OscConfig+0x176>
 8002796:	2301      	movs	r3, #1
 8002798:	e1ba      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 800279a:	4b3d      	ldr	r3, [pc, #244]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	695b      	ldr	r3, [r3, #20]
 80027a6:	00db      	lsls	r3, r3, #3
 80027a8:	4939      	ldr	r1, [pc, #228]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80027aa:	4313      	orrs	r3, r2
 80027ac:	600b      	str	r3, [r1, #0]
 80027ae:	e03a      	b.n	8002826 <HAL_RCC_OscConfig+0x202>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	691b      	ldr	r3, [r3, #16]
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d020      	beq.n	80027fa <HAL_RCC_OscConfig+0x1d6>
 80027b8:	4b36      	ldr	r3, [pc, #216]	; (8002894 <HAL_RCC_OscConfig+0x270>)
 80027ba:	2201      	movs	r2, #1
 80027bc:	601a      	str	r2, [r3, #0]
 80027be:	f7ff fbb3 	bl	8001f28 <HAL_GetTick>
 80027c2:	6138      	str	r0, [r7, #16]
 80027c4:	e008      	b.n	80027d8 <HAL_RCC_OscConfig+0x1b4>
 80027c6:	f7ff fbaf 	bl	8001f28 <HAL_GetTick>
 80027ca:	4602      	mov	r2, r0
 80027cc:	693b      	ldr	r3, [r7, #16]
 80027ce:	1ad3      	subs	r3, r2, r3
 80027d0:	2b02      	cmp	r3, #2
 80027d2:	d901      	bls.n	80027d8 <HAL_RCC_OscConfig+0x1b4>
 80027d4:	2303      	movs	r3, #3
 80027d6:	e19b      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 80027d8:	4b2d      	ldr	r3, [pc, #180]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f003 0302 	and.w	r3, r3, #2
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	d0f0      	beq.n	80027c6 <HAL_RCC_OscConfig+0x1a2>
 80027e4:	4b2a      	ldr	r3, [pc, #168]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	695b      	ldr	r3, [r3, #20]
 80027f0:	00db      	lsls	r3, r3, #3
 80027f2:	4927      	ldr	r1, [pc, #156]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 80027f4:	4313      	orrs	r3, r2
 80027f6:	600b      	str	r3, [r1, #0]
 80027f8:	e015      	b.n	8002826 <HAL_RCC_OscConfig+0x202>
 80027fa:	4b26      	ldr	r3, [pc, #152]	; (8002894 <HAL_RCC_OscConfig+0x270>)
 80027fc:	2200      	movs	r2, #0
 80027fe:	601a      	str	r2, [r3, #0]
 8002800:	f7ff fb92 	bl	8001f28 <HAL_GetTick>
 8002804:	6138      	str	r0, [r7, #16]
 8002806:	e008      	b.n	800281a <HAL_RCC_OscConfig+0x1f6>
 8002808:	f7ff fb8e 	bl	8001f28 <HAL_GetTick>
 800280c:	4602      	mov	r2, r0
 800280e:	693b      	ldr	r3, [r7, #16]
 8002810:	1ad3      	subs	r3, r2, r3
 8002812:	2b02      	cmp	r3, #2
 8002814:	d901      	bls.n	800281a <HAL_RCC_OscConfig+0x1f6>
 8002816:	2303      	movs	r3, #3
 8002818:	e17a      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 800281a:	4b1d      	ldr	r3, [pc, #116]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	f003 0302 	and.w	r3, r3, #2
 8002822:	2b00      	cmp	r3, #0
 8002824:	d1f0      	bne.n	8002808 <HAL_RCC_OscConfig+0x1e4>
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	f003 0308 	and.w	r3, r3, #8
 800282e:	2b00      	cmp	r3, #0
 8002830:	d03a      	beq.n	80028a8 <HAL_RCC_OscConfig+0x284>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	699b      	ldr	r3, [r3, #24]
 8002836:	2b00      	cmp	r3, #0
 8002838:	d019      	beq.n	800286e <HAL_RCC_OscConfig+0x24a>
 800283a:	4b17      	ldr	r3, [pc, #92]	; (8002898 <HAL_RCC_OscConfig+0x274>)
 800283c:	2201      	movs	r2, #1
 800283e:	601a      	str	r2, [r3, #0]
 8002840:	f7ff fb72 	bl	8001f28 <HAL_GetTick>
 8002844:	6138      	str	r0, [r7, #16]
 8002846:	e008      	b.n	800285a <HAL_RCC_OscConfig+0x236>
 8002848:	f7ff fb6e 	bl	8001f28 <HAL_GetTick>
 800284c:	4602      	mov	r2, r0
 800284e:	693b      	ldr	r3, [r7, #16]
 8002850:	1ad3      	subs	r3, r2, r3
 8002852:	2b02      	cmp	r3, #2
 8002854:	d901      	bls.n	800285a <HAL_RCC_OscConfig+0x236>
 8002856:	2303      	movs	r3, #3
 8002858:	e15a      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 800285a:	4b0d      	ldr	r3, [pc, #52]	; (8002890 <HAL_RCC_OscConfig+0x26c>)
 800285c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800285e:	f003 0302 	and.w	r3, r3, #2
 8002862:	2b00      	cmp	r3, #0
 8002864:	d0f0      	beq.n	8002848 <HAL_RCC_OscConfig+0x224>
 8002866:	2001      	movs	r0, #1
 8002868:	f000 facc 	bl	8002e04 <RCC_Delay>
 800286c:	e01c      	b.n	80028a8 <HAL_RCC_OscConfig+0x284>
 800286e:	4b0a      	ldr	r3, [pc, #40]	; (8002898 <HAL_RCC_OscConfig+0x274>)
 8002870:	2200      	movs	r2, #0
 8002872:	601a      	str	r2, [r3, #0]
 8002874:	f7ff fb58 	bl	8001f28 <HAL_GetTick>
 8002878:	6138      	str	r0, [r7, #16]
 800287a:	e00f      	b.n	800289c <HAL_RCC_OscConfig+0x278>
 800287c:	f7ff fb54 	bl	8001f28 <HAL_GetTick>
 8002880:	4602      	mov	r2, r0
 8002882:	693b      	ldr	r3, [r7, #16]
 8002884:	1ad3      	subs	r3, r2, r3
 8002886:	2b02      	cmp	r3, #2
 8002888:	d908      	bls.n	800289c <HAL_RCC_OscConfig+0x278>
 800288a:	2303      	movs	r3, #3
 800288c:	e140      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 800288e:	bf00      	nop
 8002890:	40021000 	.word	0x40021000
 8002894:	42420000 	.word	0x42420000
 8002898:	42420480 	.word	0x42420480
 800289c:	4b9e      	ldr	r3, [pc, #632]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800289e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028a0:	f003 0302 	and.w	r3, r3, #2
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d1e9      	bne.n	800287c <HAL_RCC_OscConfig+0x258>
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	f003 0304 	and.w	r3, r3, #4
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	f000 80a6 	beq.w	8002a02 <HAL_RCC_OscConfig+0x3de>
 80028b6:	2300      	movs	r3, #0
 80028b8:	75fb      	strb	r3, [r7, #23]
 80028ba:	4b97      	ldr	r3, [pc, #604]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80028bc:	69db      	ldr	r3, [r3, #28]
 80028be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d10d      	bne.n	80028e2 <HAL_RCC_OscConfig+0x2be>
 80028c6:	4b94      	ldr	r3, [pc, #592]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80028c8:	69db      	ldr	r3, [r3, #28]
 80028ca:	4a93      	ldr	r2, [pc, #588]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80028cc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80028d0:	61d3      	str	r3, [r2, #28]
 80028d2:	4b91      	ldr	r3, [pc, #580]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80028d4:	69db      	ldr	r3, [r3, #28]
 80028d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80028da:	60bb      	str	r3, [r7, #8]
 80028dc:	68bb      	ldr	r3, [r7, #8]
 80028de:	2301      	movs	r3, #1
 80028e0:	75fb      	strb	r3, [r7, #23]
 80028e2:	4b8e      	ldr	r3, [pc, #568]	; (8002b1c <HAL_RCC_OscConfig+0x4f8>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d118      	bne.n	8002920 <HAL_RCC_OscConfig+0x2fc>
 80028ee:	4b8b      	ldr	r3, [pc, #556]	; (8002b1c <HAL_RCC_OscConfig+0x4f8>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	4a8a      	ldr	r2, [pc, #552]	; (8002b1c <HAL_RCC_OscConfig+0x4f8>)
 80028f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80028f8:	6013      	str	r3, [r2, #0]
 80028fa:	f7ff fb15 	bl	8001f28 <HAL_GetTick>
 80028fe:	6138      	str	r0, [r7, #16]
 8002900:	e008      	b.n	8002914 <HAL_RCC_OscConfig+0x2f0>
 8002902:	f7ff fb11 	bl	8001f28 <HAL_GetTick>
 8002906:	4602      	mov	r2, r0
 8002908:	693b      	ldr	r3, [r7, #16]
 800290a:	1ad3      	subs	r3, r2, r3
 800290c:	2b64      	cmp	r3, #100	; 0x64
 800290e:	d901      	bls.n	8002914 <HAL_RCC_OscConfig+0x2f0>
 8002910:	2303      	movs	r3, #3
 8002912:	e0fd      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002914:	4b81      	ldr	r3, [pc, #516]	; (8002b1c <HAL_RCC_OscConfig+0x4f8>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800291c:	2b00      	cmp	r3, #0
 800291e:	d0f0      	beq.n	8002902 <HAL_RCC_OscConfig+0x2de>
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	68db      	ldr	r3, [r3, #12]
 8002924:	2b01      	cmp	r3, #1
 8002926:	d106      	bne.n	8002936 <HAL_RCC_OscConfig+0x312>
 8002928:	4b7b      	ldr	r3, [pc, #492]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800292a:	6a1b      	ldr	r3, [r3, #32]
 800292c:	4a7a      	ldr	r2, [pc, #488]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800292e:	f043 0301 	orr.w	r3, r3, #1
 8002932:	6213      	str	r3, [r2, #32]
 8002934:	e02d      	b.n	8002992 <HAL_RCC_OscConfig+0x36e>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	68db      	ldr	r3, [r3, #12]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d10c      	bne.n	8002958 <HAL_RCC_OscConfig+0x334>
 800293e:	4b76      	ldr	r3, [pc, #472]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002940:	6a1b      	ldr	r3, [r3, #32]
 8002942:	4a75      	ldr	r2, [pc, #468]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002944:	f023 0301 	bic.w	r3, r3, #1
 8002948:	6213      	str	r3, [r2, #32]
 800294a:	4b73      	ldr	r3, [pc, #460]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800294c:	6a1b      	ldr	r3, [r3, #32]
 800294e:	4a72      	ldr	r2, [pc, #456]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002950:	f023 0304 	bic.w	r3, r3, #4
 8002954:	6213      	str	r3, [r2, #32]
 8002956:	e01c      	b.n	8002992 <HAL_RCC_OscConfig+0x36e>
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	68db      	ldr	r3, [r3, #12]
 800295c:	2b05      	cmp	r3, #5
 800295e:	d10c      	bne.n	800297a <HAL_RCC_OscConfig+0x356>
 8002960:	4b6d      	ldr	r3, [pc, #436]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002962:	6a1b      	ldr	r3, [r3, #32]
 8002964:	4a6c      	ldr	r2, [pc, #432]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002966:	f043 0304 	orr.w	r3, r3, #4
 800296a:	6213      	str	r3, [r2, #32]
 800296c:	4b6a      	ldr	r3, [pc, #424]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800296e:	6a1b      	ldr	r3, [r3, #32]
 8002970:	4a69      	ldr	r2, [pc, #420]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002972:	f043 0301 	orr.w	r3, r3, #1
 8002976:	6213      	str	r3, [r2, #32]
 8002978:	e00b      	b.n	8002992 <HAL_RCC_OscConfig+0x36e>
 800297a:	4b67      	ldr	r3, [pc, #412]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800297c:	6a1b      	ldr	r3, [r3, #32]
 800297e:	4a66      	ldr	r2, [pc, #408]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002980:	f023 0301 	bic.w	r3, r3, #1
 8002984:	6213      	str	r3, [r2, #32]
 8002986:	4b64      	ldr	r3, [pc, #400]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002988:	6a1b      	ldr	r3, [r3, #32]
 800298a:	4a63      	ldr	r2, [pc, #396]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 800298c:	f023 0304 	bic.w	r3, r3, #4
 8002990:	6213      	str	r3, [r2, #32]
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	68db      	ldr	r3, [r3, #12]
 8002996:	2b00      	cmp	r3, #0
 8002998:	d015      	beq.n	80029c6 <HAL_RCC_OscConfig+0x3a2>
 800299a:	f7ff fac5 	bl	8001f28 <HAL_GetTick>
 800299e:	6138      	str	r0, [r7, #16]
 80029a0:	e00a      	b.n	80029b8 <HAL_RCC_OscConfig+0x394>
 80029a2:	f7ff fac1 	bl	8001f28 <HAL_GetTick>
 80029a6:	4602      	mov	r2, r0
 80029a8:	693b      	ldr	r3, [r7, #16]
 80029aa:	1ad3      	subs	r3, r2, r3
 80029ac:	f241 3288 	movw	r2, #5000	; 0x1388
 80029b0:	4293      	cmp	r3, r2
 80029b2:	d901      	bls.n	80029b8 <HAL_RCC_OscConfig+0x394>
 80029b4:	2303      	movs	r3, #3
 80029b6:	e0ab      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 80029b8:	4b57      	ldr	r3, [pc, #348]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80029ba:	6a1b      	ldr	r3, [r3, #32]
 80029bc:	f003 0302 	and.w	r3, r3, #2
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d0ee      	beq.n	80029a2 <HAL_RCC_OscConfig+0x37e>
 80029c4:	e014      	b.n	80029f0 <HAL_RCC_OscConfig+0x3cc>
 80029c6:	f7ff faaf 	bl	8001f28 <HAL_GetTick>
 80029ca:	6138      	str	r0, [r7, #16]
 80029cc:	e00a      	b.n	80029e4 <HAL_RCC_OscConfig+0x3c0>
 80029ce:	f7ff faab 	bl	8001f28 <HAL_GetTick>
 80029d2:	4602      	mov	r2, r0
 80029d4:	693b      	ldr	r3, [r7, #16]
 80029d6:	1ad3      	subs	r3, r2, r3
 80029d8:	f241 3288 	movw	r2, #5000	; 0x1388
 80029dc:	4293      	cmp	r3, r2
 80029de:	d901      	bls.n	80029e4 <HAL_RCC_OscConfig+0x3c0>
 80029e0:	2303      	movs	r3, #3
 80029e2:	e095      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 80029e4:	4b4c      	ldr	r3, [pc, #304]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80029e6:	6a1b      	ldr	r3, [r3, #32]
 80029e8:	f003 0302 	and.w	r3, r3, #2
 80029ec:	2b00      	cmp	r3, #0
 80029ee:	d1ee      	bne.n	80029ce <HAL_RCC_OscConfig+0x3aa>
 80029f0:	7dfb      	ldrb	r3, [r7, #23]
 80029f2:	2b01      	cmp	r3, #1
 80029f4:	d105      	bne.n	8002a02 <HAL_RCC_OscConfig+0x3de>
 80029f6:	4b48      	ldr	r3, [pc, #288]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80029f8:	69db      	ldr	r3, [r3, #28]
 80029fa:	4a47      	ldr	r2, [pc, #284]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 80029fc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002a00:	61d3      	str	r3, [r2, #28]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	69db      	ldr	r3, [r3, #28]
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	f000 8081 	beq.w	8002b0e <HAL_RCC_OscConfig+0x4ea>
 8002a0c:	4b42      	ldr	r3, [pc, #264]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a0e:	685b      	ldr	r3, [r3, #4]
 8002a10:	f003 030c 	and.w	r3, r3, #12
 8002a14:	2b08      	cmp	r3, #8
 8002a16:	d061      	beq.n	8002adc <HAL_RCC_OscConfig+0x4b8>
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	69db      	ldr	r3, [r3, #28]
 8002a1c:	2b02      	cmp	r3, #2
 8002a1e:	d146      	bne.n	8002aae <HAL_RCC_OscConfig+0x48a>
 8002a20:	4b3f      	ldr	r3, [pc, #252]	; (8002b20 <HAL_RCC_OscConfig+0x4fc>)
 8002a22:	2200      	movs	r2, #0
 8002a24:	601a      	str	r2, [r3, #0]
 8002a26:	f7ff fa7f 	bl	8001f28 <HAL_GetTick>
 8002a2a:	6138      	str	r0, [r7, #16]
 8002a2c:	e008      	b.n	8002a40 <HAL_RCC_OscConfig+0x41c>
 8002a2e:	f7ff fa7b 	bl	8001f28 <HAL_GetTick>
 8002a32:	4602      	mov	r2, r0
 8002a34:	693b      	ldr	r3, [r7, #16]
 8002a36:	1ad3      	subs	r3, r2, r3
 8002a38:	2b02      	cmp	r3, #2
 8002a3a:	d901      	bls.n	8002a40 <HAL_RCC_OscConfig+0x41c>
 8002a3c:	2303      	movs	r3, #3
 8002a3e:	e067      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002a40:	4b35      	ldr	r3, [pc, #212]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d1f0      	bne.n	8002a2e <HAL_RCC_OscConfig+0x40a>
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	6a1b      	ldr	r3, [r3, #32]
 8002a50:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002a54:	d108      	bne.n	8002a68 <HAL_RCC_OscConfig+0x444>
 8002a56:	4b30      	ldr	r3, [pc, #192]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a58:	685b      	ldr	r3, [r3, #4]
 8002a5a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	689b      	ldr	r3, [r3, #8]
 8002a62:	492d      	ldr	r1, [pc, #180]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a64:	4313      	orrs	r3, r2
 8002a66:	604b      	str	r3, [r1, #4]
 8002a68:	4b2b      	ldr	r3, [pc, #172]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a6a:	685b      	ldr	r3, [r3, #4]
 8002a6c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	6a19      	ldr	r1, [r3, #32]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a78:	430b      	orrs	r3, r1
 8002a7a:	4927      	ldr	r1, [pc, #156]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002a7c:	4313      	orrs	r3, r2
 8002a7e:	604b      	str	r3, [r1, #4]
 8002a80:	4b27      	ldr	r3, [pc, #156]	; (8002b20 <HAL_RCC_OscConfig+0x4fc>)
 8002a82:	2201      	movs	r2, #1
 8002a84:	601a      	str	r2, [r3, #0]
 8002a86:	f7ff fa4f 	bl	8001f28 <HAL_GetTick>
 8002a8a:	6138      	str	r0, [r7, #16]
 8002a8c:	e008      	b.n	8002aa0 <HAL_RCC_OscConfig+0x47c>
 8002a8e:	f7ff fa4b 	bl	8001f28 <HAL_GetTick>
 8002a92:	4602      	mov	r2, r0
 8002a94:	693b      	ldr	r3, [r7, #16]
 8002a96:	1ad3      	subs	r3, r2, r3
 8002a98:	2b02      	cmp	r3, #2
 8002a9a:	d901      	bls.n	8002aa0 <HAL_RCC_OscConfig+0x47c>
 8002a9c:	2303      	movs	r3, #3
 8002a9e:	e037      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002aa0:	4b1d      	ldr	r3, [pc, #116]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d0f0      	beq.n	8002a8e <HAL_RCC_OscConfig+0x46a>
 8002aac:	e02f      	b.n	8002b0e <HAL_RCC_OscConfig+0x4ea>
 8002aae:	4b1c      	ldr	r3, [pc, #112]	; (8002b20 <HAL_RCC_OscConfig+0x4fc>)
 8002ab0:	2200      	movs	r2, #0
 8002ab2:	601a      	str	r2, [r3, #0]
 8002ab4:	f7ff fa38 	bl	8001f28 <HAL_GetTick>
 8002ab8:	6138      	str	r0, [r7, #16]
 8002aba:	e008      	b.n	8002ace <HAL_RCC_OscConfig+0x4aa>
 8002abc:	f7ff fa34 	bl	8001f28 <HAL_GetTick>
 8002ac0:	4602      	mov	r2, r0
 8002ac2:	693b      	ldr	r3, [r7, #16]
 8002ac4:	1ad3      	subs	r3, r2, r3
 8002ac6:	2b02      	cmp	r3, #2
 8002ac8:	d901      	bls.n	8002ace <HAL_RCC_OscConfig+0x4aa>
 8002aca:	2303      	movs	r3, #3
 8002acc:	e020      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002ace:	4b12      	ldr	r3, [pc, #72]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d1f0      	bne.n	8002abc <HAL_RCC_OscConfig+0x498>
 8002ada:	e018      	b.n	8002b0e <HAL_RCC_OscConfig+0x4ea>
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	69db      	ldr	r3, [r3, #28]
 8002ae0:	2b01      	cmp	r3, #1
 8002ae2:	d101      	bne.n	8002ae8 <HAL_RCC_OscConfig+0x4c4>
 8002ae4:	2301      	movs	r3, #1
 8002ae6:	e013      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002ae8:	4b0b      	ldr	r3, [pc, #44]	; (8002b18 <HAL_RCC_OscConfig+0x4f4>)
 8002aea:	685b      	ldr	r3, [r3, #4]
 8002aec:	60fb      	str	r3, [r7, #12]
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	6a1b      	ldr	r3, [r3, #32]
 8002af8:	429a      	cmp	r2, r3
 8002afa:	d106      	bne.n	8002b0a <HAL_RCC_OscConfig+0x4e6>
 8002afc:	68fb      	ldr	r3, [r7, #12]
 8002afe:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b06:	429a      	cmp	r2, r3
 8002b08:	d001      	beq.n	8002b0e <HAL_RCC_OscConfig+0x4ea>
 8002b0a:	2301      	movs	r3, #1
 8002b0c:	e000      	b.n	8002b10 <HAL_RCC_OscConfig+0x4ec>
 8002b0e:	2300      	movs	r3, #0
 8002b10:	4618      	mov	r0, r3
 8002b12:	3718      	adds	r7, #24
 8002b14:	46bd      	mov	sp, r7
 8002b16:	bd80      	pop	{r7, pc}
 8002b18:	40021000 	.word	0x40021000
 8002b1c:	40007000 	.word	0x40007000
 8002b20:	42420060 	.word	0x42420060

08002b24 <HAL_RCC_ClockConfig>:
 8002b24:	b580      	push	{r7, lr}
 8002b26:	b084      	sub	sp, #16
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	6078      	str	r0, [r7, #4]
 8002b2c:	6039      	str	r1, [r7, #0]
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d101      	bne.n	8002b38 <HAL_RCC_ClockConfig+0x14>
 8002b34:	2301      	movs	r3, #1
 8002b36:	e0d0      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002b38:	4b6a      	ldr	r3, [pc, #424]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	f003 0307 	and.w	r3, r3, #7
 8002b40:	683a      	ldr	r2, [r7, #0]
 8002b42:	429a      	cmp	r2, r3
 8002b44:	d910      	bls.n	8002b68 <HAL_RCC_ClockConfig+0x44>
 8002b46:	4b67      	ldr	r3, [pc, #412]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	f023 0207 	bic.w	r2, r3, #7
 8002b4e:	4965      	ldr	r1, [pc, #404]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002b50:	683b      	ldr	r3, [r7, #0]
 8002b52:	4313      	orrs	r3, r2
 8002b54:	600b      	str	r3, [r1, #0]
 8002b56:	4b63      	ldr	r3, [pc, #396]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	f003 0307 	and.w	r3, r3, #7
 8002b5e:	683a      	ldr	r2, [r7, #0]
 8002b60:	429a      	cmp	r2, r3
 8002b62:	d001      	beq.n	8002b68 <HAL_RCC_ClockConfig+0x44>
 8002b64:	2301      	movs	r3, #1
 8002b66:	e0b8      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	f003 0302 	and.w	r3, r3, #2
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d020      	beq.n	8002bb6 <HAL_RCC_ClockConfig+0x92>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	f003 0304 	and.w	r3, r3, #4
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	d005      	beq.n	8002b8c <HAL_RCC_ClockConfig+0x68>
 8002b80:	4b59      	ldr	r3, [pc, #356]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002b82:	685b      	ldr	r3, [r3, #4]
 8002b84:	4a58      	ldr	r2, [pc, #352]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002b86:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002b8a:	6053      	str	r3, [r2, #4]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	f003 0308 	and.w	r3, r3, #8
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d005      	beq.n	8002ba4 <HAL_RCC_ClockConfig+0x80>
 8002b98:	4b53      	ldr	r3, [pc, #332]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002b9a:	685b      	ldr	r3, [r3, #4]
 8002b9c:	4a52      	ldr	r2, [pc, #328]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002b9e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002ba2:	6053      	str	r3, [r2, #4]
 8002ba4:	4b50      	ldr	r3, [pc, #320]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002ba6:	685b      	ldr	r3, [r3, #4]
 8002ba8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	689b      	ldr	r3, [r3, #8]
 8002bb0:	494d      	ldr	r1, [pc, #308]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002bb2:	4313      	orrs	r3, r2
 8002bb4:	604b      	str	r3, [r1, #4]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f003 0301 	and.w	r3, r3, #1
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d040      	beq.n	8002c44 <HAL_RCC_ClockConfig+0x120>
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	685b      	ldr	r3, [r3, #4]
 8002bc6:	2b01      	cmp	r3, #1
 8002bc8:	d107      	bne.n	8002bda <HAL_RCC_ClockConfig+0xb6>
 8002bca:	4b47      	ldr	r3, [pc, #284]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002bd2:	2b00      	cmp	r3, #0
 8002bd4:	d115      	bne.n	8002c02 <HAL_RCC_ClockConfig+0xde>
 8002bd6:	2301      	movs	r3, #1
 8002bd8:	e07f      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	685b      	ldr	r3, [r3, #4]
 8002bde:	2b02      	cmp	r3, #2
 8002be0:	d107      	bne.n	8002bf2 <HAL_RCC_ClockConfig+0xce>
 8002be2:	4b41      	ldr	r3, [pc, #260]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	d109      	bne.n	8002c02 <HAL_RCC_ClockConfig+0xde>
 8002bee:	2301      	movs	r3, #1
 8002bf0:	e073      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002bf2:	4b3d      	ldr	r3, [pc, #244]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	f003 0302 	and.w	r3, r3, #2
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d101      	bne.n	8002c02 <HAL_RCC_ClockConfig+0xde>
 8002bfe:	2301      	movs	r3, #1
 8002c00:	e06b      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002c02:	4b39      	ldr	r3, [pc, #228]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002c04:	685b      	ldr	r3, [r3, #4]
 8002c06:	f023 0203 	bic.w	r2, r3, #3
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	4936      	ldr	r1, [pc, #216]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002c10:	4313      	orrs	r3, r2
 8002c12:	604b      	str	r3, [r1, #4]
 8002c14:	f7ff f988 	bl	8001f28 <HAL_GetTick>
 8002c18:	60f8      	str	r0, [r7, #12]
 8002c1a:	e00a      	b.n	8002c32 <HAL_RCC_ClockConfig+0x10e>
 8002c1c:	f7ff f984 	bl	8001f28 <HAL_GetTick>
 8002c20:	4602      	mov	r2, r0
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	1ad3      	subs	r3, r2, r3
 8002c26:	f241 3288 	movw	r2, #5000	; 0x1388
 8002c2a:	4293      	cmp	r3, r2
 8002c2c:	d901      	bls.n	8002c32 <HAL_RCC_ClockConfig+0x10e>
 8002c2e:	2303      	movs	r3, #3
 8002c30:	e053      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002c32:	4b2d      	ldr	r3, [pc, #180]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002c34:	685b      	ldr	r3, [r3, #4]
 8002c36:	f003 020c 	and.w	r2, r3, #12
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	685b      	ldr	r3, [r3, #4]
 8002c3e:	009b      	lsls	r3, r3, #2
 8002c40:	429a      	cmp	r2, r3
 8002c42:	d1eb      	bne.n	8002c1c <HAL_RCC_ClockConfig+0xf8>
 8002c44:	4b27      	ldr	r3, [pc, #156]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	f003 0307 	and.w	r3, r3, #7
 8002c4c:	683a      	ldr	r2, [r7, #0]
 8002c4e:	429a      	cmp	r2, r3
 8002c50:	d210      	bcs.n	8002c74 <HAL_RCC_ClockConfig+0x150>
 8002c52:	4b24      	ldr	r3, [pc, #144]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	f023 0207 	bic.w	r2, r3, #7
 8002c5a:	4922      	ldr	r1, [pc, #136]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002c5c:	683b      	ldr	r3, [r7, #0]
 8002c5e:	4313      	orrs	r3, r2
 8002c60:	600b      	str	r3, [r1, #0]
 8002c62:	4b20      	ldr	r3, [pc, #128]	; (8002ce4 <HAL_RCC_ClockConfig+0x1c0>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	f003 0307 	and.w	r3, r3, #7
 8002c6a:	683a      	ldr	r2, [r7, #0]
 8002c6c:	429a      	cmp	r2, r3
 8002c6e:	d001      	beq.n	8002c74 <HAL_RCC_ClockConfig+0x150>
 8002c70:	2301      	movs	r3, #1
 8002c72:	e032      	b.n	8002cda <HAL_RCC_ClockConfig+0x1b6>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	f003 0304 	and.w	r3, r3, #4
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d008      	beq.n	8002c92 <HAL_RCC_ClockConfig+0x16e>
 8002c80:	4b19      	ldr	r3, [pc, #100]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002c82:	685b      	ldr	r3, [r3, #4]
 8002c84:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	68db      	ldr	r3, [r3, #12]
 8002c8c:	4916      	ldr	r1, [pc, #88]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002c8e:	4313      	orrs	r3, r2
 8002c90:	604b      	str	r3, [r1, #4]
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	f003 0308 	and.w	r3, r3, #8
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d009      	beq.n	8002cb2 <HAL_RCC_ClockConfig+0x18e>
 8002c9e:	4b12      	ldr	r3, [pc, #72]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002ca0:	685b      	ldr	r3, [r3, #4]
 8002ca2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	691b      	ldr	r3, [r3, #16]
 8002caa:	00db      	lsls	r3, r3, #3
 8002cac:	490e      	ldr	r1, [pc, #56]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002cae:	4313      	orrs	r3, r2
 8002cb0:	604b      	str	r3, [r1, #4]
 8002cb2:	f000 f821 	bl	8002cf8 <HAL_RCC_GetSysClockFreq>
 8002cb6:	4602      	mov	r2, r0
 8002cb8:	4b0b      	ldr	r3, [pc, #44]	; (8002ce8 <HAL_RCC_ClockConfig+0x1c4>)
 8002cba:	685b      	ldr	r3, [r3, #4]
 8002cbc:	091b      	lsrs	r3, r3, #4
 8002cbe:	f003 030f 	and.w	r3, r3, #15
 8002cc2:	490a      	ldr	r1, [pc, #40]	; (8002cec <HAL_RCC_ClockConfig+0x1c8>)
 8002cc4:	5ccb      	ldrb	r3, [r1, r3]
 8002cc6:	fa22 f303 	lsr.w	r3, r2, r3
 8002cca:	4a09      	ldr	r2, [pc, #36]	; (8002cf0 <HAL_RCC_ClockConfig+0x1cc>)
 8002ccc:	6013      	str	r3, [r2, #0]
 8002cce:	4b09      	ldr	r3, [pc, #36]	; (8002cf4 <HAL_RCC_ClockConfig+0x1d0>)
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	4618      	mov	r0, r3
 8002cd4:	f7ff f8e6 	bl	8001ea4 <HAL_InitTick>
 8002cd8:	2300      	movs	r3, #0
 8002cda:	4618      	mov	r0, r3
 8002cdc:	3710      	adds	r7, #16
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bd80      	pop	{r7, pc}
 8002ce2:	bf00      	nop
 8002ce4:	40022000 	.word	0x40022000
 8002ce8:	40021000 	.word	0x40021000
 8002cec:	0800528c 	.word	0x0800528c
 8002cf0:	20000044 	.word	0x20000044
 8002cf4:	20000048 	.word	0x20000048

08002cf8 <HAL_RCC_GetSysClockFreq>:
 8002cf8:	b480      	push	{r7}
 8002cfa:	b087      	sub	sp, #28
 8002cfc:	af00      	add	r7, sp, #0
 8002cfe:	2300      	movs	r3, #0
 8002d00:	60fb      	str	r3, [r7, #12]
 8002d02:	2300      	movs	r3, #0
 8002d04:	60bb      	str	r3, [r7, #8]
 8002d06:	2300      	movs	r3, #0
 8002d08:	617b      	str	r3, [r7, #20]
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	607b      	str	r3, [r7, #4]
 8002d0e:	2300      	movs	r3, #0
 8002d10:	613b      	str	r3, [r7, #16]
 8002d12:	4b1e      	ldr	r3, [pc, #120]	; (8002d8c <HAL_RCC_GetSysClockFreq+0x94>)
 8002d14:	685b      	ldr	r3, [r3, #4]
 8002d16:	60fb      	str	r3, [r7, #12]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	f003 030c 	and.w	r3, r3, #12
 8002d1e:	2b04      	cmp	r3, #4
 8002d20:	d002      	beq.n	8002d28 <HAL_RCC_GetSysClockFreq+0x30>
 8002d22:	2b08      	cmp	r3, #8
 8002d24:	d003      	beq.n	8002d2e <HAL_RCC_GetSysClockFreq+0x36>
 8002d26:	e027      	b.n	8002d78 <HAL_RCC_GetSysClockFreq+0x80>
 8002d28:	4b19      	ldr	r3, [pc, #100]	; (8002d90 <HAL_RCC_GetSysClockFreq+0x98>)
 8002d2a:	613b      	str	r3, [r7, #16]
 8002d2c:	e027      	b.n	8002d7e <HAL_RCC_GetSysClockFreq+0x86>
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	0c9b      	lsrs	r3, r3, #18
 8002d32:	f003 030f 	and.w	r3, r3, #15
 8002d36:	4a17      	ldr	r2, [pc, #92]	; (8002d94 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002d38:	5cd3      	ldrb	r3, [r2, r3]
 8002d3a:	607b      	str	r3, [r7, #4]
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d010      	beq.n	8002d68 <HAL_RCC_GetSysClockFreq+0x70>
 8002d46:	4b11      	ldr	r3, [pc, #68]	; (8002d8c <HAL_RCC_GetSysClockFreq+0x94>)
 8002d48:	685b      	ldr	r3, [r3, #4]
 8002d4a:	0c5b      	lsrs	r3, r3, #17
 8002d4c:	f003 0301 	and.w	r3, r3, #1
 8002d50:	4a11      	ldr	r2, [pc, #68]	; (8002d98 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002d52:	5cd3      	ldrb	r3, [r2, r3]
 8002d54:	60bb      	str	r3, [r7, #8]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	4a0d      	ldr	r2, [pc, #52]	; (8002d90 <HAL_RCC_GetSysClockFreq+0x98>)
 8002d5a:	fb02 f203 	mul.w	r2, r2, r3
 8002d5e:	68bb      	ldr	r3, [r7, #8]
 8002d60:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d64:	617b      	str	r3, [r7, #20]
 8002d66:	e004      	b.n	8002d72 <HAL_RCC_GetSysClockFreq+0x7a>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	4a0c      	ldr	r2, [pc, #48]	; (8002d9c <HAL_RCC_GetSysClockFreq+0xa4>)
 8002d6c:	fb02 f303 	mul.w	r3, r2, r3
 8002d70:	617b      	str	r3, [r7, #20]
 8002d72:	697b      	ldr	r3, [r7, #20]
 8002d74:	613b      	str	r3, [r7, #16]
 8002d76:	e002      	b.n	8002d7e <HAL_RCC_GetSysClockFreq+0x86>
 8002d78:	4b05      	ldr	r3, [pc, #20]	; (8002d90 <HAL_RCC_GetSysClockFreq+0x98>)
 8002d7a:	613b      	str	r3, [r7, #16]
 8002d7c:	bf00      	nop
 8002d7e:	693b      	ldr	r3, [r7, #16]
 8002d80:	4618      	mov	r0, r3
 8002d82:	371c      	adds	r7, #28
 8002d84:	46bd      	mov	sp, r7
 8002d86:	bc80      	pop	{r7}
 8002d88:	4770      	bx	lr
 8002d8a:	bf00      	nop
 8002d8c:	40021000 	.word	0x40021000
 8002d90:	007a1200 	.word	0x007a1200
 8002d94:	080052a4 	.word	0x080052a4
 8002d98:	080052b4 	.word	0x080052b4
 8002d9c:	003d0900 	.word	0x003d0900

08002da0 <HAL_RCC_GetHCLKFreq>:
 8002da0:	b480      	push	{r7}
 8002da2:	af00      	add	r7, sp, #0
 8002da4:	4b02      	ldr	r3, [pc, #8]	; (8002db0 <HAL_RCC_GetHCLKFreq+0x10>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	4618      	mov	r0, r3
 8002daa:	46bd      	mov	sp, r7
 8002dac:	bc80      	pop	{r7}
 8002dae:	4770      	bx	lr
 8002db0:	20000044 	.word	0x20000044

08002db4 <HAL_RCC_GetPCLK1Freq>:
 8002db4:	b580      	push	{r7, lr}
 8002db6:	af00      	add	r7, sp, #0
 8002db8:	f7ff fff2 	bl	8002da0 <HAL_RCC_GetHCLKFreq>
 8002dbc:	4602      	mov	r2, r0
 8002dbe:	4b05      	ldr	r3, [pc, #20]	; (8002dd4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002dc0:	685b      	ldr	r3, [r3, #4]
 8002dc2:	0a1b      	lsrs	r3, r3, #8
 8002dc4:	f003 0307 	and.w	r3, r3, #7
 8002dc8:	4903      	ldr	r1, [pc, #12]	; (8002dd8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002dca:	5ccb      	ldrb	r3, [r1, r3]
 8002dcc:	fa22 f303 	lsr.w	r3, r2, r3
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	bd80      	pop	{r7, pc}
 8002dd4:	40021000 	.word	0x40021000
 8002dd8:	0800529c 	.word	0x0800529c

08002ddc <HAL_RCC_GetPCLK2Freq>:
 8002ddc:	b580      	push	{r7, lr}
 8002dde:	af00      	add	r7, sp, #0
 8002de0:	f7ff ffde 	bl	8002da0 <HAL_RCC_GetHCLKFreq>
 8002de4:	4602      	mov	r2, r0
 8002de6:	4b05      	ldr	r3, [pc, #20]	; (8002dfc <HAL_RCC_GetPCLK2Freq+0x20>)
 8002de8:	685b      	ldr	r3, [r3, #4]
 8002dea:	0adb      	lsrs	r3, r3, #11
 8002dec:	f003 0307 	and.w	r3, r3, #7
 8002df0:	4903      	ldr	r1, [pc, #12]	; (8002e00 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002df2:	5ccb      	ldrb	r3, [r1, r3]
 8002df4:	fa22 f303 	lsr.w	r3, r2, r3
 8002df8:	4618      	mov	r0, r3
 8002dfa:	bd80      	pop	{r7, pc}
 8002dfc:	40021000 	.word	0x40021000
 8002e00:	0800529c 	.word	0x0800529c

08002e04 <RCC_Delay>:
 8002e04:	b480      	push	{r7}
 8002e06:	b085      	sub	sp, #20
 8002e08:	af00      	add	r7, sp, #0
 8002e0a:	6078      	str	r0, [r7, #4]
 8002e0c:	4b0a      	ldr	r3, [pc, #40]	; (8002e38 <RCC_Delay+0x34>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	4a0a      	ldr	r2, [pc, #40]	; (8002e3c <RCC_Delay+0x38>)
 8002e12:	fba2 2303 	umull	r2, r3, r2, r3
 8002e16:	0a5b      	lsrs	r3, r3, #9
 8002e18:	687a      	ldr	r2, [r7, #4]
 8002e1a:	fb02 f303 	mul.w	r3, r2, r3
 8002e1e:	60fb      	str	r3, [r7, #12]
 8002e20:	bf00      	nop
 8002e22:	68fb      	ldr	r3, [r7, #12]
 8002e24:	1e5a      	subs	r2, r3, #1
 8002e26:	60fa      	str	r2, [r7, #12]
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d1f9      	bne.n	8002e20 <RCC_Delay+0x1c>
 8002e2c:	bf00      	nop
 8002e2e:	bf00      	nop
 8002e30:	3714      	adds	r7, #20
 8002e32:	46bd      	mov	sp, r7
 8002e34:	bc80      	pop	{r7}
 8002e36:	4770      	bx	lr
 8002e38:	20000044 	.word	0x20000044
 8002e3c:	10624dd3 	.word	0x10624dd3

08002e40 <HAL_TIM_Base_Init>:
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b082      	sub	sp, #8
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	d101      	bne.n	8002e52 <HAL_TIM_Base_Init+0x12>
 8002e4e:	2301      	movs	r3, #1
 8002e50:	e041      	b.n	8002ed6 <HAL_TIM_Base_Init+0x96>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002e58:	b2db      	uxtb	r3, r3
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d106      	bne.n	8002e6c <HAL_TIM_Base_Init+0x2c>
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	2200      	movs	r2, #0
 8002e62:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e66:	6878      	ldr	r0, [r7, #4]
 8002e68:	f7fe fe8a 	bl	8001b80 <HAL_TIM_Base_MspInit>
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	2202      	movs	r2, #2
 8002e70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681a      	ldr	r2, [r3, #0]
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	3304      	adds	r3, #4
 8002e7c:	4619      	mov	r1, r3
 8002e7e:	4610      	mov	r0, r2
 8002e80:	f000 fc30 	bl	80036e4 <TIM_Base_SetConfig>
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	2201      	movs	r2, #1
 8002e88:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2201      	movs	r2, #1
 8002e90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	2201      	movs	r2, #1
 8002e98:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	2201      	movs	r2, #1
 8002ea0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	2201      	movs	r2, #1
 8002ea8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	2201      	movs	r2, #1
 8002eb0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	2201      	movs	r2, #1
 8002eb8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	2201      	movs	r2, #1
 8002ec0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	2201      	movs	r2, #1
 8002ec8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	2201      	movs	r2, #1
 8002ed0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ed4:	2300      	movs	r3, #0
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	3708      	adds	r7, #8
 8002eda:	46bd      	mov	sp, r7
 8002edc:	bd80      	pop	{r7, pc}
	...

08002ee0 <HAL_TIM_Base_Start_IT>:
 8002ee0:	b480      	push	{r7}
 8002ee2:	b085      	sub	sp, #20
 8002ee4:	af00      	add	r7, sp, #0
 8002ee6:	6078      	str	r0, [r7, #4]
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002eee:	b2db      	uxtb	r3, r3
 8002ef0:	2b01      	cmp	r3, #1
 8002ef2:	d001      	beq.n	8002ef8 <HAL_TIM_Base_Start_IT+0x18>
 8002ef4:	2301      	movs	r3, #1
 8002ef6:	e03a      	b.n	8002f6e <HAL_TIM_Base_Start_IT+0x8e>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	2202      	movs	r2, #2
 8002efc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	68da      	ldr	r2, [r3, #12]
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	f042 0201 	orr.w	r2, r2, #1
 8002f0e:	60da      	str	r2, [r3, #12]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4a18      	ldr	r2, [pc, #96]	; (8002f78 <HAL_TIM_Base_Start_IT+0x98>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d00e      	beq.n	8002f38 <HAL_TIM_Base_Start_IT+0x58>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f22:	d009      	beq.n	8002f38 <HAL_TIM_Base_Start_IT+0x58>
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	4a14      	ldr	r2, [pc, #80]	; (8002f7c <HAL_TIM_Base_Start_IT+0x9c>)
 8002f2a:	4293      	cmp	r3, r2
 8002f2c:	d004      	beq.n	8002f38 <HAL_TIM_Base_Start_IT+0x58>
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	4a13      	ldr	r2, [pc, #76]	; (8002f80 <HAL_TIM_Base_Start_IT+0xa0>)
 8002f34:	4293      	cmp	r3, r2
 8002f36:	d111      	bne.n	8002f5c <HAL_TIM_Base_Start_IT+0x7c>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	689b      	ldr	r3, [r3, #8]
 8002f3e:	f003 0307 	and.w	r3, r3, #7
 8002f42:	60fb      	str	r3, [r7, #12]
 8002f44:	68fb      	ldr	r3, [r7, #12]
 8002f46:	2b06      	cmp	r3, #6
 8002f48:	d010      	beq.n	8002f6c <HAL_TIM_Base_Start_IT+0x8c>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	681a      	ldr	r2, [r3, #0]
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	f042 0201 	orr.w	r2, r2, #1
 8002f58:	601a      	str	r2, [r3, #0]
 8002f5a:	e007      	b.n	8002f6c <HAL_TIM_Base_Start_IT+0x8c>
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	681a      	ldr	r2, [r3, #0]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	f042 0201 	orr.w	r2, r2, #1
 8002f6a:	601a      	str	r2, [r3, #0]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	4618      	mov	r0, r3
 8002f70:	3714      	adds	r7, #20
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bc80      	pop	{r7}
 8002f76:	4770      	bx	lr
 8002f78:	40012c00 	.word	0x40012c00
 8002f7c:	40000400 	.word	0x40000400
 8002f80:	40000800 	.word	0x40000800

08002f84 <HAL_TIM_PWM_Init>:
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b082      	sub	sp, #8
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d101      	bne.n	8002f96 <HAL_TIM_PWM_Init+0x12>
 8002f92:	2301      	movs	r3, #1
 8002f94:	e041      	b.n	800301a <HAL_TIM_PWM_Init+0x96>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002f9c:	b2db      	uxtb	r3, r3
 8002f9e:	2b00      	cmp	r3, #0
 8002fa0:	d106      	bne.n	8002fb0 <HAL_TIM_PWM_Init+0x2c>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002faa:	6878      	ldr	r0, [r7, #4]
 8002fac:	f000 f839 	bl	8003022 <HAL_TIM_PWM_MspInit>
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	2202      	movs	r2, #2
 8002fb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	681a      	ldr	r2, [r3, #0]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	3304      	adds	r3, #4
 8002fc0:	4619      	mov	r1, r3
 8002fc2:	4610      	mov	r0, r2
 8002fc4:	f000 fb8e 	bl	80036e4 <TIM_Base_SetConfig>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	2201      	movs	r2, #1
 8002fcc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	2201      	movs	r2, #1
 8002fd4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	2201      	movs	r2, #1
 8002fdc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	2201      	movs	r2, #1
 8002fe4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	2201      	movs	r2, #1
 8002fec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	2201      	movs	r2, #1
 8002ff4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	2201      	movs	r2, #1
 8002ffc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	2201      	movs	r2, #1
 8003004:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	2201      	movs	r2, #1
 800300c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	2201      	movs	r2, #1
 8003014:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003018:	2300      	movs	r3, #0
 800301a:	4618      	mov	r0, r3
 800301c:	3708      	adds	r7, #8
 800301e:	46bd      	mov	sp, r7
 8003020:	bd80      	pop	{r7, pc}

08003022 <HAL_TIM_PWM_MspInit>:
 8003022:	b480      	push	{r7}
 8003024:	b083      	sub	sp, #12
 8003026:	af00      	add	r7, sp, #0
 8003028:	6078      	str	r0, [r7, #4]
 800302a:	bf00      	nop
 800302c:	370c      	adds	r7, #12
 800302e:	46bd      	mov	sp, r7
 8003030:	bc80      	pop	{r7}
 8003032:	4770      	bx	lr

08003034 <HAL_TIM_PWM_Start>:
 8003034:	b580      	push	{r7, lr}
 8003036:	b084      	sub	sp, #16
 8003038:	af00      	add	r7, sp, #0
 800303a:	6078      	str	r0, [r7, #4]
 800303c:	6039      	str	r1, [r7, #0]
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	2b00      	cmp	r3, #0
 8003042:	d109      	bne.n	8003058 <HAL_TIM_PWM_Start+0x24>
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800304a:	b2db      	uxtb	r3, r3
 800304c:	2b01      	cmp	r3, #1
 800304e:	bf14      	ite	ne
 8003050:	2301      	movne	r3, #1
 8003052:	2300      	moveq	r3, #0
 8003054:	b2db      	uxtb	r3, r3
 8003056:	e022      	b.n	800309e <HAL_TIM_PWM_Start+0x6a>
 8003058:	683b      	ldr	r3, [r7, #0]
 800305a:	2b04      	cmp	r3, #4
 800305c:	d109      	bne.n	8003072 <HAL_TIM_PWM_Start+0x3e>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8003064:	b2db      	uxtb	r3, r3
 8003066:	2b01      	cmp	r3, #1
 8003068:	bf14      	ite	ne
 800306a:	2301      	movne	r3, #1
 800306c:	2300      	moveq	r3, #0
 800306e:	b2db      	uxtb	r3, r3
 8003070:	e015      	b.n	800309e <HAL_TIM_PWM_Start+0x6a>
 8003072:	683b      	ldr	r3, [r7, #0]
 8003074:	2b08      	cmp	r3, #8
 8003076:	d109      	bne.n	800308c <HAL_TIM_PWM_Start+0x58>
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800307e:	b2db      	uxtb	r3, r3
 8003080:	2b01      	cmp	r3, #1
 8003082:	bf14      	ite	ne
 8003084:	2301      	movne	r3, #1
 8003086:	2300      	moveq	r3, #0
 8003088:	b2db      	uxtb	r3, r3
 800308a:	e008      	b.n	800309e <HAL_TIM_PWM_Start+0x6a>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003092:	b2db      	uxtb	r3, r3
 8003094:	2b01      	cmp	r3, #1
 8003096:	bf14      	ite	ne
 8003098:	2301      	movne	r3, #1
 800309a:	2300      	moveq	r3, #0
 800309c:	b2db      	uxtb	r3, r3
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d001      	beq.n	80030a6 <HAL_TIM_PWM_Start+0x72>
 80030a2:	2301      	movs	r3, #1
 80030a4:	e05e      	b.n	8003164 <HAL_TIM_PWM_Start+0x130>
 80030a6:	683b      	ldr	r3, [r7, #0]
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d104      	bne.n	80030b6 <HAL_TIM_PWM_Start+0x82>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	2202      	movs	r2, #2
 80030b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80030b4:	e013      	b.n	80030de <HAL_TIM_PWM_Start+0xaa>
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	2b04      	cmp	r3, #4
 80030ba:	d104      	bne.n	80030c6 <HAL_TIM_PWM_Start+0x92>
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	2202      	movs	r2, #2
 80030c0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80030c4:	e00b      	b.n	80030de <HAL_TIM_PWM_Start+0xaa>
 80030c6:	683b      	ldr	r3, [r7, #0]
 80030c8:	2b08      	cmp	r3, #8
 80030ca:	d104      	bne.n	80030d6 <HAL_TIM_PWM_Start+0xa2>
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	2202      	movs	r2, #2
 80030d0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80030d4:	e003      	b.n	80030de <HAL_TIM_PWM_Start+0xaa>
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	2202      	movs	r2, #2
 80030da:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	2201      	movs	r2, #1
 80030e4:	6839      	ldr	r1, [r7, #0]
 80030e6:	4618      	mov	r0, r3
 80030e8:	f000 fd7c 	bl	8003be4 <TIM_CCxChannelCmd>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	4a1e      	ldr	r2, [pc, #120]	; (800316c <HAL_TIM_PWM_Start+0x138>)
 80030f2:	4293      	cmp	r3, r2
 80030f4:	d107      	bne.n	8003106 <HAL_TIM_PWM_Start+0xd2>
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003104:	645a      	str	r2, [r3, #68]	; 0x44
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	4a18      	ldr	r2, [pc, #96]	; (800316c <HAL_TIM_PWM_Start+0x138>)
 800310c:	4293      	cmp	r3, r2
 800310e:	d00e      	beq.n	800312e <HAL_TIM_PWM_Start+0xfa>
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003118:	d009      	beq.n	800312e <HAL_TIM_PWM_Start+0xfa>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	4a14      	ldr	r2, [pc, #80]	; (8003170 <HAL_TIM_PWM_Start+0x13c>)
 8003120:	4293      	cmp	r3, r2
 8003122:	d004      	beq.n	800312e <HAL_TIM_PWM_Start+0xfa>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	4a12      	ldr	r2, [pc, #72]	; (8003174 <HAL_TIM_PWM_Start+0x140>)
 800312a:	4293      	cmp	r3, r2
 800312c:	d111      	bne.n	8003152 <HAL_TIM_PWM_Start+0x11e>
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	689b      	ldr	r3, [r3, #8]
 8003134:	f003 0307 	and.w	r3, r3, #7
 8003138:	60fb      	str	r3, [r7, #12]
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	2b06      	cmp	r3, #6
 800313e:	d010      	beq.n	8003162 <HAL_TIM_PWM_Start+0x12e>
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	681a      	ldr	r2, [r3, #0]
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	f042 0201 	orr.w	r2, r2, #1
 800314e:	601a      	str	r2, [r3, #0]
 8003150:	e007      	b.n	8003162 <HAL_TIM_PWM_Start+0x12e>
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	681a      	ldr	r2, [r3, #0]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f042 0201 	orr.w	r2, r2, #1
 8003160:	601a      	str	r2, [r3, #0]
 8003162:	2300      	movs	r3, #0
 8003164:	4618      	mov	r0, r3
 8003166:	3710      	adds	r7, #16
 8003168:	46bd      	mov	sp, r7
 800316a:	bd80      	pop	{r7, pc}
 800316c:	40012c00 	.word	0x40012c00
 8003170:	40000400 	.word	0x40000400
 8003174:	40000800 	.word	0x40000800

08003178 <HAL_TIM_IRQHandler>:
 8003178:	b580      	push	{r7, lr}
 800317a:	b082      	sub	sp, #8
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	691b      	ldr	r3, [r3, #16]
 8003186:	f003 0302 	and.w	r3, r3, #2
 800318a:	2b02      	cmp	r3, #2
 800318c:	d122      	bne.n	80031d4 <HAL_TIM_IRQHandler+0x5c>
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	68db      	ldr	r3, [r3, #12]
 8003194:	f003 0302 	and.w	r3, r3, #2
 8003198:	2b02      	cmp	r3, #2
 800319a:	d11b      	bne.n	80031d4 <HAL_TIM_IRQHandler+0x5c>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	f06f 0202 	mvn.w	r2, #2
 80031a4:	611a      	str	r2, [r3, #16]
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	2201      	movs	r2, #1
 80031aa:	771a      	strb	r2, [r3, #28]
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	699b      	ldr	r3, [r3, #24]
 80031b2:	f003 0303 	and.w	r3, r3, #3
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d003      	beq.n	80031c2 <HAL_TIM_IRQHandler+0x4a>
 80031ba:	6878      	ldr	r0, [r7, #4]
 80031bc:	f000 fa76 	bl	80036ac <HAL_TIM_IC_CaptureCallback>
 80031c0:	e005      	b.n	80031ce <HAL_TIM_IRQHandler+0x56>
 80031c2:	6878      	ldr	r0, [r7, #4]
 80031c4:	f000 fa69 	bl	800369a <HAL_TIM_OC_DelayElapsedCallback>
 80031c8:	6878      	ldr	r0, [r7, #4]
 80031ca:	f000 fa78 	bl	80036be <HAL_TIM_PWM_PulseFinishedCallback>
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	2200      	movs	r2, #0
 80031d2:	771a      	strb	r2, [r3, #28]
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	691b      	ldr	r3, [r3, #16]
 80031da:	f003 0304 	and.w	r3, r3, #4
 80031de:	2b04      	cmp	r3, #4
 80031e0:	d122      	bne.n	8003228 <HAL_TIM_IRQHandler+0xb0>
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	68db      	ldr	r3, [r3, #12]
 80031e8:	f003 0304 	and.w	r3, r3, #4
 80031ec:	2b04      	cmp	r3, #4
 80031ee:	d11b      	bne.n	8003228 <HAL_TIM_IRQHandler+0xb0>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f06f 0204 	mvn.w	r2, #4
 80031f8:	611a      	str	r2, [r3, #16]
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	2202      	movs	r2, #2
 80031fe:	771a      	strb	r2, [r3, #28]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	699b      	ldr	r3, [r3, #24]
 8003206:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800320a:	2b00      	cmp	r3, #0
 800320c:	d003      	beq.n	8003216 <HAL_TIM_IRQHandler+0x9e>
 800320e:	6878      	ldr	r0, [r7, #4]
 8003210:	f000 fa4c 	bl	80036ac <HAL_TIM_IC_CaptureCallback>
 8003214:	e005      	b.n	8003222 <HAL_TIM_IRQHandler+0xaa>
 8003216:	6878      	ldr	r0, [r7, #4]
 8003218:	f000 fa3f 	bl	800369a <HAL_TIM_OC_DelayElapsedCallback>
 800321c:	6878      	ldr	r0, [r7, #4]
 800321e:	f000 fa4e 	bl	80036be <HAL_TIM_PWM_PulseFinishedCallback>
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	2200      	movs	r2, #0
 8003226:	771a      	strb	r2, [r3, #28]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	691b      	ldr	r3, [r3, #16]
 800322e:	f003 0308 	and.w	r3, r3, #8
 8003232:	2b08      	cmp	r3, #8
 8003234:	d122      	bne.n	800327c <HAL_TIM_IRQHandler+0x104>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	68db      	ldr	r3, [r3, #12]
 800323c:	f003 0308 	and.w	r3, r3, #8
 8003240:	2b08      	cmp	r3, #8
 8003242:	d11b      	bne.n	800327c <HAL_TIM_IRQHandler+0x104>
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	f06f 0208 	mvn.w	r2, #8
 800324c:	611a      	str	r2, [r3, #16]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	2204      	movs	r2, #4
 8003252:	771a      	strb	r2, [r3, #28]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	69db      	ldr	r3, [r3, #28]
 800325a:	f003 0303 	and.w	r3, r3, #3
 800325e:	2b00      	cmp	r3, #0
 8003260:	d003      	beq.n	800326a <HAL_TIM_IRQHandler+0xf2>
 8003262:	6878      	ldr	r0, [r7, #4]
 8003264:	f000 fa22 	bl	80036ac <HAL_TIM_IC_CaptureCallback>
 8003268:	e005      	b.n	8003276 <HAL_TIM_IRQHandler+0xfe>
 800326a:	6878      	ldr	r0, [r7, #4]
 800326c:	f000 fa15 	bl	800369a <HAL_TIM_OC_DelayElapsedCallback>
 8003270:	6878      	ldr	r0, [r7, #4]
 8003272:	f000 fa24 	bl	80036be <HAL_TIM_PWM_PulseFinishedCallback>
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	2200      	movs	r2, #0
 800327a:	771a      	strb	r2, [r3, #28]
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	691b      	ldr	r3, [r3, #16]
 8003282:	f003 0310 	and.w	r3, r3, #16
 8003286:	2b10      	cmp	r3, #16
 8003288:	d122      	bne.n	80032d0 <HAL_TIM_IRQHandler+0x158>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	68db      	ldr	r3, [r3, #12]
 8003290:	f003 0310 	and.w	r3, r3, #16
 8003294:	2b10      	cmp	r3, #16
 8003296:	d11b      	bne.n	80032d0 <HAL_TIM_IRQHandler+0x158>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	f06f 0210 	mvn.w	r2, #16
 80032a0:	611a      	str	r2, [r3, #16]
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	2208      	movs	r2, #8
 80032a6:	771a      	strb	r2, [r3, #28]
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	69db      	ldr	r3, [r3, #28]
 80032ae:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d003      	beq.n	80032be <HAL_TIM_IRQHandler+0x146>
 80032b6:	6878      	ldr	r0, [r7, #4]
 80032b8:	f000 f9f8 	bl	80036ac <HAL_TIM_IC_CaptureCallback>
 80032bc:	e005      	b.n	80032ca <HAL_TIM_IRQHandler+0x152>
 80032be:	6878      	ldr	r0, [r7, #4]
 80032c0:	f000 f9eb 	bl	800369a <HAL_TIM_OC_DelayElapsedCallback>
 80032c4:	6878      	ldr	r0, [r7, #4]
 80032c6:	f000 f9fa 	bl	80036be <HAL_TIM_PWM_PulseFinishedCallback>
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	2200      	movs	r2, #0
 80032ce:	771a      	strb	r2, [r3, #28]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	691b      	ldr	r3, [r3, #16]
 80032d6:	f003 0301 	and.w	r3, r3, #1
 80032da:	2b01      	cmp	r3, #1
 80032dc:	d10e      	bne.n	80032fc <HAL_TIM_IRQHandler+0x184>
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	68db      	ldr	r3, [r3, #12]
 80032e4:	f003 0301 	and.w	r3, r3, #1
 80032e8:	2b01      	cmp	r3, #1
 80032ea:	d107      	bne.n	80032fc <HAL_TIM_IRQHandler+0x184>
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	f06f 0201 	mvn.w	r2, #1
 80032f4:	611a      	str	r2, [r3, #16]
 80032f6:	6878      	ldr	r0, [r7, #4]
 80032f8:	f7fe f958 	bl	80015ac <HAL_TIM_PeriodElapsedCallback>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	691b      	ldr	r3, [r3, #16]
 8003302:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003306:	2b80      	cmp	r3, #128	; 0x80
 8003308:	d10e      	bne.n	8003328 <HAL_TIM_IRQHandler+0x1b0>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	68db      	ldr	r3, [r3, #12]
 8003310:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003314:	2b80      	cmp	r3, #128	; 0x80
 8003316:	d107      	bne.n	8003328 <HAL_TIM_IRQHandler+0x1b0>
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003320:	611a      	str	r2, [r3, #16]
 8003322:	6878      	ldr	r0, [r7, #4]
 8003324:	f000 fce9 	bl	8003cfa <HAL_TIMEx_BreakCallback>
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	691b      	ldr	r3, [r3, #16]
 800332e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003332:	2b40      	cmp	r3, #64	; 0x40
 8003334:	d10e      	bne.n	8003354 <HAL_TIM_IRQHandler+0x1dc>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	68db      	ldr	r3, [r3, #12]
 800333c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003340:	2b40      	cmp	r3, #64	; 0x40
 8003342:	d107      	bne.n	8003354 <HAL_TIM_IRQHandler+0x1dc>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800334c:	611a      	str	r2, [r3, #16]
 800334e:	6878      	ldr	r0, [r7, #4]
 8003350:	f000 f9be 	bl	80036d0 <HAL_TIM_TriggerCallback>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	691b      	ldr	r3, [r3, #16]
 800335a:	f003 0320 	and.w	r3, r3, #32
 800335e:	2b20      	cmp	r3, #32
 8003360:	d10e      	bne.n	8003380 <HAL_TIM_IRQHandler+0x208>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	68db      	ldr	r3, [r3, #12]
 8003368:	f003 0320 	and.w	r3, r3, #32
 800336c:	2b20      	cmp	r3, #32
 800336e:	d107      	bne.n	8003380 <HAL_TIM_IRQHandler+0x208>
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	f06f 0220 	mvn.w	r2, #32
 8003378:	611a      	str	r2, [r3, #16]
 800337a:	6878      	ldr	r0, [r7, #4]
 800337c:	f000 fcb4 	bl	8003ce8 <HAL_TIMEx_CommutCallback>
 8003380:	bf00      	nop
 8003382:	3708      	adds	r7, #8
 8003384:	46bd      	mov	sp, r7
 8003386:	bd80      	pop	{r7, pc}

08003388 <HAL_TIM_PWM_ConfigChannel>:
 8003388:	b580      	push	{r7, lr}
 800338a:	b086      	sub	sp, #24
 800338c:	af00      	add	r7, sp, #0
 800338e:	60f8      	str	r0, [r7, #12]
 8003390:	60b9      	str	r1, [r7, #8]
 8003392:	607a      	str	r2, [r7, #4]
 8003394:	2300      	movs	r3, #0
 8003396:	75fb      	strb	r3, [r7, #23]
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800339e:	2b01      	cmp	r3, #1
 80033a0:	d101      	bne.n	80033a6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80033a2:	2302      	movs	r3, #2
 80033a4:	e0ae      	b.n	8003504 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	2201      	movs	r2, #1
 80033aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	2b0c      	cmp	r3, #12
 80033b2:	f200 809f 	bhi.w	80034f4 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80033b6:	a201      	add	r2, pc, #4	; (adr r2, 80033bc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80033b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80033bc:	080033f1 	.word	0x080033f1
 80033c0:	080034f5 	.word	0x080034f5
 80033c4:	080034f5 	.word	0x080034f5
 80033c8:	080034f5 	.word	0x080034f5
 80033cc:	08003431 	.word	0x08003431
 80033d0:	080034f5 	.word	0x080034f5
 80033d4:	080034f5 	.word	0x080034f5
 80033d8:	080034f5 	.word	0x080034f5
 80033dc:	08003473 	.word	0x08003473
 80033e0:	080034f5 	.word	0x080034f5
 80033e4:	080034f5 	.word	0x080034f5
 80033e8:	080034f5 	.word	0x080034f5
 80033ec:	080034b3 	.word	0x080034b3
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	68b9      	ldr	r1, [r7, #8]
 80033f6:	4618      	mov	r0, r3
 80033f8:	f000 f9d6 	bl	80037a8 <TIM_OC1_SetConfig>
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	699a      	ldr	r2, [r3, #24]
 8003402:	68fb      	ldr	r3, [r7, #12]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	f042 0208 	orr.w	r2, r2, #8
 800340a:	619a      	str	r2, [r3, #24]
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	699a      	ldr	r2, [r3, #24]
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	f022 0204 	bic.w	r2, r2, #4
 800341a:	619a      	str	r2, [r3, #24]
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	6999      	ldr	r1, [r3, #24]
 8003422:	68bb      	ldr	r3, [r7, #8]
 8003424:	691a      	ldr	r2, [r3, #16]
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	430a      	orrs	r2, r1
 800342c:	619a      	str	r2, [r3, #24]
 800342e:	e064      	b.n	80034fa <HAL_TIM_PWM_ConfigChannel+0x172>
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	68b9      	ldr	r1, [r7, #8]
 8003436:	4618      	mov	r0, r3
 8003438:	f000 fa1c 	bl	8003874 <TIM_OC2_SetConfig>
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	699a      	ldr	r2, [r3, #24]
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800344a:	619a      	str	r2, [r3, #24]
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	699a      	ldr	r2, [r3, #24]
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800345a:	619a      	str	r2, [r3, #24]
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	681b      	ldr	r3, [r3, #0]
 8003460:	6999      	ldr	r1, [r3, #24]
 8003462:	68bb      	ldr	r3, [r7, #8]
 8003464:	691b      	ldr	r3, [r3, #16]
 8003466:	021a      	lsls	r2, r3, #8
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	430a      	orrs	r2, r1
 800346e:	619a      	str	r2, [r3, #24]
 8003470:	e043      	b.n	80034fa <HAL_TIM_PWM_ConfigChannel+0x172>
 8003472:	68fb      	ldr	r3, [r7, #12]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	68b9      	ldr	r1, [r7, #8]
 8003478:	4618      	mov	r0, r3
 800347a:	f000 fa65 	bl	8003948 <TIM_OC3_SetConfig>
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	69da      	ldr	r2, [r3, #28]
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	f042 0208 	orr.w	r2, r2, #8
 800348c:	61da      	str	r2, [r3, #28]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	69da      	ldr	r2, [r3, #28]
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	f022 0204 	bic.w	r2, r2, #4
 800349c:	61da      	str	r2, [r3, #28]
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	69d9      	ldr	r1, [r3, #28]
 80034a4:	68bb      	ldr	r3, [r7, #8]
 80034a6:	691a      	ldr	r2, [r3, #16]
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	430a      	orrs	r2, r1
 80034ae:	61da      	str	r2, [r3, #28]
 80034b0:	e023      	b.n	80034fa <HAL_TIM_PWM_ConfigChannel+0x172>
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	68b9      	ldr	r1, [r7, #8]
 80034b8:	4618      	mov	r0, r3
 80034ba:	f000 faaf 	bl	8003a1c <TIM_OC4_SetConfig>
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	69da      	ldr	r2, [r3, #28]
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80034cc:	61da      	str	r2, [r3, #28]
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	69da      	ldr	r2, [r3, #28]
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80034dc:	61da      	str	r2, [r3, #28]
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	69d9      	ldr	r1, [r3, #28]
 80034e4:	68bb      	ldr	r3, [r7, #8]
 80034e6:	691b      	ldr	r3, [r3, #16]
 80034e8:	021a      	lsls	r2, r3, #8
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	430a      	orrs	r2, r1
 80034f0:	61da      	str	r2, [r3, #28]
 80034f2:	e002      	b.n	80034fa <HAL_TIM_PWM_ConfigChannel+0x172>
 80034f4:	2301      	movs	r3, #1
 80034f6:	75fb      	strb	r3, [r7, #23]
 80034f8:	bf00      	nop
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	2200      	movs	r2, #0
 80034fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003502:	7dfb      	ldrb	r3, [r7, #23]
 8003504:	4618      	mov	r0, r3
 8003506:	3718      	adds	r7, #24
 8003508:	46bd      	mov	sp, r7
 800350a:	bd80      	pop	{r7, pc}

0800350c <HAL_TIM_ConfigClockSource>:
 800350c:	b580      	push	{r7, lr}
 800350e:	b084      	sub	sp, #16
 8003510:	af00      	add	r7, sp, #0
 8003512:	6078      	str	r0, [r7, #4]
 8003514:	6039      	str	r1, [r7, #0]
 8003516:	2300      	movs	r3, #0
 8003518:	73fb      	strb	r3, [r7, #15]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003520:	2b01      	cmp	r3, #1
 8003522:	d101      	bne.n	8003528 <HAL_TIM_ConfigClockSource+0x1c>
 8003524:	2302      	movs	r3, #2
 8003526:	e0b4      	b.n	8003692 <HAL_TIM_ConfigClockSource+0x186>
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	2201      	movs	r2, #1
 800352c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	2202      	movs	r2, #2
 8003534:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	689b      	ldr	r3, [r3, #8]
 800353e:	60bb      	str	r3, [r7, #8]
 8003540:	68bb      	ldr	r3, [r7, #8]
 8003542:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003546:	60bb      	str	r3, [r7, #8]
 8003548:	68bb      	ldr	r3, [r7, #8]
 800354a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800354e:	60bb      	str	r3, [r7, #8]
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	68ba      	ldr	r2, [r7, #8]
 8003556:	609a      	str	r2, [r3, #8]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003560:	d03e      	beq.n	80035e0 <HAL_TIM_ConfigClockSource+0xd4>
 8003562:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003566:	f200 8087 	bhi.w	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 800356a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800356e:	f000 8086 	beq.w	800367e <HAL_TIM_ConfigClockSource+0x172>
 8003572:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003576:	d87f      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 8003578:	2b70      	cmp	r3, #112	; 0x70
 800357a:	d01a      	beq.n	80035b2 <HAL_TIM_ConfigClockSource+0xa6>
 800357c:	2b70      	cmp	r3, #112	; 0x70
 800357e:	d87b      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 8003580:	2b60      	cmp	r3, #96	; 0x60
 8003582:	d050      	beq.n	8003626 <HAL_TIM_ConfigClockSource+0x11a>
 8003584:	2b60      	cmp	r3, #96	; 0x60
 8003586:	d877      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 8003588:	2b50      	cmp	r3, #80	; 0x50
 800358a:	d03c      	beq.n	8003606 <HAL_TIM_ConfigClockSource+0xfa>
 800358c:	2b50      	cmp	r3, #80	; 0x50
 800358e:	d873      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 8003590:	2b40      	cmp	r3, #64	; 0x40
 8003592:	d058      	beq.n	8003646 <HAL_TIM_ConfigClockSource+0x13a>
 8003594:	2b40      	cmp	r3, #64	; 0x40
 8003596:	d86f      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 8003598:	2b30      	cmp	r3, #48	; 0x30
 800359a:	d064      	beq.n	8003666 <HAL_TIM_ConfigClockSource+0x15a>
 800359c:	2b30      	cmp	r3, #48	; 0x30
 800359e:	d86b      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 80035a0:	2b20      	cmp	r3, #32
 80035a2:	d060      	beq.n	8003666 <HAL_TIM_ConfigClockSource+0x15a>
 80035a4:	2b20      	cmp	r3, #32
 80035a6:	d867      	bhi.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 80035a8:	2b00      	cmp	r3, #0
 80035aa:	d05c      	beq.n	8003666 <HAL_TIM_ConfigClockSource+0x15a>
 80035ac:	2b10      	cmp	r3, #16
 80035ae:	d05a      	beq.n	8003666 <HAL_TIM_ConfigClockSource+0x15a>
 80035b0:	e062      	b.n	8003678 <HAL_TIM_ConfigClockSource+0x16c>
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	6818      	ldr	r0, [r3, #0]
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	6899      	ldr	r1, [r3, #8]
 80035ba:	683b      	ldr	r3, [r7, #0]
 80035bc:	685a      	ldr	r2, [r3, #4]
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	68db      	ldr	r3, [r3, #12]
 80035c2:	f000 faf0 	bl	8003ba6 <TIM_ETR_SetConfig>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	689b      	ldr	r3, [r3, #8]
 80035cc:	60bb      	str	r3, [r7, #8]
 80035ce:	68bb      	ldr	r3, [r7, #8]
 80035d0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80035d4:	60bb      	str	r3, [r7, #8]
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	68ba      	ldr	r2, [r7, #8]
 80035dc:	609a      	str	r2, [r3, #8]
 80035de:	e04f      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	6818      	ldr	r0, [r3, #0]
 80035e4:	683b      	ldr	r3, [r7, #0]
 80035e6:	6899      	ldr	r1, [r3, #8]
 80035e8:	683b      	ldr	r3, [r7, #0]
 80035ea:	685a      	ldr	r2, [r3, #4]
 80035ec:	683b      	ldr	r3, [r7, #0]
 80035ee:	68db      	ldr	r3, [r3, #12]
 80035f0:	f000 fad9 	bl	8003ba6 <TIM_ETR_SetConfig>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	689a      	ldr	r2, [r3, #8]
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	681b      	ldr	r3, [r3, #0]
 80035fe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003602:	609a      	str	r2, [r3, #8]
 8003604:	e03c      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	6818      	ldr	r0, [r3, #0]
 800360a:	683b      	ldr	r3, [r7, #0]
 800360c:	6859      	ldr	r1, [r3, #4]
 800360e:	683b      	ldr	r3, [r7, #0]
 8003610:	68db      	ldr	r3, [r3, #12]
 8003612:	461a      	mov	r2, r3
 8003614:	f000 fa50 	bl	8003ab8 <TIM_TI1_ConfigInputStage>
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	2150      	movs	r1, #80	; 0x50
 800361e:	4618      	mov	r0, r3
 8003620:	f000 faa7 	bl	8003b72 <TIM_ITRx_SetConfig>
 8003624:	e02c      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	6818      	ldr	r0, [r3, #0]
 800362a:	683b      	ldr	r3, [r7, #0]
 800362c:	6859      	ldr	r1, [r3, #4]
 800362e:	683b      	ldr	r3, [r7, #0]
 8003630:	68db      	ldr	r3, [r3, #12]
 8003632:	461a      	mov	r2, r3
 8003634:	f000 fa6e 	bl	8003b14 <TIM_TI2_ConfigInputStage>
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	2160      	movs	r1, #96	; 0x60
 800363e:	4618      	mov	r0, r3
 8003640:	f000 fa97 	bl	8003b72 <TIM_ITRx_SetConfig>
 8003644:	e01c      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	6818      	ldr	r0, [r3, #0]
 800364a:	683b      	ldr	r3, [r7, #0]
 800364c:	6859      	ldr	r1, [r3, #4]
 800364e:	683b      	ldr	r3, [r7, #0]
 8003650:	68db      	ldr	r3, [r3, #12]
 8003652:	461a      	mov	r2, r3
 8003654:	f000 fa30 	bl	8003ab8 <TIM_TI1_ConfigInputStage>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	2140      	movs	r1, #64	; 0x40
 800365e:	4618      	mov	r0, r3
 8003660:	f000 fa87 	bl	8003b72 <TIM_ITRx_SetConfig>
 8003664:	e00c      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681a      	ldr	r2, [r3, #0]
 800366a:	683b      	ldr	r3, [r7, #0]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	4619      	mov	r1, r3
 8003670:	4610      	mov	r0, r2
 8003672:	f000 fa7e 	bl	8003b72 <TIM_ITRx_SetConfig>
 8003676:	e003      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 8003678:	2301      	movs	r3, #1
 800367a:	73fb      	strb	r3, [r7, #15]
 800367c:	e000      	b.n	8003680 <HAL_TIM_ConfigClockSource+0x174>
 800367e:	bf00      	nop
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	2201      	movs	r2, #1
 8003684:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	2200      	movs	r2, #0
 800368c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003690:	7bfb      	ldrb	r3, [r7, #15]
 8003692:	4618      	mov	r0, r3
 8003694:	3710      	adds	r7, #16
 8003696:	46bd      	mov	sp, r7
 8003698:	bd80      	pop	{r7, pc}

0800369a <HAL_TIM_OC_DelayElapsedCallback>:
 800369a:	b480      	push	{r7}
 800369c:	b083      	sub	sp, #12
 800369e:	af00      	add	r7, sp, #0
 80036a0:	6078      	str	r0, [r7, #4]
 80036a2:	bf00      	nop
 80036a4:	370c      	adds	r7, #12
 80036a6:	46bd      	mov	sp, r7
 80036a8:	bc80      	pop	{r7}
 80036aa:	4770      	bx	lr

080036ac <HAL_TIM_IC_CaptureCallback>:
 80036ac:	b480      	push	{r7}
 80036ae:	b083      	sub	sp, #12
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	6078      	str	r0, [r7, #4]
 80036b4:	bf00      	nop
 80036b6:	370c      	adds	r7, #12
 80036b8:	46bd      	mov	sp, r7
 80036ba:	bc80      	pop	{r7}
 80036bc:	4770      	bx	lr

080036be <HAL_TIM_PWM_PulseFinishedCallback>:
 80036be:	b480      	push	{r7}
 80036c0:	b083      	sub	sp, #12
 80036c2:	af00      	add	r7, sp, #0
 80036c4:	6078      	str	r0, [r7, #4]
 80036c6:	bf00      	nop
 80036c8:	370c      	adds	r7, #12
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bc80      	pop	{r7}
 80036ce:	4770      	bx	lr

080036d0 <HAL_TIM_TriggerCallback>:
 80036d0:	b480      	push	{r7}
 80036d2:	b083      	sub	sp, #12
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6078      	str	r0, [r7, #4]
 80036d8:	bf00      	nop
 80036da:	370c      	adds	r7, #12
 80036dc:	46bd      	mov	sp, r7
 80036de:	bc80      	pop	{r7}
 80036e0:	4770      	bx	lr
	...

080036e4 <TIM_Base_SetConfig>:
 80036e4:	b480      	push	{r7}
 80036e6:	b085      	sub	sp, #20
 80036e8:	af00      	add	r7, sp, #0
 80036ea:	6078      	str	r0, [r7, #4]
 80036ec:	6039      	str	r1, [r7, #0]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	60fb      	str	r3, [r7, #12]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	4a29      	ldr	r2, [pc, #164]	; (800379c <TIM_Base_SetConfig+0xb8>)
 80036f8:	4293      	cmp	r3, r2
 80036fa:	d00b      	beq.n	8003714 <TIM_Base_SetConfig+0x30>
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003702:	d007      	beq.n	8003714 <TIM_Base_SetConfig+0x30>
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	4a26      	ldr	r2, [pc, #152]	; (80037a0 <TIM_Base_SetConfig+0xbc>)
 8003708:	4293      	cmp	r3, r2
 800370a:	d003      	beq.n	8003714 <TIM_Base_SetConfig+0x30>
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	4a25      	ldr	r2, [pc, #148]	; (80037a4 <TIM_Base_SetConfig+0xc0>)
 8003710:	4293      	cmp	r3, r2
 8003712:	d108      	bne.n	8003726 <TIM_Base_SetConfig+0x42>
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800371a:	60fb      	str	r3, [r7, #12]
 800371c:	683b      	ldr	r3, [r7, #0]
 800371e:	685b      	ldr	r3, [r3, #4]
 8003720:	68fa      	ldr	r2, [r7, #12]
 8003722:	4313      	orrs	r3, r2
 8003724:	60fb      	str	r3, [r7, #12]
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	4a1c      	ldr	r2, [pc, #112]	; (800379c <TIM_Base_SetConfig+0xb8>)
 800372a:	4293      	cmp	r3, r2
 800372c:	d00b      	beq.n	8003746 <TIM_Base_SetConfig+0x62>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003734:	d007      	beq.n	8003746 <TIM_Base_SetConfig+0x62>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	4a19      	ldr	r2, [pc, #100]	; (80037a0 <TIM_Base_SetConfig+0xbc>)
 800373a:	4293      	cmp	r3, r2
 800373c:	d003      	beq.n	8003746 <TIM_Base_SetConfig+0x62>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	4a18      	ldr	r2, [pc, #96]	; (80037a4 <TIM_Base_SetConfig+0xc0>)
 8003742:	4293      	cmp	r3, r2
 8003744:	d108      	bne.n	8003758 <TIM_Base_SetConfig+0x74>
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800374c:	60fb      	str	r3, [r7, #12]
 800374e:	683b      	ldr	r3, [r7, #0]
 8003750:	68db      	ldr	r3, [r3, #12]
 8003752:	68fa      	ldr	r2, [r7, #12]
 8003754:	4313      	orrs	r3, r2
 8003756:	60fb      	str	r3, [r7, #12]
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800375e:	683b      	ldr	r3, [r7, #0]
 8003760:	695b      	ldr	r3, [r3, #20]
 8003762:	4313      	orrs	r3, r2
 8003764:	60fb      	str	r3, [r7, #12]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	68fa      	ldr	r2, [r7, #12]
 800376a:	601a      	str	r2, [r3, #0]
 800376c:	683b      	ldr	r3, [r7, #0]
 800376e:	689a      	ldr	r2, [r3, #8]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	62da      	str	r2, [r3, #44]	; 0x2c
 8003774:	683b      	ldr	r3, [r7, #0]
 8003776:	681a      	ldr	r2, [r3, #0]
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	629a      	str	r2, [r3, #40]	; 0x28
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	4a07      	ldr	r2, [pc, #28]	; (800379c <TIM_Base_SetConfig+0xb8>)
 8003780:	4293      	cmp	r3, r2
 8003782:	d103      	bne.n	800378c <TIM_Base_SetConfig+0xa8>
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	691a      	ldr	r2, [r3, #16]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	631a      	str	r2, [r3, #48]	; 0x30
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	2201      	movs	r2, #1
 8003790:	615a      	str	r2, [r3, #20]
 8003792:	bf00      	nop
 8003794:	3714      	adds	r7, #20
 8003796:	46bd      	mov	sp, r7
 8003798:	bc80      	pop	{r7}
 800379a:	4770      	bx	lr
 800379c:	40012c00 	.word	0x40012c00
 80037a0:	40000400 	.word	0x40000400
 80037a4:	40000800 	.word	0x40000800

080037a8 <TIM_OC1_SetConfig>:
 80037a8:	b480      	push	{r7}
 80037aa:	b087      	sub	sp, #28
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	6039      	str	r1, [r7, #0]
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	6a1b      	ldr	r3, [r3, #32]
 80037b6:	617b      	str	r3, [r7, #20]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	6a1b      	ldr	r3, [r3, #32]
 80037bc:	f023 0201 	bic.w	r2, r3, #1
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	621a      	str	r2, [r3, #32]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	685b      	ldr	r3, [r3, #4]
 80037c8:	613b      	str	r3, [r7, #16]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	699b      	ldr	r3, [r3, #24]
 80037ce:	60fb      	str	r3, [r7, #12]
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80037d6:	60fb      	str	r3, [r7, #12]
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	f023 0303 	bic.w	r3, r3, #3
 80037de:	60fb      	str	r3, [r7, #12]
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	68fa      	ldr	r2, [r7, #12]
 80037e6:	4313      	orrs	r3, r2
 80037e8:	60fb      	str	r3, [r7, #12]
 80037ea:	697b      	ldr	r3, [r7, #20]
 80037ec:	f023 0302 	bic.w	r3, r3, #2
 80037f0:	617b      	str	r3, [r7, #20]
 80037f2:	683b      	ldr	r3, [r7, #0]
 80037f4:	689b      	ldr	r3, [r3, #8]
 80037f6:	697a      	ldr	r2, [r7, #20]
 80037f8:	4313      	orrs	r3, r2
 80037fa:	617b      	str	r3, [r7, #20]
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	4a1c      	ldr	r2, [pc, #112]	; (8003870 <TIM_OC1_SetConfig+0xc8>)
 8003800:	4293      	cmp	r3, r2
 8003802:	d10c      	bne.n	800381e <TIM_OC1_SetConfig+0x76>
 8003804:	697b      	ldr	r3, [r7, #20]
 8003806:	f023 0308 	bic.w	r3, r3, #8
 800380a:	617b      	str	r3, [r7, #20]
 800380c:	683b      	ldr	r3, [r7, #0]
 800380e:	68db      	ldr	r3, [r3, #12]
 8003810:	697a      	ldr	r2, [r7, #20]
 8003812:	4313      	orrs	r3, r2
 8003814:	617b      	str	r3, [r7, #20]
 8003816:	697b      	ldr	r3, [r7, #20]
 8003818:	f023 0304 	bic.w	r3, r3, #4
 800381c:	617b      	str	r3, [r7, #20]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	4a13      	ldr	r2, [pc, #76]	; (8003870 <TIM_OC1_SetConfig+0xc8>)
 8003822:	4293      	cmp	r3, r2
 8003824:	d111      	bne.n	800384a <TIM_OC1_SetConfig+0xa2>
 8003826:	693b      	ldr	r3, [r7, #16]
 8003828:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800382c:	613b      	str	r3, [r7, #16]
 800382e:	693b      	ldr	r3, [r7, #16]
 8003830:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003834:	613b      	str	r3, [r7, #16]
 8003836:	683b      	ldr	r3, [r7, #0]
 8003838:	695b      	ldr	r3, [r3, #20]
 800383a:	693a      	ldr	r2, [r7, #16]
 800383c:	4313      	orrs	r3, r2
 800383e:	613b      	str	r3, [r7, #16]
 8003840:	683b      	ldr	r3, [r7, #0]
 8003842:	699b      	ldr	r3, [r3, #24]
 8003844:	693a      	ldr	r2, [r7, #16]
 8003846:	4313      	orrs	r3, r2
 8003848:	613b      	str	r3, [r7, #16]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	693a      	ldr	r2, [r7, #16]
 800384e:	605a      	str	r2, [r3, #4]
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	68fa      	ldr	r2, [r7, #12]
 8003854:	619a      	str	r2, [r3, #24]
 8003856:	683b      	ldr	r3, [r7, #0]
 8003858:	685a      	ldr	r2, [r3, #4]
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	635a      	str	r2, [r3, #52]	; 0x34
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	697a      	ldr	r2, [r7, #20]
 8003862:	621a      	str	r2, [r3, #32]
 8003864:	bf00      	nop
 8003866:	371c      	adds	r7, #28
 8003868:	46bd      	mov	sp, r7
 800386a:	bc80      	pop	{r7}
 800386c:	4770      	bx	lr
 800386e:	bf00      	nop
 8003870:	40012c00 	.word	0x40012c00

08003874 <TIM_OC2_SetConfig>:
 8003874:	b480      	push	{r7}
 8003876:	b087      	sub	sp, #28
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	6039      	str	r1, [r7, #0]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	6a1b      	ldr	r3, [r3, #32]
 8003882:	617b      	str	r3, [r7, #20]
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	6a1b      	ldr	r3, [r3, #32]
 8003888:	f023 0210 	bic.w	r2, r3, #16
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	621a      	str	r2, [r3, #32]
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	685b      	ldr	r3, [r3, #4]
 8003894:	613b      	str	r3, [r7, #16]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	699b      	ldr	r3, [r3, #24]
 800389a:	60fb      	str	r3, [r7, #12]
 800389c:	68fb      	ldr	r3, [r7, #12]
 800389e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80038a2:	60fb      	str	r3, [r7, #12]
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80038aa:	60fb      	str	r3, [r7, #12]
 80038ac:	683b      	ldr	r3, [r7, #0]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	021b      	lsls	r3, r3, #8
 80038b2:	68fa      	ldr	r2, [r7, #12]
 80038b4:	4313      	orrs	r3, r2
 80038b6:	60fb      	str	r3, [r7, #12]
 80038b8:	697b      	ldr	r3, [r7, #20]
 80038ba:	f023 0320 	bic.w	r3, r3, #32
 80038be:	617b      	str	r3, [r7, #20]
 80038c0:	683b      	ldr	r3, [r7, #0]
 80038c2:	689b      	ldr	r3, [r3, #8]
 80038c4:	011b      	lsls	r3, r3, #4
 80038c6:	697a      	ldr	r2, [r7, #20]
 80038c8:	4313      	orrs	r3, r2
 80038ca:	617b      	str	r3, [r7, #20]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	4a1d      	ldr	r2, [pc, #116]	; (8003944 <TIM_OC2_SetConfig+0xd0>)
 80038d0:	4293      	cmp	r3, r2
 80038d2:	d10d      	bne.n	80038f0 <TIM_OC2_SetConfig+0x7c>
 80038d4:	697b      	ldr	r3, [r7, #20]
 80038d6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80038da:	617b      	str	r3, [r7, #20]
 80038dc:	683b      	ldr	r3, [r7, #0]
 80038de:	68db      	ldr	r3, [r3, #12]
 80038e0:	011b      	lsls	r3, r3, #4
 80038e2:	697a      	ldr	r2, [r7, #20]
 80038e4:	4313      	orrs	r3, r2
 80038e6:	617b      	str	r3, [r7, #20]
 80038e8:	697b      	ldr	r3, [r7, #20]
 80038ea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80038ee:	617b      	str	r3, [r7, #20]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	4a14      	ldr	r2, [pc, #80]	; (8003944 <TIM_OC2_SetConfig+0xd0>)
 80038f4:	4293      	cmp	r3, r2
 80038f6:	d113      	bne.n	8003920 <TIM_OC2_SetConfig+0xac>
 80038f8:	693b      	ldr	r3, [r7, #16]
 80038fa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80038fe:	613b      	str	r3, [r7, #16]
 8003900:	693b      	ldr	r3, [r7, #16]
 8003902:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003906:	613b      	str	r3, [r7, #16]
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	695b      	ldr	r3, [r3, #20]
 800390c:	009b      	lsls	r3, r3, #2
 800390e:	693a      	ldr	r2, [r7, #16]
 8003910:	4313      	orrs	r3, r2
 8003912:	613b      	str	r3, [r7, #16]
 8003914:	683b      	ldr	r3, [r7, #0]
 8003916:	699b      	ldr	r3, [r3, #24]
 8003918:	009b      	lsls	r3, r3, #2
 800391a:	693a      	ldr	r2, [r7, #16]
 800391c:	4313      	orrs	r3, r2
 800391e:	613b      	str	r3, [r7, #16]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	693a      	ldr	r2, [r7, #16]
 8003924:	605a      	str	r2, [r3, #4]
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	68fa      	ldr	r2, [r7, #12]
 800392a:	619a      	str	r2, [r3, #24]
 800392c:	683b      	ldr	r3, [r7, #0]
 800392e:	685a      	ldr	r2, [r3, #4]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	639a      	str	r2, [r3, #56]	; 0x38
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	697a      	ldr	r2, [r7, #20]
 8003938:	621a      	str	r2, [r3, #32]
 800393a:	bf00      	nop
 800393c:	371c      	adds	r7, #28
 800393e:	46bd      	mov	sp, r7
 8003940:	bc80      	pop	{r7}
 8003942:	4770      	bx	lr
 8003944:	40012c00 	.word	0x40012c00

08003948 <TIM_OC3_SetConfig>:
 8003948:	b480      	push	{r7}
 800394a:	b087      	sub	sp, #28
 800394c:	af00      	add	r7, sp, #0
 800394e:	6078      	str	r0, [r7, #4]
 8003950:	6039      	str	r1, [r7, #0]
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	6a1b      	ldr	r3, [r3, #32]
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6a1b      	ldr	r3, [r3, #32]
 800395c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	621a      	str	r2, [r3, #32]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	685b      	ldr	r3, [r3, #4]
 8003968:	613b      	str	r3, [r7, #16]
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	69db      	ldr	r3, [r3, #28]
 800396e:	60fb      	str	r3, [r7, #12]
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003976:	60fb      	str	r3, [r7, #12]
 8003978:	68fb      	ldr	r3, [r7, #12]
 800397a:	f023 0303 	bic.w	r3, r3, #3
 800397e:	60fb      	str	r3, [r7, #12]
 8003980:	683b      	ldr	r3, [r7, #0]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	68fa      	ldr	r2, [r7, #12]
 8003986:	4313      	orrs	r3, r2
 8003988:	60fb      	str	r3, [r7, #12]
 800398a:	697b      	ldr	r3, [r7, #20]
 800398c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003990:	617b      	str	r3, [r7, #20]
 8003992:	683b      	ldr	r3, [r7, #0]
 8003994:	689b      	ldr	r3, [r3, #8]
 8003996:	021b      	lsls	r3, r3, #8
 8003998:	697a      	ldr	r2, [r7, #20]
 800399a:	4313      	orrs	r3, r2
 800399c:	617b      	str	r3, [r7, #20]
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	4a1d      	ldr	r2, [pc, #116]	; (8003a18 <TIM_OC3_SetConfig+0xd0>)
 80039a2:	4293      	cmp	r3, r2
 80039a4:	d10d      	bne.n	80039c2 <TIM_OC3_SetConfig+0x7a>
 80039a6:	697b      	ldr	r3, [r7, #20]
 80039a8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80039ac:	617b      	str	r3, [r7, #20]
 80039ae:	683b      	ldr	r3, [r7, #0]
 80039b0:	68db      	ldr	r3, [r3, #12]
 80039b2:	021b      	lsls	r3, r3, #8
 80039b4:	697a      	ldr	r2, [r7, #20]
 80039b6:	4313      	orrs	r3, r2
 80039b8:	617b      	str	r3, [r7, #20]
 80039ba:	697b      	ldr	r3, [r7, #20]
 80039bc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80039c0:	617b      	str	r3, [r7, #20]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	4a14      	ldr	r2, [pc, #80]	; (8003a18 <TIM_OC3_SetConfig+0xd0>)
 80039c6:	4293      	cmp	r3, r2
 80039c8:	d113      	bne.n	80039f2 <TIM_OC3_SetConfig+0xaa>
 80039ca:	693b      	ldr	r3, [r7, #16]
 80039cc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80039d0:	613b      	str	r3, [r7, #16]
 80039d2:	693b      	ldr	r3, [r7, #16]
 80039d4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80039d8:	613b      	str	r3, [r7, #16]
 80039da:	683b      	ldr	r3, [r7, #0]
 80039dc:	695b      	ldr	r3, [r3, #20]
 80039de:	011b      	lsls	r3, r3, #4
 80039e0:	693a      	ldr	r2, [r7, #16]
 80039e2:	4313      	orrs	r3, r2
 80039e4:	613b      	str	r3, [r7, #16]
 80039e6:	683b      	ldr	r3, [r7, #0]
 80039e8:	699b      	ldr	r3, [r3, #24]
 80039ea:	011b      	lsls	r3, r3, #4
 80039ec:	693a      	ldr	r2, [r7, #16]
 80039ee:	4313      	orrs	r3, r2
 80039f0:	613b      	str	r3, [r7, #16]
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	693a      	ldr	r2, [r7, #16]
 80039f6:	605a      	str	r2, [r3, #4]
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	68fa      	ldr	r2, [r7, #12]
 80039fc:	61da      	str	r2, [r3, #28]
 80039fe:	683b      	ldr	r3, [r7, #0]
 8003a00:	685a      	ldr	r2, [r3, #4]
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	63da      	str	r2, [r3, #60]	; 0x3c
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	697a      	ldr	r2, [r7, #20]
 8003a0a:	621a      	str	r2, [r3, #32]
 8003a0c:	bf00      	nop
 8003a0e:	371c      	adds	r7, #28
 8003a10:	46bd      	mov	sp, r7
 8003a12:	bc80      	pop	{r7}
 8003a14:	4770      	bx	lr
 8003a16:	bf00      	nop
 8003a18:	40012c00 	.word	0x40012c00

08003a1c <TIM_OC4_SetConfig>:
 8003a1c:	b480      	push	{r7}
 8003a1e:	b087      	sub	sp, #28
 8003a20:	af00      	add	r7, sp, #0
 8003a22:	6078      	str	r0, [r7, #4]
 8003a24:	6039      	str	r1, [r7, #0]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	6a1b      	ldr	r3, [r3, #32]
 8003a2a:	613b      	str	r3, [r7, #16]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	6a1b      	ldr	r3, [r3, #32]
 8003a30:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	621a      	str	r2, [r3, #32]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	685b      	ldr	r3, [r3, #4]
 8003a3c:	617b      	str	r3, [r7, #20]
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	69db      	ldr	r3, [r3, #28]
 8003a42:	60fb      	str	r3, [r7, #12]
 8003a44:	68fb      	ldr	r3, [r7, #12]
 8003a46:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003a4a:	60fb      	str	r3, [r7, #12]
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003a52:	60fb      	str	r3, [r7, #12]
 8003a54:	683b      	ldr	r3, [r7, #0]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	021b      	lsls	r3, r3, #8
 8003a5a:	68fa      	ldr	r2, [r7, #12]
 8003a5c:	4313      	orrs	r3, r2
 8003a5e:	60fb      	str	r3, [r7, #12]
 8003a60:	693b      	ldr	r3, [r7, #16]
 8003a62:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003a66:	613b      	str	r3, [r7, #16]
 8003a68:	683b      	ldr	r3, [r7, #0]
 8003a6a:	689b      	ldr	r3, [r3, #8]
 8003a6c:	031b      	lsls	r3, r3, #12
 8003a6e:	693a      	ldr	r2, [r7, #16]
 8003a70:	4313      	orrs	r3, r2
 8003a72:	613b      	str	r3, [r7, #16]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	4a0f      	ldr	r2, [pc, #60]	; (8003ab4 <TIM_OC4_SetConfig+0x98>)
 8003a78:	4293      	cmp	r3, r2
 8003a7a:	d109      	bne.n	8003a90 <TIM_OC4_SetConfig+0x74>
 8003a7c:	697b      	ldr	r3, [r7, #20]
 8003a7e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003a82:	617b      	str	r3, [r7, #20]
 8003a84:	683b      	ldr	r3, [r7, #0]
 8003a86:	695b      	ldr	r3, [r3, #20]
 8003a88:	019b      	lsls	r3, r3, #6
 8003a8a:	697a      	ldr	r2, [r7, #20]
 8003a8c:	4313      	orrs	r3, r2
 8003a8e:	617b      	str	r3, [r7, #20]
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	697a      	ldr	r2, [r7, #20]
 8003a94:	605a      	str	r2, [r3, #4]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	68fa      	ldr	r2, [r7, #12]
 8003a9a:	61da      	str	r2, [r3, #28]
 8003a9c:	683b      	ldr	r3, [r7, #0]
 8003a9e:	685a      	ldr	r2, [r3, #4]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	641a      	str	r2, [r3, #64]	; 0x40
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	693a      	ldr	r2, [r7, #16]
 8003aa8:	621a      	str	r2, [r3, #32]
 8003aaa:	bf00      	nop
 8003aac:	371c      	adds	r7, #28
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	bc80      	pop	{r7}
 8003ab2:	4770      	bx	lr
 8003ab4:	40012c00 	.word	0x40012c00

08003ab8 <TIM_TI1_ConfigInputStage>:
 8003ab8:	b480      	push	{r7}
 8003aba:	b087      	sub	sp, #28
 8003abc:	af00      	add	r7, sp, #0
 8003abe:	60f8      	str	r0, [r7, #12]
 8003ac0:	60b9      	str	r1, [r7, #8]
 8003ac2:	607a      	str	r2, [r7, #4]
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	6a1b      	ldr	r3, [r3, #32]
 8003ac8:	617b      	str	r3, [r7, #20]
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	6a1b      	ldr	r3, [r3, #32]
 8003ace:	f023 0201 	bic.w	r2, r3, #1
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	621a      	str	r2, [r3, #32]
 8003ad6:	68fb      	ldr	r3, [r7, #12]
 8003ad8:	699b      	ldr	r3, [r3, #24]
 8003ada:	613b      	str	r3, [r7, #16]
 8003adc:	693b      	ldr	r3, [r7, #16]
 8003ade:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003ae2:	613b      	str	r3, [r7, #16]
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	011b      	lsls	r3, r3, #4
 8003ae8:	693a      	ldr	r2, [r7, #16]
 8003aea:	4313      	orrs	r3, r2
 8003aec:	613b      	str	r3, [r7, #16]
 8003aee:	697b      	ldr	r3, [r7, #20]
 8003af0:	f023 030a 	bic.w	r3, r3, #10
 8003af4:	617b      	str	r3, [r7, #20]
 8003af6:	697a      	ldr	r2, [r7, #20]
 8003af8:	68bb      	ldr	r3, [r7, #8]
 8003afa:	4313      	orrs	r3, r2
 8003afc:	617b      	str	r3, [r7, #20]
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	693a      	ldr	r2, [r7, #16]
 8003b02:	619a      	str	r2, [r3, #24]
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	697a      	ldr	r2, [r7, #20]
 8003b08:	621a      	str	r2, [r3, #32]
 8003b0a:	bf00      	nop
 8003b0c:	371c      	adds	r7, #28
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	bc80      	pop	{r7}
 8003b12:	4770      	bx	lr

08003b14 <TIM_TI2_ConfigInputStage>:
 8003b14:	b480      	push	{r7}
 8003b16:	b087      	sub	sp, #28
 8003b18:	af00      	add	r7, sp, #0
 8003b1a:	60f8      	str	r0, [r7, #12]
 8003b1c:	60b9      	str	r1, [r7, #8]
 8003b1e:	607a      	str	r2, [r7, #4]
 8003b20:	68fb      	ldr	r3, [r7, #12]
 8003b22:	6a1b      	ldr	r3, [r3, #32]
 8003b24:	617b      	str	r3, [r7, #20]
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	6a1b      	ldr	r3, [r3, #32]
 8003b2a:	f023 0210 	bic.w	r2, r3, #16
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	621a      	str	r2, [r3, #32]
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	699b      	ldr	r3, [r3, #24]
 8003b36:	613b      	str	r3, [r7, #16]
 8003b38:	693b      	ldr	r3, [r7, #16]
 8003b3a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003b3e:	613b      	str	r3, [r7, #16]
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	031b      	lsls	r3, r3, #12
 8003b44:	693a      	ldr	r2, [r7, #16]
 8003b46:	4313      	orrs	r3, r2
 8003b48:	613b      	str	r3, [r7, #16]
 8003b4a:	697b      	ldr	r3, [r7, #20]
 8003b4c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003b50:	617b      	str	r3, [r7, #20]
 8003b52:	68bb      	ldr	r3, [r7, #8]
 8003b54:	011b      	lsls	r3, r3, #4
 8003b56:	697a      	ldr	r2, [r7, #20]
 8003b58:	4313      	orrs	r3, r2
 8003b5a:	617b      	str	r3, [r7, #20]
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	693a      	ldr	r2, [r7, #16]
 8003b60:	619a      	str	r2, [r3, #24]
 8003b62:	68fb      	ldr	r3, [r7, #12]
 8003b64:	697a      	ldr	r2, [r7, #20]
 8003b66:	621a      	str	r2, [r3, #32]
 8003b68:	bf00      	nop
 8003b6a:	371c      	adds	r7, #28
 8003b6c:	46bd      	mov	sp, r7
 8003b6e:	bc80      	pop	{r7}
 8003b70:	4770      	bx	lr

08003b72 <TIM_ITRx_SetConfig>:
 8003b72:	b480      	push	{r7}
 8003b74:	b085      	sub	sp, #20
 8003b76:	af00      	add	r7, sp, #0
 8003b78:	6078      	str	r0, [r7, #4]
 8003b7a:	6039      	str	r1, [r7, #0]
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	689b      	ldr	r3, [r3, #8]
 8003b80:	60fb      	str	r3, [r7, #12]
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003b88:	60fb      	str	r3, [r7, #12]
 8003b8a:	683a      	ldr	r2, [r7, #0]
 8003b8c:	68fb      	ldr	r3, [r7, #12]
 8003b8e:	4313      	orrs	r3, r2
 8003b90:	f043 0307 	orr.w	r3, r3, #7
 8003b94:	60fb      	str	r3, [r7, #12]
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	68fa      	ldr	r2, [r7, #12]
 8003b9a:	609a      	str	r2, [r3, #8]
 8003b9c:	bf00      	nop
 8003b9e:	3714      	adds	r7, #20
 8003ba0:	46bd      	mov	sp, r7
 8003ba2:	bc80      	pop	{r7}
 8003ba4:	4770      	bx	lr

08003ba6 <TIM_ETR_SetConfig>:
 8003ba6:	b480      	push	{r7}
 8003ba8:	b087      	sub	sp, #28
 8003baa:	af00      	add	r7, sp, #0
 8003bac:	60f8      	str	r0, [r7, #12]
 8003bae:	60b9      	str	r1, [r7, #8]
 8003bb0:	607a      	str	r2, [r7, #4]
 8003bb2:	603b      	str	r3, [r7, #0]
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	689b      	ldr	r3, [r3, #8]
 8003bb8:	617b      	str	r3, [r7, #20]
 8003bba:	697b      	ldr	r3, [r7, #20]
 8003bbc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003bc0:	617b      	str	r3, [r7, #20]
 8003bc2:	683b      	ldr	r3, [r7, #0]
 8003bc4:	021a      	lsls	r2, r3, #8
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	431a      	orrs	r2, r3
 8003bca:	68bb      	ldr	r3, [r7, #8]
 8003bcc:	4313      	orrs	r3, r2
 8003bce:	697a      	ldr	r2, [r7, #20]
 8003bd0:	4313      	orrs	r3, r2
 8003bd2:	617b      	str	r3, [r7, #20]
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	697a      	ldr	r2, [r7, #20]
 8003bd8:	609a      	str	r2, [r3, #8]
 8003bda:	bf00      	nop
 8003bdc:	371c      	adds	r7, #28
 8003bde:	46bd      	mov	sp, r7
 8003be0:	bc80      	pop	{r7}
 8003be2:	4770      	bx	lr

08003be4 <TIM_CCxChannelCmd>:
 8003be4:	b480      	push	{r7}
 8003be6:	b087      	sub	sp, #28
 8003be8:	af00      	add	r7, sp, #0
 8003bea:	60f8      	str	r0, [r7, #12]
 8003bec:	60b9      	str	r1, [r7, #8]
 8003bee:	607a      	str	r2, [r7, #4]
 8003bf0:	68bb      	ldr	r3, [r7, #8]
 8003bf2:	f003 031f 	and.w	r3, r3, #31
 8003bf6:	2201      	movs	r2, #1
 8003bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bfc:	617b      	str	r3, [r7, #20]
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	6a1a      	ldr	r2, [r3, #32]
 8003c02:	697b      	ldr	r3, [r7, #20]
 8003c04:	43db      	mvns	r3, r3
 8003c06:	401a      	ands	r2, r3
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	621a      	str	r2, [r3, #32]
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	6a1a      	ldr	r2, [r3, #32]
 8003c10:	68bb      	ldr	r3, [r7, #8]
 8003c12:	f003 031f 	and.w	r3, r3, #31
 8003c16:	6879      	ldr	r1, [r7, #4]
 8003c18:	fa01 f303 	lsl.w	r3, r1, r3
 8003c1c:	431a      	orrs	r2, r3
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	621a      	str	r2, [r3, #32]
 8003c22:	bf00      	nop
 8003c24:	371c      	adds	r7, #28
 8003c26:	46bd      	mov	sp, r7
 8003c28:	bc80      	pop	{r7}
 8003c2a:	4770      	bx	lr

08003c2c <HAL_TIMEx_MasterConfigSynchronization>:
 8003c2c:	b480      	push	{r7}
 8003c2e:	b085      	sub	sp, #20
 8003c30:	af00      	add	r7, sp, #0
 8003c32:	6078      	str	r0, [r7, #4]
 8003c34:	6039      	str	r1, [r7, #0]
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003c3c:	2b01      	cmp	r3, #1
 8003c3e:	d101      	bne.n	8003c44 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003c40:	2302      	movs	r3, #2
 8003c42:	e046      	b.n	8003cd2 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	2201      	movs	r2, #1
 8003c48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	2202      	movs	r2, #2
 8003c50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	685b      	ldr	r3, [r3, #4]
 8003c5a:	60fb      	str	r3, [r7, #12]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	689b      	ldr	r3, [r3, #8]
 8003c62:	60bb      	str	r3, [r7, #8]
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003c6a:	60fb      	str	r3, [r7, #12]
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	68fa      	ldr	r2, [r7, #12]
 8003c72:	4313      	orrs	r3, r2
 8003c74:	60fb      	str	r3, [r7, #12]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	68fa      	ldr	r2, [r7, #12]
 8003c7c:	605a      	str	r2, [r3, #4]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	4a16      	ldr	r2, [pc, #88]	; (8003cdc <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003c84:	4293      	cmp	r3, r2
 8003c86:	d00e      	beq.n	8003ca6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c90:	d009      	beq.n	8003ca6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	4a12      	ldr	r2, [pc, #72]	; (8003ce0 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003c98:	4293      	cmp	r3, r2
 8003c9a:	d004      	beq.n	8003ca6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	4a10      	ldr	r2, [pc, #64]	; (8003ce4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003ca2:	4293      	cmp	r3, r2
 8003ca4:	d10c      	bne.n	8003cc0 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003ca6:	68bb      	ldr	r3, [r7, #8]
 8003ca8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003cac:	60bb      	str	r3, [r7, #8]
 8003cae:	683b      	ldr	r3, [r7, #0]
 8003cb0:	685b      	ldr	r3, [r3, #4]
 8003cb2:	68ba      	ldr	r2, [r7, #8]
 8003cb4:	4313      	orrs	r3, r2
 8003cb6:	60bb      	str	r3, [r7, #8]
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	68ba      	ldr	r2, [r7, #8]
 8003cbe:	609a      	str	r2, [r3, #8]
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	2201      	movs	r2, #1
 8003cc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	2200      	movs	r2, #0
 8003ccc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003cd0:	2300      	movs	r3, #0
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	3714      	adds	r7, #20
 8003cd6:	46bd      	mov	sp, r7
 8003cd8:	bc80      	pop	{r7}
 8003cda:	4770      	bx	lr
 8003cdc:	40012c00 	.word	0x40012c00
 8003ce0:	40000400 	.word	0x40000400
 8003ce4:	40000800 	.word	0x40000800

08003ce8 <HAL_TIMEx_CommutCallback>:
 8003ce8:	b480      	push	{r7}
 8003cea:	b083      	sub	sp, #12
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	bf00      	nop
 8003cf2:	370c      	adds	r7, #12
 8003cf4:	46bd      	mov	sp, r7
 8003cf6:	bc80      	pop	{r7}
 8003cf8:	4770      	bx	lr

08003cfa <HAL_TIMEx_BreakCallback>:
 8003cfa:	b480      	push	{r7}
 8003cfc:	b083      	sub	sp, #12
 8003cfe:	af00      	add	r7, sp, #0
 8003d00:	6078      	str	r0, [r7, #4]
 8003d02:	bf00      	nop
 8003d04:	370c      	adds	r7, #12
 8003d06:	46bd      	mov	sp, r7
 8003d08:	bc80      	pop	{r7}
 8003d0a:	4770      	bx	lr

08003d0c <HAL_UART_Init>:
 8003d0c:	b580      	push	{r7, lr}
 8003d0e:	b082      	sub	sp, #8
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d101      	bne.n	8003d1e <HAL_UART_Init+0x12>
 8003d1a:	2301      	movs	r3, #1
 8003d1c:	e042      	b.n	8003da4 <HAL_UART_Init+0x98>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003d24:	b2db      	uxtb	r3, r3
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d106      	bne.n	8003d38 <HAL_UART_Init+0x2c>
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	2200      	movs	r2, #0
 8003d2e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003d32:	6878      	ldr	r0, [r7, #4]
 8003d34:	f7fd ff96 	bl	8001c64 <HAL_UART_MspInit>
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	2224      	movs	r2, #36	; 0x24
 8003d3c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	68da      	ldr	r2, [r3, #12]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003d4e:	60da      	str	r2, [r3, #12]
 8003d50:	6878      	ldr	r0, [r7, #4]
 8003d52:	f000 fd71 	bl	8004838 <UART_SetConfig>
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	691a      	ldr	r2, [r3, #16]
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003d64:	611a      	str	r2, [r3, #16]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	695a      	ldr	r2, [r3, #20]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003d74:	615a      	str	r2, [r3, #20]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	68da      	ldr	r2, [r3, #12]
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003d84:	60da      	str	r2, [r3, #12]
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	2200      	movs	r2, #0
 8003d8a:	645a      	str	r2, [r3, #68]	; 0x44
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	2220      	movs	r2, #32
 8003d90:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	2220      	movs	r2, #32
 8003d98:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	2200      	movs	r2, #0
 8003da0:	635a      	str	r2, [r3, #52]	; 0x34
 8003da2:	2300      	movs	r3, #0
 8003da4:	4618      	mov	r0, r3
 8003da6:	3708      	adds	r7, #8
 8003da8:	46bd      	mov	sp, r7
 8003daa:	bd80      	pop	{r7, pc}

08003dac <HAL_UART_Transmit>:
 8003dac:	b580      	push	{r7, lr}
 8003dae:	b08a      	sub	sp, #40	; 0x28
 8003db0:	af02      	add	r7, sp, #8
 8003db2:	60f8      	str	r0, [r7, #12]
 8003db4:	60b9      	str	r1, [r7, #8]
 8003db6:	603b      	str	r3, [r7, #0]
 8003db8:	4613      	mov	r3, r2
 8003dba:	80fb      	strh	r3, [r7, #6]
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	617b      	str	r3, [r7, #20]
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003dc6:	b2db      	uxtb	r3, r3
 8003dc8:	2b20      	cmp	r3, #32
 8003dca:	d16d      	bne.n	8003ea8 <HAL_UART_Transmit+0xfc>
 8003dcc:	68bb      	ldr	r3, [r7, #8]
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	d002      	beq.n	8003dd8 <HAL_UART_Transmit+0x2c>
 8003dd2:	88fb      	ldrh	r3, [r7, #6]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d101      	bne.n	8003ddc <HAL_UART_Transmit+0x30>
 8003dd8:	2301      	movs	r3, #1
 8003dda:	e066      	b.n	8003eaa <HAL_UART_Transmit+0xfe>
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	2200      	movs	r2, #0
 8003de0:	645a      	str	r2, [r3, #68]	; 0x44
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	2221      	movs	r2, #33	; 0x21
 8003de6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003dea:	f7fe f89d 	bl	8001f28 <HAL_GetTick>
 8003dee:	6178      	str	r0, [r7, #20]
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	88fa      	ldrh	r2, [r7, #6]
 8003df4:	849a      	strh	r2, [r3, #36]	; 0x24
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	88fa      	ldrh	r2, [r7, #6]
 8003dfa:	84da      	strh	r2, [r3, #38]	; 0x26
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	689b      	ldr	r3, [r3, #8]
 8003e00:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003e04:	d108      	bne.n	8003e18 <HAL_UART_Transmit+0x6c>
 8003e06:	68fb      	ldr	r3, [r7, #12]
 8003e08:	691b      	ldr	r3, [r3, #16]
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d104      	bne.n	8003e18 <HAL_UART_Transmit+0x6c>
 8003e0e:	2300      	movs	r3, #0
 8003e10:	61fb      	str	r3, [r7, #28]
 8003e12:	68bb      	ldr	r3, [r7, #8]
 8003e14:	61bb      	str	r3, [r7, #24]
 8003e16:	e003      	b.n	8003e20 <HAL_UART_Transmit+0x74>
 8003e18:	68bb      	ldr	r3, [r7, #8]
 8003e1a:	61fb      	str	r3, [r7, #28]
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	61bb      	str	r3, [r7, #24]
 8003e20:	e02a      	b.n	8003e78 <HAL_UART_Transmit+0xcc>
 8003e22:	683b      	ldr	r3, [r7, #0]
 8003e24:	9300      	str	r3, [sp, #0]
 8003e26:	697b      	ldr	r3, [r7, #20]
 8003e28:	2200      	movs	r2, #0
 8003e2a:	2180      	movs	r1, #128	; 0x80
 8003e2c:	68f8      	ldr	r0, [r7, #12]
 8003e2e:	f000 faf9 	bl	8004424 <UART_WaitOnFlagUntilTimeout>
 8003e32:	4603      	mov	r3, r0
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d001      	beq.n	8003e3c <HAL_UART_Transmit+0x90>
 8003e38:	2303      	movs	r3, #3
 8003e3a:	e036      	b.n	8003eaa <HAL_UART_Transmit+0xfe>
 8003e3c:	69fb      	ldr	r3, [r7, #28]
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d10b      	bne.n	8003e5a <HAL_UART_Transmit+0xae>
 8003e42:	69bb      	ldr	r3, [r7, #24]
 8003e44:	881b      	ldrh	r3, [r3, #0]
 8003e46:	461a      	mov	r2, r3
 8003e48:	68fb      	ldr	r3, [r7, #12]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003e50:	605a      	str	r2, [r3, #4]
 8003e52:	69bb      	ldr	r3, [r7, #24]
 8003e54:	3302      	adds	r3, #2
 8003e56:	61bb      	str	r3, [r7, #24]
 8003e58:	e007      	b.n	8003e6a <HAL_UART_Transmit+0xbe>
 8003e5a:	69fb      	ldr	r3, [r7, #28]
 8003e5c:	781a      	ldrb	r2, [r3, #0]
 8003e5e:	68fb      	ldr	r3, [r7, #12]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	605a      	str	r2, [r3, #4]
 8003e64:	69fb      	ldr	r3, [r7, #28]
 8003e66:	3301      	adds	r3, #1
 8003e68:	61fb      	str	r3, [r7, #28]
 8003e6a:	68fb      	ldr	r3, [r7, #12]
 8003e6c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003e6e:	b29b      	uxth	r3, r3
 8003e70:	3b01      	subs	r3, #1
 8003e72:	b29a      	uxth	r2, r3
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	84da      	strh	r2, [r3, #38]	; 0x26
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003e7c:	b29b      	uxth	r3, r3
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d1cf      	bne.n	8003e22 <HAL_UART_Transmit+0x76>
 8003e82:	683b      	ldr	r3, [r7, #0]
 8003e84:	9300      	str	r3, [sp, #0]
 8003e86:	697b      	ldr	r3, [r7, #20]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	2140      	movs	r1, #64	; 0x40
 8003e8c:	68f8      	ldr	r0, [r7, #12]
 8003e8e:	f000 fac9 	bl	8004424 <UART_WaitOnFlagUntilTimeout>
 8003e92:	4603      	mov	r3, r0
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d001      	beq.n	8003e9c <HAL_UART_Transmit+0xf0>
 8003e98:	2303      	movs	r3, #3
 8003e9a:	e006      	b.n	8003eaa <HAL_UART_Transmit+0xfe>
 8003e9c:	68fb      	ldr	r3, [r7, #12]
 8003e9e:	2220      	movs	r2, #32
 8003ea0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003ea4:	2300      	movs	r3, #0
 8003ea6:	e000      	b.n	8003eaa <HAL_UART_Transmit+0xfe>
 8003ea8:	2302      	movs	r3, #2
 8003eaa:	4618      	mov	r0, r3
 8003eac:	3720      	adds	r7, #32
 8003eae:	46bd      	mov	sp, r7
 8003eb0:	bd80      	pop	{r7, pc}
	...

08003eb4 <HAL_UART_IRQHandler>:
 8003eb4:	b580      	push	{r7, lr}
 8003eb6:	b0ba      	sub	sp, #232	; 0xe8
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	6078      	str	r0, [r7, #4]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	68db      	ldr	r3, [r3, #12]
 8003ecc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	695b      	ldr	r3, [r3, #20]
 8003ed6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8003eda:	2300      	movs	r3, #0
 8003edc:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003ee0:	2300      	movs	r3, #0
 8003ee2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003ee6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003eea:	f003 030f 	and.w	r3, r3, #15
 8003eee:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003ef2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d10f      	bne.n	8003f1a <HAL_UART_IRQHandler+0x66>
 8003efa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003efe:	f003 0320 	and.w	r3, r3, #32
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d009      	beq.n	8003f1a <HAL_UART_IRQHandler+0x66>
 8003f06:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003f0a:	f003 0320 	and.w	r3, r3, #32
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d003      	beq.n	8003f1a <HAL_UART_IRQHandler+0x66>
 8003f12:	6878      	ldr	r0, [r7, #4]
 8003f14:	f000 fbd1 	bl	80046ba <UART_Receive_IT>
 8003f18:	e25b      	b.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 8003f1a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	f000 80de 	beq.w	80040e0 <HAL_UART_IRQHandler+0x22c>
 8003f24:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003f28:	f003 0301 	and.w	r3, r3, #1
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d106      	bne.n	8003f3e <HAL_UART_IRQHandler+0x8a>
 8003f30:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003f34:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	f000 80d1 	beq.w	80040e0 <HAL_UART_IRQHandler+0x22c>
 8003f3e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003f42:	f003 0301 	and.w	r3, r3, #1
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d00b      	beq.n	8003f62 <HAL_UART_IRQHandler+0xae>
 8003f4a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003f4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f52:	2b00      	cmp	r3, #0
 8003f54:	d005      	beq.n	8003f62 <HAL_UART_IRQHandler+0xae>
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003f5a:	f043 0201 	orr.w	r2, r3, #1
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	645a      	str	r2, [r3, #68]	; 0x44
 8003f62:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003f66:	f003 0304 	and.w	r3, r3, #4
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d00b      	beq.n	8003f86 <HAL_UART_IRQHandler+0xd2>
 8003f6e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003f72:	f003 0301 	and.w	r3, r3, #1
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d005      	beq.n	8003f86 <HAL_UART_IRQHandler+0xd2>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003f7e:	f043 0202 	orr.w	r2, r3, #2
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	645a      	str	r2, [r3, #68]	; 0x44
 8003f86:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003f8a:	f003 0302 	and.w	r3, r3, #2
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d00b      	beq.n	8003faa <HAL_UART_IRQHandler+0xf6>
 8003f92:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003f96:	f003 0301 	and.w	r3, r3, #1
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d005      	beq.n	8003faa <HAL_UART_IRQHandler+0xf6>
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fa2:	f043 0204 	orr.w	r2, r3, #4
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	645a      	str	r2, [r3, #68]	; 0x44
 8003faa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003fae:	f003 0308 	and.w	r3, r3, #8
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d011      	beq.n	8003fda <HAL_UART_IRQHandler+0x126>
 8003fb6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003fba:	f003 0320 	and.w	r3, r3, #32
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d105      	bne.n	8003fce <HAL_UART_IRQHandler+0x11a>
 8003fc2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003fc6:	f003 0301 	and.w	r3, r3, #1
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d005      	beq.n	8003fda <HAL_UART_IRQHandler+0x126>
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fd2:	f043 0208 	orr.w	r2, r3, #8
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	645a      	str	r2, [r3, #68]	; 0x44
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	f000 81f2 	beq.w	80043c8 <HAL_UART_IRQHandler+0x514>
 8003fe4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003fe8:	f003 0320 	and.w	r3, r3, #32
 8003fec:	2b00      	cmp	r3, #0
 8003fee:	d008      	beq.n	8004002 <HAL_UART_IRQHandler+0x14e>
 8003ff0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003ff4:	f003 0320 	and.w	r3, r3, #32
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d002      	beq.n	8004002 <HAL_UART_IRQHandler+0x14e>
 8003ffc:	6878      	ldr	r0, [r7, #4]
 8003ffe:	f000 fb5c 	bl	80046ba <UART_Receive_IT>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	695b      	ldr	r3, [r3, #20]
 8004008:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800400c:	2b00      	cmp	r3, #0
 800400e:	bf14      	ite	ne
 8004010:	2301      	movne	r3, #1
 8004012:	2300      	moveq	r3, #0
 8004014:	b2db      	uxtb	r3, r3
 8004016:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800401e:	f003 0308 	and.w	r3, r3, #8
 8004022:	2b00      	cmp	r3, #0
 8004024:	d103      	bne.n	800402e <HAL_UART_IRQHandler+0x17a>
 8004026:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800402a:	2b00      	cmp	r3, #0
 800402c:	d04f      	beq.n	80040ce <HAL_UART_IRQHandler+0x21a>
 800402e:	6878      	ldr	r0, [r7, #4]
 8004030:	f000 fa66 	bl	8004500 <UART_EndRxTransfer>
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	681b      	ldr	r3, [r3, #0]
 8004038:	695b      	ldr	r3, [r3, #20]
 800403a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800403e:	2b00      	cmp	r3, #0
 8004040:	d041      	beq.n	80040c6 <HAL_UART_IRQHandler+0x212>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	3314      	adds	r3, #20
 8004048:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800404c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8004050:	e853 3f00 	ldrex	r3, [r3]
 8004054:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004058:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800405c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004060:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	3314      	adds	r3, #20
 800406a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800406e:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8004072:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8004076:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800407a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800407e:	e841 2300 	strex	r3, r2, [r1]
 8004082:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004086:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800408a:	2b00      	cmp	r3, #0
 800408c:	d1d9      	bne.n	8004042 <HAL_UART_IRQHandler+0x18e>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004092:	2b00      	cmp	r3, #0
 8004094:	d013      	beq.n	80040be <HAL_UART_IRQHandler+0x20a>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800409a:	4a7e      	ldr	r2, [pc, #504]	; (8004294 <HAL_UART_IRQHandler+0x3e0>)
 800409c:	635a      	str	r2, [r3, #52]	; 0x34
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040a2:	4618      	mov	r0, r3
 80040a4:	f7fe f892 	bl	80021cc <HAL_DMA_Abort_IT>
 80040a8:	4603      	mov	r3, r0
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d016      	beq.n	80040dc <HAL_UART_IRQHandler+0x228>
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80040b4:	687a      	ldr	r2, [r7, #4]
 80040b6:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80040b8:	4610      	mov	r0, r2
 80040ba:	4798      	blx	r3
 80040bc:	e00e      	b.n	80040dc <HAL_UART_IRQHandler+0x228>
 80040be:	6878      	ldr	r0, [r7, #4]
 80040c0:	f000 f99c 	bl	80043fc <HAL_UART_ErrorCallback>
 80040c4:	e00a      	b.n	80040dc <HAL_UART_IRQHandler+0x228>
 80040c6:	6878      	ldr	r0, [r7, #4]
 80040c8:	f000 f998 	bl	80043fc <HAL_UART_ErrorCallback>
 80040cc:	e006      	b.n	80040dc <HAL_UART_IRQHandler+0x228>
 80040ce:	6878      	ldr	r0, [r7, #4]
 80040d0:	f000 f994 	bl	80043fc <HAL_UART_ErrorCallback>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	2200      	movs	r2, #0
 80040d8:	645a      	str	r2, [r3, #68]	; 0x44
 80040da:	e175      	b.n	80043c8 <HAL_UART_IRQHandler+0x514>
 80040dc:	bf00      	nop
 80040de:	e173      	b.n	80043c8 <HAL_UART_IRQHandler+0x514>
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040e4:	2b01      	cmp	r3, #1
 80040e6:	f040 814f 	bne.w	8004388 <HAL_UART_IRQHandler+0x4d4>
 80040ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80040ee:	f003 0310 	and.w	r3, r3, #16
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	f000 8148 	beq.w	8004388 <HAL_UART_IRQHandler+0x4d4>
 80040f8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80040fc:	f003 0310 	and.w	r3, r3, #16
 8004100:	2b00      	cmp	r3, #0
 8004102:	f000 8141 	beq.w	8004388 <HAL_UART_IRQHandler+0x4d4>
 8004106:	2300      	movs	r3, #0
 8004108:	60bb      	str	r3, [r7, #8]
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	60bb      	str	r3, [r7, #8]
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	685b      	ldr	r3, [r3, #4]
 8004118:	60bb      	str	r3, [r7, #8]
 800411a:	68bb      	ldr	r3, [r7, #8]
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	695b      	ldr	r3, [r3, #20]
 8004122:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004126:	2b00      	cmp	r3, #0
 8004128:	f000 80b6 	beq.w	8004298 <HAL_UART_IRQHandler+0x3e4>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	685b      	ldr	r3, [r3, #4]
 8004134:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8004138:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800413c:	2b00      	cmp	r3, #0
 800413e:	f000 8145 	beq.w	80043cc <HAL_UART_IRQHandler+0x518>
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004146:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800414a:	429a      	cmp	r2, r3
 800414c:	f080 813e 	bcs.w	80043cc <HAL_UART_IRQHandler+0x518>
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004156:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800415c:	699b      	ldr	r3, [r3, #24]
 800415e:	2b20      	cmp	r3, #32
 8004160:	f000 8088 	beq.w	8004274 <HAL_UART_IRQHandler+0x3c0>
 8004164:	687b      	ldr	r3, [r7, #4]
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	330c      	adds	r3, #12
 800416a:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800416e:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8004172:	e853 3f00 	ldrex	r3, [r3]
 8004176:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800417a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800417e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004182:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	330c      	adds	r3, #12
 800418c:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8004190:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8004194:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004198:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800419c:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80041a0:	e841 2300 	strex	r3, r2, [r1]
 80041a4:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80041a8:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d1d9      	bne.n	8004164 <HAL_UART_IRQHandler+0x2b0>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	3314      	adds	r3, #20
 80041b6:	677b      	str	r3, [r7, #116]	; 0x74
 80041b8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80041ba:	e853 3f00 	ldrex	r3, [r3]
 80041be:	673b      	str	r3, [r7, #112]	; 0x70
 80041c0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80041c2:	f023 0301 	bic.w	r3, r3, #1
 80041c6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	3314      	adds	r3, #20
 80041d0:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80041d4:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80041d8:	67fb      	str	r3, [r7, #124]	; 0x7c
 80041da:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80041dc:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80041e0:	e841 2300 	strex	r3, r2, [r1]
 80041e4:	67bb      	str	r3, [r7, #120]	; 0x78
 80041e6:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d1e1      	bne.n	80041b0 <HAL_UART_IRQHandler+0x2fc>
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	3314      	adds	r3, #20
 80041f2:	663b      	str	r3, [r7, #96]	; 0x60
 80041f4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80041f6:	e853 3f00 	ldrex	r3, [r3]
 80041fa:	65fb      	str	r3, [r7, #92]	; 0x5c
 80041fc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80041fe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004202:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	3314      	adds	r3, #20
 800420c:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8004210:	66fa      	str	r2, [r7, #108]	; 0x6c
 8004212:	66bb      	str	r3, [r7, #104]	; 0x68
 8004214:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8004216:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8004218:	e841 2300 	strex	r3, r2, [r1]
 800421c:	667b      	str	r3, [r7, #100]	; 0x64
 800421e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004220:	2b00      	cmp	r3, #0
 8004222:	d1e3      	bne.n	80041ec <HAL_UART_IRQHandler+0x338>
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	2220      	movs	r2, #32
 8004228:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	2200      	movs	r2, #0
 8004230:	631a      	str	r2, [r3, #48]	; 0x30
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	330c      	adds	r3, #12
 8004238:	64fb      	str	r3, [r7, #76]	; 0x4c
 800423a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800423c:	e853 3f00 	ldrex	r3, [r3]
 8004240:	64bb      	str	r3, [r7, #72]	; 0x48
 8004242:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004244:	f023 0310 	bic.w	r3, r3, #16
 8004248:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	330c      	adds	r3, #12
 8004252:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8004256:	65ba      	str	r2, [r7, #88]	; 0x58
 8004258:	657b      	str	r3, [r7, #84]	; 0x54
 800425a:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800425c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800425e:	e841 2300 	strex	r3, r2, [r1]
 8004262:	653b      	str	r3, [r7, #80]	; 0x50
 8004264:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8004266:	2b00      	cmp	r3, #0
 8004268:	d1e3      	bne.n	8004232 <HAL_UART_IRQHandler+0x37e>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800426e:	4618      	mov	r0, r3
 8004270:	f7fd ff71 	bl	8002156 <HAL_DMA_Abort>
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2202      	movs	r2, #2
 8004278:	635a      	str	r2, [r3, #52]	; 0x34
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004282:	b29b      	uxth	r3, r3
 8004284:	1ad3      	subs	r3, r2, r3
 8004286:	b29b      	uxth	r3, r3
 8004288:	4619      	mov	r1, r3
 800428a:	6878      	ldr	r0, [r7, #4]
 800428c:	f000 f8bf 	bl	800440e <HAL_UARTEx_RxEventCallback>
 8004290:	e09c      	b.n	80043cc <HAL_UART_IRQHandler+0x518>
 8004292:	bf00      	nop
 8004294:	080045c5 	.word	0x080045c5
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80042a0:	b29b      	uxth	r3, r3
 80042a2:	1ad3      	subs	r3, r2, r3
 80042a4:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80042ac:	b29b      	uxth	r3, r3
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	f000 808e 	beq.w	80043d0 <HAL_UART_IRQHandler+0x51c>
 80042b4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	f000 8089 	beq.w	80043d0 <HAL_UART_IRQHandler+0x51c>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	330c      	adds	r3, #12
 80042c4:	63bb      	str	r3, [r7, #56]	; 0x38
 80042c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80042c8:	e853 3f00 	ldrex	r3, [r3]
 80042cc:	637b      	str	r3, [r7, #52]	; 0x34
 80042ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80042d0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80042d4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	330c      	adds	r3, #12
 80042de:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80042e2:	647a      	str	r2, [r7, #68]	; 0x44
 80042e4:	643b      	str	r3, [r7, #64]	; 0x40
 80042e6:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80042e8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80042ea:	e841 2300 	strex	r3, r2, [r1]
 80042ee:	63fb      	str	r3, [r7, #60]	; 0x3c
 80042f0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d1e3      	bne.n	80042be <HAL_UART_IRQHandler+0x40a>
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	3314      	adds	r3, #20
 80042fc:	627b      	str	r3, [r7, #36]	; 0x24
 80042fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004300:	e853 3f00 	ldrex	r3, [r3]
 8004304:	623b      	str	r3, [r7, #32]
 8004306:	6a3b      	ldr	r3, [r7, #32]
 8004308:	f023 0301 	bic.w	r3, r3, #1
 800430c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	3314      	adds	r3, #20
 8004316:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800431a:	633a      	str	r2, [r7, #48]	; 0x30
 800431c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800431e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004320:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004322:	e841 2300 	strex	r3, r2, [r1]
 8004326:	62bb      	str	r3, [r7, #40]	; 0x28
 8004328:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800432a:	2b00      	cmp	r3, #0
 800432c:	d1e3      	bne.n	80042f6 <HAL_UART_IRQHandler+0x442>
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	2220      	movs	r2, #32
 8004332:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	2200      	movs	r2, #0
 800433a:	631a      	str	r2, [r3, #48]	; 0x30
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	330c      	adds	r3, #12
 8004342:	613b      	str	r3, [r7, #16]
 8004344:	693b      	ldr	r3, [r7, #16]
 8004346:	e853 3f00 	ldrex	r3, [r3]
 800434a:	60fb      	str	r3, [r7, #12]
 800434c:	68fb      	ldr	r3, [r7, #12]
 800434e:	f023 0310 	bic.w	r3, r3, #16
 8004352:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	330c      	adds	r3, #12
 800435c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8004360:	61fa      	str	r2, [r7, #28]
 8004362:	61bb      	str	r3, [r7, #24]
 8004364:	69b9      	ldr	r1, [r7, #24]
 8004366:	69fa      	ldr	r2, [r7, #28]
 8004368:	e841 2300 	strex	r3, r2, [r1]
 800436c:	617b      	str	r3, [r7, #20]
 800436e:	697b      	ldr	r3, [r7, #20]
 8004370:	2b00      	cmp	r3, #0
 8004372:	d1e3      	bne.n	800433c <HAL_UART_IRQHandler+0x488>
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	2202      	movs	r2, #2
 8004378:	635a      	str	r2, [r3, #52]	; 0x34
 800437a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800437e:	4619      	mov	r1, r3
 8004380:	6878      	ldr	r0, [r7, #4]
 8004382:	f000 f844 	bl	800440e <HAL_UARTEx_RxEventCallback>
 8004386:	e023      	b.n	80043d0 <HAL_UART_IRQHandler+0x51c>
 8004388:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800438c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004390:	2b00      	cmp	r3, #0
 8004392:	d009      	beq.n	80043a8 <HAL_UART_IRQHandler+0x4f4>
 8004394:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004398:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800439c:	2b00      	cmp	r3, #0
 800439e:	d003      	beq.n	80043a8 <HAL_UART_IRQHandler+0x4f4>
 80043a0:	6878      	ldr	r0, [r7, #4]
 80043a2:	f000 f923 	bl	80045ec <UART_Transmit_IT>
 80043a6:	e014      	b.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043a8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80043ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d00e      	beq.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043b4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80043b8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80043bc:	2b00      	cmp	r3, #0
 80043be:	d008      	beq.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043c0:	6878      	ldr	r0, [r7, #4]
 80043c2:	f000 f962 	bl	800468a <UART_EndTransmit_IT>
 80043c6:	e004      	b.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043c8:	bf00      	nop
 80043ca:	e002      	b.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043cc:	bf00      	nop
 80043ce:	e000      	b.n	80043d2 <HAL_UART_IRQHandler+0x51e>
 80043d0:	bf00      	nop
 80043d2:	37e8      	adds	r7, #232	; 0xe8
 80043d4:	46bd      	mov	sp, r7
 80043d6:	bd80      	pop	{r7, pc}

080043d8 <HAL_UART_TxCpltCallback>:
 80043d8:	b480      	push	{r7}
 80043da:	b083      	sub	sp, #12
 80043dc:	af00      	add	r7, sp, #0
 80043de:	6078      	str	r0, [r7, #4]
 80043e0:	bf00      	nop
 80043e2:	370c      	adds	r7, #12
 80043e4:	46bd      	mov	sp, r7
 80043e6:	bc80      	pop	{r7}
 80043e8:	4770      	bx	lr

080043ea <HAL_UART_RxCpltCallback>:
 80043ea:	b480      	push	{r7}
 80043ec:	b083      	sub	sp, #12
 80043ee:	af00      	add	r7, sp, #0
 80043f0:	6078      	str	r0, [r7, #4]
 80043f2:	bf00      	nop
 80043f4:	370c      	adds	r7, #12
 80043f6:	46bd      	mov	sp, r7
 80043f8:	bc80      	pop	{r7}
 80043fa:	4770      	bx	lr

080043fc <HAL_UART_ErrorCallback>:
 80043fc:	b480      	push	{r7}
 80043fe:	b083      	sub	sp, #12
 8004400:	af00      	add	r7, sp, #0
 8004402:	6078      	str	r0, [r7, #4]
 8004404:	bf00      	nop
 8004406:	370c      	adds	r7, #12
 8004408:	46bd      	mov	sp, r7
 800440a:	bc80      	pop	{r7}
 800440c:	4770      	bx	lr

0800440e <HAL_UARTEx_RxEventCallback>:
 800440e:	b480      	push	{r7}
 8004410:	b083      	sub	sp, #12
 8004412:	af00      	add	r7, sp, #0
 8004414:	6078      	str	r0, [r7, #4]
 8004416:	460b      	mov	r3, r1
 8004418:	807b      	strh	r3, [r7, #2]
 800441a:	bf00      	nop
 800441c:	370c      	adds	r7, #12
 800441e:	46bd      	mov	sp, r7
 8004420:	bc80      	pop	{r7}
 8004422:	4770      	bx	lr

08004424 <UART_WaitOnFlagUntilTimeout>:
 8004424:	b580      	push	{r7, lr}
 8004426:	b090      	sub	sp, #64	; 0x40
 8004428:	af00      	add	r7, sp, #0
 800442a:	60f8      	str	r0, [r7, #12]
 800442c:	60b9      	str	r1, [r7, #8]
 800442e:	603b      	str	r3, [r7, #0]
 8004430:	4613      	mov	r3, r2
 8004432:	71fb      	strb	r3, [r7, #7]
 8004434:	e050      	b.n	80044d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004436:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004438:	f1b3 3fff 	cmp.w	r3, #4294967295
 800443c:	d04c      	beq.n	80044d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 800443e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004440:	2b00      	cmp	r3, #0
 8004442:	d007      	beq.n	8004454 <UART_WaitOnFlagUntilTimeout+0x30>
 8004444:	f7fd fd70 	bl	8001f28 <HAL_GetTick>
 8004448:	4602      	mov	r2, r0
 800444a:	683b      	ldr	r3, [r7, #0]
 800444c:	1ad3      	subs	r3, r2, r3
 800444e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8004450:	429a      	cmp	r2, r3
 8004452:	d241      	bcs.n	80044d8 <UART_WaitOnFlagUntilTimeout+0xb4>
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	330c      	adds	r3, #12
 800445a:	62bb      	str	r3, [r7, #40]	; 0x28
 800445c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800445e:	e853 3f00 	ldrex	r3, [r3]
 8004462:	627b      	str	r3, [r7, #36]	; 0x24
 8004464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004466:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800446a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	330c      	adds	r3, #12
 8004472:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004474:	637a      	str	r2, [r7, #52]	; 0x34
 8004476:	633b      	str	r3, [r7, #48]	; 0x30
 8004478:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800447a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800447c:	e841 2300 	strex	r3, r2, [r1]
 8004480:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004482:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004484:	2b00      	cmp	r3, #0
 8004486:	d1e5      	bne.n	8004454 <UART_WaitOnFlagUntilTimeout+0x30>
 8004488:	68fb      	ldr	r3, [r7, #12]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	3314      	adds	r3, #20
 800448e:	617b      	str	r3, [r7, #20]
 8004490:	697b      	ldr	r3, [r7, #20]
 8004492:	e853 3f00 	ldrex	r3, [r3]
 8004496:	613b      	str	r3, [r7, #16]
 8004498:	693b      	ldr	r3, [r7, #16]
 800449a:	f023 0301 	bic.w	r3, r3, #1
 800449e:	63bb      	str	r3, [r7, #56]	; 0x38
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	3314      	adds	r3, #20
 80044a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80044a8:	623a      	str	r2, [r7, #32]
 80044aa:	61fb      	str	r3, [r7, #28]
 80044ac:	69f9      	ldr	r1, [r7, #28]
 80044ae:	6a3a      	ldr	r2, [r7, #32]
 80044b0:	e841 2300 	strex	r3, r2, [r1]
 80044b4:	61bb      	str	r3, [r7, #24]
 80044b6:	69bb      	ldr	r3, [r7, #24]
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d1e5      	bne.n	8004488 <UART_WaitOnFlagUntilTimeout+0x64>
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	2220      	movs	r2, #32
 80044c0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80044c4:	68fb      	ldr	r3, [r7, #12]
 80044c6:	2220      	movs	r2, #32
 80044c8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	2200      	movs	r2, #0
 80044d0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80044d4:	2303      	movs	r3, #3
 80044d6:	e00f      	b.n	80044f8 <UART_WaitOnFlagUntilTimeout+0xd4>
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	68bb      	ldr	r3, [r7, #8]
 80044e0:	4013      	ands	r3, r2
 80044e2:	68ba      	ldr	r2, [r7, #8]
 80044e4:	429a      	cmp	r2, r3
 80044e6:	bf0c      	ite	eq
 80044e8:	2301      	moveq	r3, #1
 80044ea:	2300      	movne	r3, #0
 80044ec:	b2db      	uxtb	r3, r3
 80044ee:	461a      	mov	r2, r3
 80044f0:	79fb      	ldrb	r3, [r7, #7]
 80044f2:	429a      	cmp	r2, r3
 80044f4:	d09f      	beq.n	8004436 <UART_WaitOnFlagUntilTimeout+0x12>
 80044f6:	2300      	movs	r3, #0
 80044f8:	4618      	mov	r0, r3
 80044fa:	3740      	adds	r7, #64	; 0x40
 80044fc:	46bd      	mov	sp, r7
 80044fe:	bd80      	pop	{r7, pc}

08004500 <UART_EndRxTransfer>:
 8004500:	b480      	push	{r7}
 8004502:	b095      	sub	sp, #84	; 0x54
 8004504:	af00      	add	r7, sp, #0
 8004506:	6078      	str	r0, [r7, #4]
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	330c      	adds	r3, #12
 800450e:	637b      	str	r3, [r7, #52]	; 0x34
 8004510:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004512:	e853 3f00 	ldrex	r3, [r3]
 8004516:	633b      	str	r3, [r7, #48]	; 0x30
 8004518:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800451a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800451e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	330c      	adds	r3, #12
 8004526:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004528:	643a      	str	r2, [r7, #64]	; 0x40
 800452a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800452c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800452e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8004530:	e841 2300 	strex	r3, r2, [r1]
 8004534:	63bb      	str	r3, [r7, #56]	; 0x38
 8004536:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004538:	2b00      	cmp	r3, #0
 800453a:	d1e5      	bne.n	8004508 <UART_EndRxTransfer+0x8>
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	3314      	adds	r3, #20
 8004542:	623b      	str	r3, [r7, #32]
 8004544:	6a3b      	ldr	r3, [r7, #32]
 8004546:	e853 3f00 	ldrex	r3, [r3]
 800454a:	61fb      	str	r3, [r7, #28]
 800454c:	69fb      	ldr	r3, [r7, #28]
 800454e:	f023 0301 	bic.w	r3, r3, #1
 8004552:	64bb      	str	r3, [r7, #72]	; 0x48
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	3314      	adds	r3, #20
 800455a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800455c:	62fa      	str	r2, [r7, #44]	; 0x2c
 800455e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004560:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004562:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004564:	e841 2300 	strex	r3, r2, [r1]
 8004568:	627b      	str	r3, [r7, #36]	; 0x24
 800456a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800456c:	2b00      	cmp	r3, #0
 800456e:	d1e5      	bne.n	800453c <UART_EndRxTransfer+0x3c>
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004574:	2b01      	cmp	r3, #1
 8004576:	d119      	bne.n	80045ac <UART_EndRxTransfer+0xac>
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	330c      	adds	r3, #12
 800457e:	60fb      	str	r3, [r7, #12]
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	e853 3f00 	ldrex	r3, [r3]
 8004586:	60bb      	str	r3, [r7, #8]
 8004588:	68bb      	ldr	r3, [r7, #8]
 800458a:	f023 0310 	bic.w	r3, r3, #16
 800458e:	647b      	str	r3, [r7, #68]	; 0x44
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	330c      	adds	r3, #12
 8004596:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004598:	61ba      	str	r2, [r7, #24]
 800459a:	617b      	str	r3, [r7, #20]
 800459c:	6979      	ldr	r1, [r7, #20]
 800459e:	69ba      	ldr	r2, [r7, #24]
 80045a0:	e841 2300 	strex	r3, r2, [r1]
 80045a4:	613b      	str	r3, [r7, #16]
 80045a6:	693b      	ldr	r3, [r7, #16]
 80045a8:	2b00      	cmp	r3, #0
 80045aa:	d1e5      	bne.n	8004578 <UART_EndRxTransfer+0x78>
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	2220      	movs	r2, #32
 80045b0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	2200      	movs	r2, #0
 80045b8:	631a      	str	r2, [r3, #48]	; 0x30
 80045ba:	bf00      	nop
 80045bc:	3754      	adds	r7, #84	; 0x54
 80045be:	46bd      	mov	sp, r7
 80045c0:	bc80      	pop	{r7}
 80045c2:	4770      	bx	lr

080045c4 <UART_DMAAbortOnError>:
 80045c4:	b580      	push	{r7, lr}
 80045c6:	b084      	sub	sp, #16
 80045c8:	af00      	add	r7, sp, #0
 80045ca:	6078      	str	r0, [r7, #4]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d0:	60fb      	str	r3, [r7, #12]
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	2200      	movs	r2, #0
 80045d6:	85da      	strh	r2, [r3, #46]	; 0x2e
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	2200      	movs	r2, #0
 80045dc:	84da      	strh	r2, [r3, #38]	; 0x26
 80045de:	68f8      	ldr	r0, [r7, #12]
 80045e0:	f7ff ff0c 	bl	80043fc <HAL_UART_ErrorCallback>
 80045e4:	bf00      	nop
 80045e6:	3710      	adds	r7, #16
 80045e8:	46bd      	mov	sp, r7
 80045ea:	bd80      	pop	{r7, pc}

080045ec <UART_Transmit_IT>:
 80045ec:	b480      	push	{r7}
 80045ee:	b085      	sub	sp, #20
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80045fa:	b2db      	uxtb	r3, r3
 80045fc:	2b21      	cmp	r3, #33	; 0x21
 80045fe:	d13e      	bne.n	800467e <UART_Transmit_IT+0x92>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	689b      	ldr	r3, [r3, #8]
 8004604:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004608:	d114      	bne.n	8004634 <UART_Transmit_IT+0x48>
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	691b      	ldr	r3, [r3, #16]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d110      	bne.n	8004634 <UART_Transmit_IT+0x48>
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	6a1b      	ldr	r3, [r3, #32]
 8004616:	60fb      	str	r3, [r7, #12]
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	881b      	ldrh	r3, [r3, #0]
 800461c:	461a      	mov	r2, r3
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004626:	605a      	str	r2, [r3, #4]
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	6a1b      	ldr	r3, [r3, #32]
 800462c:	1c9a      	adds	r2, r3, #2
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	621a      	str	r2, [r3, #32]
 8004632:	e008      	b.n	8004646 <UART_Transmit_IT+0x5a>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	6a1b      	ldr	r3, [r3, #32]
 8004638:	1c59      	adds	r1, r3, #1
 800463a:	687a      	ldr	r2, [r7, #4]
 800463c:	6211      	str	r1, [r2, #32]
 800463e:	781a      	ldrb	r2, [r3, #0]
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	605a      	str	r2, [r3, #4]
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800464a:	b29b      	uxth	r3, r3
 800464c:	3b01      	subs	r3, #1
 800464e:	b29b      	uxth	r3, r3
 8004650:	687a      	ldr	r2, [r7, #4]
 8004652:	4619      	mov	r1, r3
 8004654:	84d1      	strh	r1, [r2, #38]	; 0x26
 8004656:	2b00      	cmp	r3, #0
 8004658:	d10f      	bne.n	800467a <UART_Transmit_IT+0x8e>
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	68da      	ldr	r2, [r3, #12]
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004668:	60da      	str	r2, [r3, #12]
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	68da      	ldr	r2, [r3, #12]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004678:	60da      	str	r2, [r3, #12]
 800467a:	2300      	movs	r3, #0
 800467c:	e000      	b.n	8004680 <UART_Transmit_IT+0x94>
 800467e:	2302      	movs	r3, #2
 8004680:	4618      	mov	r0, r3
 8004682:	3714      	adds	r7, #20
 8004684:	46bd      	mov	sp, r7
 8004686:	bc80      	pop	{r7}
 8004688:	4770      	bx	lr

0800468a <UART_EndTransmit_IT>:
 800468a:	b580      	push	{r7, lr}
 800468c:	b082      	sub	sp, #8
 800468e:	af00      	add	r7, sp, #0
 8004690:	6078      	str	r0, [r7, #4]
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	68da      	ldr	r2, [r3, #12]
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80046a0:	60da      	str	r2, [r3, #12]
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	2220      	movs	r2, #32
 80046a6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80046aa:	6878      	ldr	r0, [r7, #4]
 80046ac:	f7ff fe94 	bl	80043d8 <HAL_UART_TxCpltCallback>
 80046b0:	2300      	movs	r3, #0
 80046b2:	4618      	mov	r0, r3
 80046b4:	3708      	adds	r7, #8
 80046b6:	46bd      	mov	sp, r7
 80046b8:	bd80      	pop	{r7, pc}

080046ba <UART_Receive_IT>:
 80046ba:	b580      	push	{r7, lr}
 80046bc:	b08c      	sub	sp, #48	; 0x30
 80046be:	af00      	add	r7, sp, #0
 80046c0:	6078      	str	r0, [r7, #4]
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80046c8:	b2db      	uxtb	r3, r3
 80046ca:	2b22      	cmp	r3, #34	; 0x22
 80046cc:	f040 80ae 	bne.w	800482c <UART_Receive_IT+0x172>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	689b      	ldr	r3, [r3, #8]
 80046d4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80046d8:	d117      	bne.n	800470a <UART_Receive_IT+0x50>
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	691b      	ldr	r3, [r3, #16]
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d113      	bne.n	800470a <UART_Receive_IT+0x50>
 80046e2:	2300      	movs	r3, #0
 80046e4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80046ea:	62bb      	str	r3, [r7, #40]	; 0x28
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	685b      	ldr	r3, [r3, #4]
 80046f2:	b29b      	uxth	r3, r3
 80046f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80046f8:	b29a      	uxth	r2, r3
 80046fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80046fc:	801a      	strh	r2, [r3, #0]
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004702:	1c9a      	adds	r2, r3, #2
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	629a      	str	r2, [r3, #40]	; 0x28
 8004708:	e026      	b.n	8004758 <UART_Receive_IT+0x9e>
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800470e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004710:	2300      	movs	r3, #0
 8004712:	62bb      	str	r3, [r7, #40]	; 0x28
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	689b      	ldr	r3, [r3, #8]
 8004718:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800471c:	d007      	beq.n	800472e <UART_Receive_IT+0x74>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	689b      	ldr	r3, [r3, #8]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d10a      	bne.n	800473c <UART_Receive_IT+0x82>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	691b      	ldr	r3, [r3, #16]
 800472a:	2b00      	cmp	r3, #0
 800472c:	d106      	bne.n	800473c <UART_Receive_IT+0x82>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	685b      	ldr	r3, [r3, #4]
 8004734:	b2da      	uxtb	r2, r3
 8004736:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004738:	701a      	strb	r2, [r3, #0]
 800473a:	e008      	b.n	800474e <UART_Receive_IT+0x94>
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	681b      	ldr	r3, [r3, #0]
 8004740:	685b      	ldr	r3, [r3, #4]
 8004742:	b2db      	uxtb	r3, r3
 8004744:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004748:	b2da      	uxtb	r2, r3
 800474a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800474c:	701a      	strb	r2, [r3, #0]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004752:	1c5a      	adds	r2, r3, #1
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	629a      	str	r2, [r3, #40]	; 0x28
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800475c:	b29b      	uxth	r3, r3
 800475e:	3b01      	subs	r3, #1
 8004760:	b29b      	uxth	r3, r3
 8004762:	687a      	ldr	r2, [r7, #4]
 8004764:	4619      	mov	r1, r3
 8004766:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8004768:	2b00      	cmp	r3, #0
 800476a:	d15d      	bne.n	8004828 <UART_Receive_IT+0x16e>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	68da      	ldr	r2, [r3, #12]
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	f022 0220 	bic.w	r2, r2, #32
 800477a:	60da      	str	r2, [r3, #12]
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	68da      	ldr	r2, [r3, #12]
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800478a:	60da      	str	r2, [r3, #12]
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	695a      	ldr	r2, [r3, #20]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f022 0201 	bic.w	r2, r2, #1
 800479a:	615a      	str	r2, [r3, #20]
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	2220      	movs	r2, #32
 80047a0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	2200      	movs	r2, #0
 80047a8:	635a      	str	r2, [r3, #52]	; 0x34
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047ae:	2b01      	cmp	r3, #1
 80047b0:	d135      	bne.n	800481e <UART_Receive_IT+0x164>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	2200      	movs	r2, #0
 80047b6:	631a      	str	r2, [r3, #48]	; 0x30
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	330c      	adds	r3, #12
 80047be:	617b      	str	r3, [r7, #20]
 80047c0:	697b      	ldr	r3, [r7, #20]
 80047c2:	e853 3f00 	ldrex	r3, [r3]
 80047c6:	613b      	str	r3, [r7, #16]
 80047c8:	693b      	ldr	r3, [r7, #16]
 80047ca:	f023 0310 	bic.w	r3, r3, #16
 80047ce:	627b      	str	r3, [r7, #36]	; 0x24
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	330c      	adds	r3, #12
 80047d6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80047d8:	623a      	str	r2, [r7, #32]
 80047da:	61fb      	str	r3, [r7, #28]
 80047dc:	69f9      	ldr	r1, [r7, #28]
 80047de:	6a3a      	ldr	r2, [r7, #32]
 80047e0:	e841 2300 	strex	r3, r2, [r1]
 80047e4:	61bb      	str	r3, [r7, #24]
 80047e6:	69bb      	ldr	r3, [r7, #24]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	d1e5      	bne.n	80047b8 <UART_Receive_IT+0xfe>
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	f003 0310 	and.w	r3, r3, #16
 80047f6:	2b10      	cmp	r3, #16
 80047f8:	d10a      	bne.n	8004810 <UART_Receive_IT+0x156>
 80047fa:	2300      	movs	r3, #0
 80047fc:	60fb      	str	r3, [r7, #12]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	60fb      	str	r3, [r7, #12]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	685b      	ldr	r3, [r3, #4]
 800480c:	60fb      	str	r3, [r7, #12]
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004814:	4619      	mov	r1, r3
 8004816:	6878      	ldr	r0, [r7, #4]
 8004818:	f7ff fdf9 	bl	800440e <HAL_UARTEx_RxEventCallback>
 800481c:	e002      	b.n	8004824 <UART_Receive_IT+0x16a>
 800481e:	6878      	ldr	r0, [r7, #4]
 8004820:	f7ff fde3 	bl	80043ea <HAL_UART_RxCpltCallback>
 8004824:	2300      	movs	r3, #0
 8004826:	e002      	b.n	800482e <UART_Receive_IT+0x174>
 8004828:	2300      	movs	r3, #0
 800482a:	e000      	b.n	800482e <UART_Receive_IT+0x174>
 800482c:	2302      	movs	r3, #2
 800482e:	4618      	mov	r0, r3
 8004830:	3730      	adds	r7, #48	; 0x30
 8004832:	46bd      	mov	sp, r7
 8004834:	bd80      	pop	{r7, pc}
	...

08004838 <UART_SetConfig>:
 8004838:	b580      	push	{r7, lr}
 800483a:	b084      	sub	sp, #16
 800483c:	af00      	add	r7, sp, #0
 800483e:	6078      	str	r0, [r7, #4]
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	691b      	ldr	r3, [r3, #16]
 8004846:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	68da      	ldr	r2, [r3, #12]
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	430a      	orrs	r2, r1
 8004854:	611a      	str	r2, [r3, #16]
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	689a      	ldr	r2, [r3, #8]
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	691b      	ldr	r3, [r3, #16]
 800485e:	431a      	orrs	r2, r3
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	695b      	ldr	r3, [r3, #20]
 8004864:	4313      	orrs	r3, r2
 8004866:	60bb      	str	r3, [r7, #8]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	68db      	ldr	r3, [r3, #12]
 800486e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8004872:	f023 030c 	bic.w	r3, r3, #12
 8004876:	687a      	ldr	r2, [r7, #4]
 8004878:	6812      	ldr	r2, [r2, #0]
 800487a:	68b9      	ldr	r1, [r7, #8]
 800487c:	430b      	orrs	r3, r1
 800487e:	60d3      	str	r3, [r2, #12]
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	695b      	ldr	r3, [r3, #20]
 8004886:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	699a      	ldr	r2, [r3, #24]
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	430a      	orrs	r2, r1
 8004894:	615a      	str	r2, [r3, #20]
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	4a2c      	ldr	r2, [pc, #176]	; (800494c <UART_SetConfig+0x114>)
 800489c:	4293      	cmp	r3, r2
 800489e:	d103      	bne.n	80048a8 <UART_SetConfig+0x70>
 80048a0:	f7fe fa9c 	bl	8002ddc <HAL_RCC_GetPCLK2Freq>
 80048a4:	60f8      	str	r0, [r7, #12]
 80048a6:	e002      	b.n	80048ae <UART_SetConfig+0x76>
 80048a8:	f7fe fa84 	bl	8002db4 <HAL_RCC_GetPCLK1Freq>
 80048ac:	60f8      	str	r0, [r7, #12]
 80048ae:	68fa      	ldr	r2, [r7, #12]
 80048b0:	4613      	mov	r3, r2
 80048b2:	009b      	lsls	r3, r3, #2
 80048b4:	4413      	add	r3, r2
 80048b6:	009a      	lsls	r2, r3, #2
 80048b8:	441a      	add	r2, r3
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	685b      	ldr	r3, [r3, #4]
 80048be:	009b      	lsls	r3, r3, #2
 80048c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80048c4:	4a22      	ldr	r2, [pc, #136]	; (8004950 <UART_SetConfig+0x118>)
 80048c6:	fba2 2303 	umull	r2, r3, r2, r3
 80048ca:	095b      	lsrs	r3, r3, #5
 80048cc:	0119      	lsls	r1, r3, #4
 80048ce:	68fa      	ldr	r2, [r7, #12]
 80048d0:	4613      	mov	r3, r2
 80048d2:	009b      	lsls	r3, r3, #2
 80048d4:	4413      	add	r3, r2
 80048d6:	009a      	lsls	r2, r3, #2
 80048d8:	441a      	add	r2, r3
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	685b      	ldr	r3, [r3, #4]
 80048de:	009b      	lsls	r3, r3, #2
 80048e0:	fbb2 f2f3 	udiv	r2, r2, r3
 80048e4:	4b1a      	ldr	r3, [pc, #104]	; (8004950 <UART_SetConfig+0x118>)
 80048e6:	fba3 0302 	umull	r0, r3, r3, r2
 80048ea:	095b      	lsrs	r3, r3, #5
 80048ec:	2064      	movs	r0, #100	; 0x64
 80048ee:	fb00 f303 	mul.w	r3, r0, r3
 80048f2:	1ad3      	subs	r3, r2, r3
 80048f4:	011b      	lsls	r3, r3, #4
 80048f6:	3332      	adds	r3, #50	; 0x32
 80048f8:	4a15      	ldr	r2, [pc, #84]	; (8004950 <UART_SetConfig+0x118>)
 80048fa:	fba2 2303 	umull	r2, r3, r2, r3
 80048fe:	095b      	lsrs	r3, r3, #5
 8004900:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004904:	4419      	add	r1, r3
 8004906:	68fa      	ldr	r2, [r7, #12]
 8004908:	4613      	mov	r3, r2
 800490a:	009b      	lsls	r3, r3, #2
 800490c:	4413      	add	r3, r2
 800490e:	009a      	lsls	r2, r3, #2
 8004910:	441a      	add	r2, r3
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	685b      	ldr	r3, [r3, #4]
 8004916:	009b      	lsls	r3, r3, #2
 8004918:	fbb2 f2f3 	udiv	r2, r2, r3
 800491c:	4b0c      	ldr	r3, [pc, #48]	; (8004950 <UART_SetConfig+0x118>)
 800491e:	fba3 0302 	umull	r0, r3, r3, r2
 8004922:	095b      	lsrs	r3, r3, #5
 8004924:	2064      	movs	r0, #100	; 0x64
 8004926:	fb00 f303 	mul.w	r3, r0, r3
 800492a:	1ad3      	subs	r3, r2, r3
 800492c:	011b      	lsls	r3, r3, #4
 800492e:	3332      	adds	r3, #50	; 0x32
 8004930:	4a07      	ldr	r2, [pc, #28]	; (8004950 <UART_SetConfig+0x118>)
 8004932:	fba2 2303 	umull	r2, r3, r2, r3
 8004936:	095b      	lsrs	r3, r3, #5
 8004938:	f003 020f 	and.w	r2, r3, #15
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	440a      	add	r2, r1
 8004942:	609a      	str	r2, [r3, #8]
 8004944:	bf00      	nop
 8004946:	3710      	adds	r7, #16
 8004948:	46bd      	mov	sp, r7
 800494a:	bd80      	pop	{r7, pc}
 800494c:	40013800 	.word	0x40013800
 8004950:	51eb851f 	.word	0x51eb851f

08004954 <__errno>:
 8004954:	4b01      	ldr	r3, [pc, #4]	; (800495c <__errno+0x8>)
 8004956:	6818      	ldr	r0, [r3, #0]
 8004958:	4770      	bx	lr
 800495a:	bf00      	nop
 800495c:	20000050 	.word	0x20000050

08004960 <__libc_init_array>:
 8004960:	b570      	push	{r4, r5, r6, lr}
 8004962:	2600      	movs	r6, #0
 8004964:	4d0c      	ldr	r5, [pc, #48]	; (8004998 <__libc_init_array+0x38>)
 8004966:	4c0d      	ldr	r4, [pc, #52]	; (800499c <__libc_init_array+0x3c>)
 8004968:	1b64      	subs	r4, r4, r5
 800496a:	10a4      	asrs	r4, r4, #2
 800496c:	42a6      	cmp	r6, r4
 800496e:	d109      	bne.n	8004984 <__libc_init_array+0x24>
 8004970:	f000 fc5c 	bl	800522c <_init>
 8004974:	2600      	movs	r6, #0
 8004976:	4d0a      	ldr	r5, [pc, #40]	; (80049a0 <__libc_init_array+0x40>)
 8004978:	4c0a      	ldr	r4, [pc, #40]	; (80049a4 <__libc_init_array+0x44>)
 800497a:	1b64      	subs	r4, r4, r5
 800497c:	10a4      	asrs	r4, r4, #2
 800497e:	42a6      	cmp	r6, r4
 8004980:	d105      	bne.n	800498e <__libc_init_array+0x2e>
 8004982:	bd70      	pop	{r4, r5, r6, pc}
 8004984:	f855 3b04 	ldr.w	r3, [r5], #4
 8004988:	4798      	blx	r3
 800498a:	3601      	adds	r6, #1
 800498c:	e7ee      	b.n	800496c <__libc_init_array+0xc>
 800498e:	f855 3b04 	ldr.w	r3, [r5], #4
 8004992:	4798      	blx	r3
 8004994:	3601      	adds	r6, #1
 8004996:	e7f2      	b.n	800497e <__libc_init_array+0x1e>
 8004998:	080052ec 	.word	0x080052ec
 800499c:	080052ec 	.word	0x080052ec
 80049a0:	080052ec 	.word	0x080052ec
 80049a4:	080052f0 	.word	0x080052f0

080049a8 <memset>:
 80049a8:	4603      	mov	r3, r0
 80049aa:	4402      	add	r2, r0
 80049ac:	4293      	cmp	r3, r2
 80049ae:	d100      	bne.n	80049b2 <memset+0xa>
 80049b0:	4770      	bx	lr
 80049b2:	f803 1b01 	strb.w	r1, [r3], #1
 80049b6:	e7f9      	b.n	80049ac <memset+0x4>

080049b8 <siprintf>:
 80049b8:	b40e      	push	{r1, r2, r3}
 80049ba:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80049be:	b500      	push	{lr}
 80049c0:	b09c      	sub	sp, #112	; 0x70
 80049c2:	ab1d      	add	r3, sp, #116	; 0x74
 80049c4:	9002      	str	r0, [sp, #8]
 80049c6:	9006      	str	r0, [sp, #24]
 80049c8:	9107      	str	r1, [sp, #28]
 80049ca:	9104      	str	r1, [sp, #16]
 80049cc:	4808      	ldr	r0, [pc, #32]	; (80049f0 <siprintf+0x38>)
 80049ce:	4909      	ldr	r1, [pc, #36]	; (80049f4 <siprintf+0x3c>)
 80049d0:	f853 2b04 	ldr.w	r2, [r3], #4
 80049d4:	9105      	str	r1, [sp, #20]
 80049d6:	6800      	ldr	r0, [r0, #0]
 80049d8:	a902      	add	r1, sp, #8
 80049da:	9301      	str	r3, [sp, #4]
 80049dc:	f000 f868 	bl	8004ab0 <_svfiprintf_r>
 80049e0:	2200      	movs	r2, #0
 80049e2:	9b02      	ldr	r3, [sp, #8]
 80049e4:	701a      	strb	r2, [r3, #0]
 80049e6:	b01c      	add	sp, #112	; 0x70
 80049e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80049ec:	b003      	add	sp, #12
 80049ee:	4770      	bx	lr
 80049f0:	20000050 	.word	0x20000050
 80049f4:	ffff0208 	.word	0xffff0208

080049f8 <__ssputs_r>:
 80049f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80049fc:	688e      	ldr	r6, [r1, #8]
 80049fe:	4682      	mov	sl, r0
 8004a00:	429e      	cmp	r6, r3
 8004a02:	460c      	mov	r4, r1
 8004a04:	4690      	mov	r8, r2
 8004a06:	461f      	mov	r7, r3
 8004a08:	d838      	bhi.n	8004a7c <__ssputs_r+0x84>
 8004a0a:	898a      	ldrh	r2, [r1, #12]
 8004a0c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004a10:	d032      	beq.n	8004a78 <__ssputs_r+0x80>
 8004a12:	6825      	ldr	r5, [r4, #0]
 8004a14:	6909      	ldr	r1, [r1, #16]
 8004a16:	3301      	adds	r3, #1
 8004a18:	eba5 0901 	sub.w	r9, r5, r1
 8004a1c:	6965      	ldr	r5, [r4, #20]
 8004a1e:	444b      	add	r3, r9
 8004a20:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004a24:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004a28:	106d      	asrs	r5, r5, #1
 8004a2a:	429d      	cmp	r5, r3
 8004a2c:	bf38      	it	cc
 8004a2e:	461d      	movcc	r5, r3
 8004a30:	0553      	lsls	r3, r2, #21
 8004a32:	d531      	bpl.n	8004a98 <__ssputs_r+0xa0>
 8004a34:	4629      	mov	r1, r5
 8004a36:	f000 fb53 	bl	80050e0 <_malloc_r>
 8004a3a:	4606      	mov	r6, r0
 8004a3c:	b950      	cbnz	r0, 8004a54 <__ssputs_r+0x5c>
 8004a3e:	230c      	movs	r3, #12
 8004a40:	f04f 30ff 	mov.w	r0, #4294967295
 8004a44:	f8ca 3000 	str.w	r3, [sl]
 8004a48:	89a3      	ldrh	r3, [r4, #12]
 8004a4a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004a4e:	81a3      	strh	r3, [r4, #12]
 8004a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a54:	464a      	mov	r2, r9
 8004a56:	6921      	ldr	r1, [r4, #16]
 8004a58:	f000 face 	bl	8004ff8 <memcpy>
 8004a5c:	89a3      	ldrh	r3, [r4, #12]
 8004a5e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004a62:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004a66:	81a3      	strh	r3, [r4, #12]
 8004a68:	6126      	str	r6, [r4, #16]
 8004a6a:	444e      	add	r6, r9
 8004a6c:	6026      	str	r6, [r4, #0]
 8004a6e:	463e      	mov	r6, r7
 8004a70:	6165      	str	r5, [r4, #20]
 8004a72:	eba5 0509 	sub.w	r5, r5, r9
 8004a76:	60a5      	str	r5, [r4, #8]
 8004a78:	42be      	cmp	r6, r7
 8004a7a:	d900      	bls.n	8004a7e <__ssputs_r+0x86>
 8004a7c:	463e      	mov	r6, r7
 8004a7e:	4632      	mov	r2, r6
 8004a80:	4641      	mov	r1, r8
 8004a82:	6820      	ldr	r0, [r4, #0]
 8004a84:	f000 fac6 	bl	8005014 <memmove>
 8004a88:	68a3      	ldr	r3, [r4, #8]
 8004a8a:	6822      	ldr	r2, [r4, #0]
 8004a8c:	1b9b      	subs	r3, r3, r6
 8004a8e:	4432      	add	r2, r6
 8004a90:	2000      	movs	r0, #0
 8004a92:	60a3      	str	r3, [r4, #8]
 8004a94:	6022      	str	r2, [r4, #0]
 8004a96:	e7db      	b.n	8004a50 <__ssputs_r+0x58>
 8004a98:	462a      	mov	r2, r5
 8004a9a:	f000 fb7b 	bl	8005194 <_realloc_r>
 8004a9e:	4606      	mov	r6, r0
 8004aa0:	2800      	cmp	r0, #0
 8004aa2:	d1e1      	bne.n	8004a68 <__ssputs_r+0x70>
 8004aa4:	4650      	mov	r0, sl
 8004aa6:	6921      	ldr	r1, [r4, #16]
 8004aa8:	f000 face 	bl	8005048 <_free_r>
 8004aac:	e7c7      	b.n	8004a3e <__ssputs_r+0x46>
	...

08004ab0 <_svfiprintf_r>:
 8004ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ab4:	4698      	mov	r8, r3
 8004ab6:	898b      	ldrh	r3, [r1, #12]
 8004ab8:	4607      	mov	r7, r0
 8004aba:	061b      	lsls	r3, r3, #24
 8004abc:	460d      	mov	r5, r1
 8004abe:	4614      	mov	r4, r2
 8004ac0:	b09d      	sub	sp, #116	; 0x74
 8004ac2:	d50e      	bpl.n	8004ae2 <_svfiprintf_r+0x32>
 8004ac4:	690b      	ldr	r3, [r1, #16]
 8004ac6:	b963      	cbnz	r3, 8004ae2 <_svfiprintf_r+0x32>
 8004ac8:	2140      	movs	r1, #64	; 0x40
 8004aca:	f000 fb09 	bl	80050e0 <_malloc_r>
 8004ace:	6028      	str	r0, [r5, #0]
 8004ad0:	6128      	str	r0, [r5, #16]
 8004ad2:	b920      	cbnz	r0, 8004ade <_svfiprintf_r+0x2e>
 8004ad4:	230c      	movs	r3, #12
 8004ad6:	603b      	str	r3, [r7, #0]
 8004ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8004adc:	e0d1      	b.n	8004c82 <_svfiprintf_r+0x1d2>
 8004ade:	2340      	movs	r3, #64	; 0x40
 8004ae0:	616b      	str	r3, [r5, #20]
 8004ae2:	2300      	movs	r3, #0
 8004ae4:	9309      	str	r3, [sp, #36]	; 0x24
 8004ae6:	2320      	movs	r3, #32
 8004ae8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004aec:	2330      	movs	r3, #48	; 0x30
 8004aee:	f04f 0901 	mov.w	r9, #1
 8004af2:	f8cd 800c 	str.w	r8, [sp, #12]
 8004af6:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004c9c <_svfiprintf_r+0x1ec>
 8004afa:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004afe:	4623      	mov	r3, r4
 8004b00:	469a      	mov	sl, r3
 8004b02:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004b06:	b10a      	cbz	r2, 8004b0c <_svfiprintf_r+0x5c>
 8004b08:	2a25      	cmp	r2, #37	; 0x25
 8004b0a:	d1f9      	bne.n	8004b00 <_svfiprintf_r+0x50>
 8004b0c:	ebba 0b04 	subs.w	fp, sl, r4
 8004b10:	d00b      	beq.n	8004b2a <_svfiprintf_r+0x7a>
 8004b12:	465b      	mov	r3, fp
 8004b14:	4622      	mov	r2, r4
 8004b16:	4629      	mov	r1, r5
 8004b18:	4638      	mov	r0, r7
 8004b1a:	f7ff ff6d 	bl	80049f8 <__ssputs_r>
 8004b1e:	3001      	adds	r0, #1
 8004b20:	f000 80aa 	beq.w	8004c78 <_svfiprintf_r+0x1c8>
 8004b24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004b26:	445a      	add	r2, fp
 8004b28:	9209      	str	r2, [sp, #36]	; 0x24
 8004b2a:	f89a 3000 	ldrb.w	r3, [sl]
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	f000 80a2 	beq.w	8004c78 <_svfiprintf_r+0x1c8>
 8004b34:	2300      	movs	r3, #0
 8004b36:	f04f 32ff 	mov.w	r2, #4294967295
 8004b3a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004b3e:	f10a 0a01 	add.w	sl, sl, #1
 8004b42:	9304      	str	r3, [sp, #16]
 8004b44:	9307      	str	r3, [sp, #28]
 8004b46:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004b4a:	931a      	str	r3, [sp, #104]	; 0x68
 8004b4c:	4654      	mov	r4, sl
 8004b4e:	2205      	movs	r2, #5
 8004b50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004b54:	4851      	ldr	r0, [pc, #324]	; (8004c9c <_svfiprintf_r+0x1ec>)
 8004b56:	f000 fa41 	bl	8004fdc <memchr>
 8004b5a:	9a04      	ldr	r2, [sp, #16]
 8004b5c:	b9d8      	cbnz	r0, 8004b96 <_svfiprintf_r+0xe6>
 8004b5e:	06d0      	lsls	r0, r2, #27
 8004b60:	bf44      	itt	mi
 8004b62:	2320      	movmi	r3, #32
 8004b64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004b68:	0711      	lsls	r1, r2, #28
 8004b6a:	bf44      	itt	mi
 8004b6c:	232b      	movmi	r3, #43	; 0x2b
 8004b6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004b72:	f89a 3000 	ldrb.w	r3, [sl]
 8004b76:	2b2a      	cmp	r3, #42	; 0x2a
 8004b78:	d015      	beq.n	8004ba6 <_svfiprintf_r+0xf6>
 8004b7a:	4654      	mov	r4, sl
 8004b7c:	2000      	movs	r0, #0
 8004b7e:	f04f 0c0a 	mov.w	ip, #10
 8004b82:	9a07      	ldr	r2, [sp, #28]
 8004b84:	4621      	mov	r1, r4
 8004b86:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004b8a:	3b30      	subs	r3, #48	; 0x30
 8004b8c:	2b09      	cmp	r3, #9
 8004b8e:	d94e      	bls.n	8004c2e <_svfiprintf_r+0x17e>
 8004b90:	b1b0      	cbz	r0, 8004bc0 <_svfiprintf_r+0x110>
 8004b92:	9207      	str	r2, [sp, #28]
 8004b94:	e014      	b.n	8004bc0 <_svfiprintf_r+0x110>
 8004b96:	eba0 0308 	sub.w	r3, r0, r8
 8004b9a:	fa09 f303 	lsl.w	r3, r9, r3
 8004b9e:	4313      	orrs	r3, r2
 8004ba0:	46a2      	mov	sl, r4
 8004ba2:	9304      	str	r3, [sp, #16]
 8004ba4:	e7d2      	b.n	8004b4c <_svfiprintf_r+0x9c>
 8004ba6:	9b03      	ldr	r3, [sp, #12]
 8004ba8:	1d19      	adds	r1, r3, #4
 8004baa:	681b      	ldr	r3, [r3, #0]
 8004bac:	9103      	str	r1, [sp, #12]
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	bfbb      	ittet	lt
 8004bb2:	425b      	neglt	r3, r3
 8004bb4:	f042 0202 	orrlt.w	r2, r2, #2
 8004bb8:	9307      	strge	r3, [sp, #28]
 8004bba:	9307      	strlt	r3, [sp, #28]
 8004bbc:	bfb8      	it	lt
 8004bbe:	9204      	strlt	r2, [sp, #16]
 8004bc0:	7823      	ldrb	r3, [r4, #0]
 8004bc2:	2b2e      	cmp	r3, #46	; 0x2e
 8004bc4:	d10c      	bne.n	8004be0 <_svfiprintf_r+0x130>
 8004bc6:	7863      	ldrb	r3, [r4, #1]
 8004bc8:	2b2a      	cmp	r3, #42	; 0x2a
 8004bca:	d135      	bne.n	8004c38 <_svfiprintf_r+0x188>
 8004bcc:	9b03      	ldr	r3, [sp, #12]
 8004bce:	3402      	adds	r4, #2
 8004bd0:	1d1a      	adds	r2, r3, #4
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	9203      	str	r2, [sp, #12]
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	bfb8      	it	lt
 8004bda:	f04f 33ff 	movlt.w	r3, #4294967295
 8004bde:	9305      	str	r3, [sp, #20]
 8004be0:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004cac <_svfiprintf_r+0x1fc>
 8004be4:	2203      	movs	r2, #3
 8004be6:	4650      	mov	r0, sl
 8004be8:	7821      	ldrb	r1, [r4, #0]
 8004bea:	f000 f9f7 	bl	8004fdc <memchr>
 8004bee:	b140      	cbz	r0, 8004c02 <_svfiprintf_r+0x152>
 8004bf0:	2340      	movs	r3, #64	; 0x40
 8004bf2:	eba0 000a 	sub.w	r0, r0, sl
 8004bf6:	fa03 f000 	lsl.w	r0, r3, r0
 8004bfa:	9b04      	ldr	r3, [sp, #16]
 8004bfc:	3401      	adds	r4, #1
 8004bfe:	4303      	orrs	r3, r0
 8004c00:	9304      	str	r3, [sp, #16]
 8004c02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004c06:	2206      	movs	r2, #6
 8004c08:	4825      	ldr	r0, [pc, #148]	; (8004ca0 <_svfiprintf_r+0x1f0>)
 8004c0a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004c0e:	f000 f9e5 	bl	8004fdc <memchr>
 8004c12:	2800      	cmp	r0, #0
 8004c14:	d038      	beq.n	8004c88 <_svfiprintf_r+0x1d8>
 8004c16:	4b23      	ldr	r3, [pc, #140]	; (8004ca4 <_svfiprintf_r+0x1f4>)
 8004c18:	bb1b      	cbnz	r3, 8004c62 <_svfiprintf_r+0x1b2>
 8004c1a:	9b03      	ldr	r3, [sp, #12]
 8004c1c:	3307      	adds	r3, #7
 8004c1e:	f023 0307 	bic.w	r3, r3, #7
 8004c22:	3308      	adds	r3, #8
 8004c24:	9303      	str	r3, [sp, #12]
 8004c26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c28:	4433      	add	r3, r6
 8004c2a:	9309      	str	r3, [sp, #36]	; 0x24
 8004c2c:	e767      	b.n	8004afe <_svfiprintf_r+0x4e>
 8004c2e:	460c      	mov	r4, r1
 8004c30:	2001      	movs	r0, #1
 8004c32:	fb0c 3202 	mla	r2, ip, r2, r3
 8004c36:	e7a5      	b.n	8004b84 <_svfiprintf_r+0xd4>
 8004c38:	2300      	movs	r3, #0
 8004c3a:	f04f 0c0a 	mov.w	ip, #10
 8004c3e:	4619      	mov	r1, r3
 8004c40:	3401      	adds	r4, #1
 8004c42:	9305      	str	r3, [sp, #20]
 8004c44:	4620      	mov	r0, r4
 8004c46:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004c4a:	3a30      	subs	r2, #48	; 0x30
 8004c4c:	2a09      	cmp	r2, #9
 8004c4e:	d903      	bls.n	8004c58 <_svfiprintf_r+0x1a8>
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	d0c5      	beq.n	8004be0 <_svfiprintf_r+0x130>
 8004c54:	9105      	str	r1, [sp, #20]
 8004c56:	e7c3      	b.n	8004be0 <_svfiprintf_r+0x130>
 8004c58:	4604      	mov	r4, r0
 8004c5a:	2301      	movs	r3, #1
 8004c5c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004c60:	e7f0      	b.n	8004c44 <_svfiprintf_r+0x194>
 8004c62:	ab03      	add	r3, sp, #12
 8004c64:	9300      	str	r3, [sp, #0]
 8004c66:	462a      	mov	r2, r5
 8004c68:	4638      	mov	r0, r7
 8004c6a:	4b0f      	ldr	r3, [pc, #60]	; (8004ca8 <_svfiprintf_r+0x1f8>)
 8004c6c:	a904      	add	r1, sp, #16
 8004c6e:	f3af 8000 	nop.w
 8004c72:	1c42      	adds	r2, r0, #1
 8004c74:	4606      	mov	r6, r0
 8004c76:	d1d6      	bne.n	8004c26 <_svfiprintf_r+0x176>
 8004c78:	89ab      	ldrh	r3, [r5, #12]
 8004c7a:	065b      	lsls	r3, r3, #25
 8004c7c:	f53f af2c 	bmi.w	8004ad8 <_svfiprintf_r+0x28>
 8004c80:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c82:	b01d      	add	sp, #116	; 0x74
 8004c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c88:	ab03      	add	r3, sp, #12
 8004c8a:	9300      	str	r3, [sp, #0]
 8004c8c:	462a      	mov	r2, r5
 8004c8e:	4638      	mov	r0, r7
 8004c90:	4b05      	ldr	r3, [pc, #20]	; (8004ca8 <_svfiprintf_r+0x1f8>)
 8004c92:	a904      	add	r1, sp, #16
 8004c94:	f000 f87c 	bl	8004d90 <_printf_i>
 8004c98:	e7eb      	b.n	8004c72 <_svfiprintf_r+0x1c2>
 8004c9a:	bf00      	nop
 8004c9c:	080052b6 	.word	0x080052b6
 8004ca0:	080052c0 	.word	0x080052c0
 8004ca4:	00000000 	.word	0x00000000
 8004ca8:	080049f9 	.word	0x080049f9
 8004cac:	080052bc 	.word	0x080052bc

08004cb0 <_printf_common>:
 8004cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cb4:	4616      	mov	r6, r2
 8004cb6:	4699      	mov	r9, r3
 8004cb8:	688a      	ldr	r2, [r1, #8]
 8004cba:	690b      	ldr	r3, [r1, #16]
 8004cbc:	4607      	mov	r7, r0
 8004cbe:	4293      	cmp	r3, r2
 8004cc0:	bfb8      	it	lt
 8004cc2:	4613      	movlt	r3, r2
 8004cc4:	6033      	str	r3, [r6, #0]
 8004cc6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004cca:	460c      	mov	r4, r1
 8004ccc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004cd0:	b10a      	cbz	r2, 8004cd6 <_printf_common+0x26>
 8004cd2:	3301      	adds	r3, #1
 8004cd4:	6033      	str	r3, [r6, #0]
 8004cd6:	6823      	ldr	r3, [r4, #0]
 8004cd8:	0699      	lsls	r1, r3, #26
 8004cda:	bf42      	ittt	mi
 8004cdc:	6833      	ldrmi	r3, [r6, #0]
 8004cde:	3302      	addmi	r3, #2
 8004ce0:	6033      	strmi	r3, [r6, #0]
 8004ce2:	6825      	ldr	r5, [r4, #0]
 8004ce4:	f015 0506 	ands.w	r5, r5, #6
 8004ce8:	d106      	bne.n	8004cf8 <_printf_common+0x48>
 8004cea:	f104 0a19 	add.w	sl, r4, #25
 8004cee:	68e3      	ldr	r3, [r4, #12]
 8004cf0:	6832      	ldr	r2, [r6, #0]
 8004cf2:	1a9b      	subs	r3, r3, r2
 8004cf4:	42ab      	cmp	r3, r5
 8004cf6:	dc28      	bgt.n	8004d4a <_printf_common+0x9a>
 8004cf8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004cfc:	1e13      	subs	r3, r2, #0
 8004cfe:	6822      	ldr	r2, [r4, #0]
 8004d00:	bf18      	it	ne
 8004d02:	2301      	movne	r3, #1
 8004d04:	0692      	lsls	r2, r2, #26
 8004d06:	d42d      	bmi.n	8004d64 <_printf_common+0xb4>
 8004d08:	4649      	mov	r1, r9
 8004d0a:	4638      	mov	r0, r7
 8004d0c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004d10:	47c0      	blx	r8
 8004d12:	3001      	adds	r0, #1
 8004d14:	d020      	beq.n	8004d58 <_printf_common+0xa8>
 8004d16:	6823      	ldr	r3, [r4, #0]
 8004d18:	68e5      	ldr	r5, [r4, #12]
 8004d1a:	f003 0306 	and.w	r3, r3, #6
 8004d1e:	2b04      	cmp	r3, #4
 8004d20:	bf18      	it	ne
 8004d22:	2500      	movne	r5, #0
 8004d24:	6832      	ldr	r2, [r6, #0]
 8004d26:	f04f 0600 	mov.w	r6, #0
 8004d2a:	68a3      	ldr	r3, [r4, #8]
 8004d2c:	bf08      	it	eq
 8004d2e:	1aad      	subeq	r5, r5, r2
 8004d30:	6922      	ldr	r2, [r4, #16]
 8004d32:	bf08      	it	eq
 8004d34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004d38:	4293      	cmp	r3, r2
 8004d3a:	bfc4      	itt	gt
 8004d3c:	1a9b      	subgt	r3, r3, r2
 8004d3e:	18ed      	addgt	r5, r5, r3
 8004d40:	341a      	adds	r4, #26
 8004d42:	42b5      	cmp	r5, r6
 8004d44:	d11a      	bne.n	8004d7c <_printf_common+0xcc>
 8004d46:	2000      	movs	r0, #0
 8004d48:	e008      	b.n	8004d5c <_printf_common+0xac>
 8004d4a:	2301      	movs	r3, #1
 8004d4c:	4652      	mov	r2, sl
 8004d4e:	4649      	mov	r1, r9
 8004d50:	4638      	mov	r0, r7
 8004d52:	47c0      	blx	r8
 8004d54:	3001      	adds	r0, #1
 8004d56:	d103      	bne.n	8004d60 <_printf_common+0xb0>
 8004d58:	f04f 30ff 	mov.w	r0, #4294967295
 8004d5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d60:	3501      	adds	r5, #1
 8004d62:	e7c4      	b.n	8004cee <_printf_common+0x3e>
 8004d64:	2030      	movs	r0, #48	; 0x30
 8004d66:	18e1      	adds	r1, r4, r3
 8004d68:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004d6c:	1c5a      	adds	r2, r3, #1
 8004d6e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004d72:	4422      	add	r2, r4
 8004d74:	3302      	adds	r3, #2
 8004d76:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004d7a:	e7c5      	b.n	8004d08 <_printf_common+0x58>
 8004d7c:	2301      	movs	r3, #1
 8004d7e:	4622      	mov	r2, r4
 8004d80:	4649      	mov	r1, r9
 8004d82:	4638      	mov	r0, r7
 8004d84:	47c0      	blx	r8
 8004d86:	3001      	adds	r0, #1
 8004d88:	d0e6      	beq.n	8004d58 <_printf_common+0xa8>
 8004d8a:	3601      	adds	r6, #1
 8004d8c:	e7d9      	b.n	8004d42 <_printf_common+0x92>
	...

08004d90 <_printf_i>:
 8004d90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004d94:	460c      	mov	r4, r1
 8004d96:	7e27      	ldrb	r7, [r4, #24]
 8004d98:	4691      	mov	r9, r2
 8004d9a:	2f78      	cmp	r7, #120	; 0x78
 8004d9c:	4680      	mov	r8, r0
 8004d9e:	469a      	mov	sl, r3
 8004da0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004da2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004da6:	d807      	bhi.n	8004db8 <_printf_i+0x28>
 8004da8:	2f62      	cmp	r7, #98	; 0x62
 8004daa:	d80a      	bhi.n	8004dc2 <_printf_i+0x32>
 8004dac:	2f00      	cmp	r7, #0
 8004dae:	f000 80d9 	beq.w	8004f64 <_printf_i+0x1d4>
 8004db2:	2f58      	cmp	r7, #88	; 0x58
 8004db4:	f000 80a4 	beq.w	8004f00 <_printf_i+0x170>
 8004db8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004dbc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004dc0:	e03a      	b.n	8004e38 <_printf_i+0xa8>
 8004dc2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004dc6:	2b15      	cmp	r3, #21
 8004dc8:	d8f6      	bhi.n	8004db8 <_printf_i+0x28>
 8004dca:	a001      	add	r0, pc, #4	; (adr r0, 8004dd0 <_printf_i+0x40>)
 8004dcc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004dd0:	08004e29 	.word	0x08004e29
 8004dd4:	08004e3d 	.word	0x08004e3d
 8004dd8:	08004db9 	.word	0x08004db9
 8004ddc:	08004db9 	.word	0x08004db9
 8004de0:	08004db9 	.word	0x08004db9
 8004de4:	08004db9 	.word	0x08004db9
 8004de8:	08004e3d 	.word	0x08004e3d
 8004dec:	08004db9 	.word	0x08004db9
 8004df0:	08004db9 	.word	0x08004db9
 8004df4:	08004db9 	.word	0x08004db9
 8004df8:	08004db9 	.word	0x08004db9
 8004dfc:	08004f4b 	.word	0x08004f4b
 8004e00:	08004e6d 	.word	0x08004e6d
 8004e04:	08004f2d 	.word	0x08004f2d
 8004e08:	08004db9 	.word	0x08004db9
 8004e0c:	08004db9 	.word	0x08004db9
 8004e10:	08004f6d 	.word	0x08004f6d
 8004e14:	08004db9 	.word	0x08004db9
 8004e18:	08004e6d 	.word	0x08004e6d
 8004e1c:	08004db9 	.word	0x08004db9
 8004e20:	08004db9 	.word	0x08004db9
 8004e24:	08004f35 	.word	0x08004f35
 8004e28:	680b      	ldr	r3, [r1, #0]
 8004e2a:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004e2e:	1d1a      	adds	r2, r3, #4
 8004e30:	681b      	ldr	r3, [r3, #0]
 8004e32:	600a      	str	r2, [r1, #0]
 8004e34:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004e38:	2301      	movs	r3, #1
 8004e3a:	e0a4      	b.n	8004f86 <_printf_i+0x1f6>
 8004e3c:	6825      	ldr	r5, [r4, #0]
 8004e3e:	6808      	ldr	r0, [r1, #0]
 8004e40:	062e      	lsls	r6, r5, #24
 8004e42:	f100 0304 	add.w	r3, r0, #4
 8004e46:	d50a      	bpl.n	8004e5e <_printf_i+0xce>
 8004e48:	6805      	ldr	r5, [r0, #0]
 8004e4a:	600b      	str	r3, [r1, #0]
 8004e4c:	2d00      	cmp	r5, #0
 8004e4e:	da03      	bge.n	8004e58 <_printf_i+0xc8>
 8004e50:	232d      	movs	r3, #45	; 0x2d
 8004e52:	426d      	negs	r5, r5
 8004e54:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004e58:	230a      	movs	r3, #10
 8004e5a:	485e      	ldr	r0, [pc, #376]	; (8004fd4 <_printf_i+0x244>)
 8004e5c:	e019      	b.n	8004e92 <_printf_i+0x102>
 8004e5e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8004e62:	6805      	ldr	r5, [r0, #0]
 8004e64:	600b      	str	r3, [r1, #0]
 8004e66:	bf18      	it	ne
 8004e68:	b22d      	sxthne	r5, r5
 8004e6a:	e7ef      	b.n	8004e4c <_printf_i+0xbc>
 8004e6c:	680b      	ldr	r3, [r1, #0]
 8004e6e:	6825      	ldr	r5, [r4, #0]
 8004e70:	1d18      	adds	r0, r3, #4
 8004e72:	6008      	str	r0, [r1, #0]
 8004e74:	0628      	lsls	r0, r5, #24
 8004e76:	d501      	bpl.n	8004e7c <_printf_i+0xec>
 8004e78:	681d      	ldr	r5, [r3, #0]
 8004e7a:	e002      	b.n	8004e82 <_printf_i+0xf2>
 8004e7c:	0669      	lsls	r1, r5, #25
 8004e7e:	d5fb      	bpl.n	8004e78 <_printf_i+0xe8>
 8004e80:	881d      	ldrh	r5, [r3, #0]
 8004e82:	2f6f      	cmp	r7, #111	; 0x6f
 8004e84:	bf0c      	ite	eq
 8004e86:	2308      	moveq	r3, #8
 8004e88:	230a      	movne	r3, #10
 8004e8a:	4852      	ldr	r0, [pc, #328]	; (8004fd4 <_printf_i+0x244>)
 8004e8c:	2100      	movs	r1, #0
 8004e8e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004e92:	6866      	ldr	r6, [r4, #4]
 8004e94:	2e00      	cmp	r6, #0
 8004e96:	bfa8      	it	ge
 8004e98:	6821      	ldrge	r1, [r4, #0]
 8004e9a:	60a6      	str	r6, [r4, #8]
 8004e9c:	bfa4      	itt	ge
 8004e9e:	f021 0104 	bicge.w	r1, r1, #4
 8004ea2:	6021      	strge	r1, [r4, #0]
 8004ea4:	b90d      	cbnz	r5, 8004eaa <_printf_i+0x11a>
 8004ea6:	2e00      	cmp	r6, #0
 8004ea8:	d04d      	beq.n	8004f46 <_printf_i+0x1b6>
 8004eaa:	4616      	mov	r6, r2
 8004eac:	fbb5 f1f3 	udiv	r1, r5, r3
 8004eb0:	fb03 5711 	mls	r7, r3, r1, r5
 8004eb4:	5dc7      	ldrb	r7, [r0, r7]
 8004eb6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004eba:	462f      	mov	r7, r5
 8004ebc:	42bb      	cmp	r3, r7
 8004ebe:	460d      	mov	r5, r1
 8004ec0:	d9f4      	bls.n	8004eac <_printf_i+0x11c>
 8004ec2:	2b08      	cmp	r3, #8
 8004ec4:	d10b      	bne.n	8004ede <_printf_i+0x14e>
 8004ec6:	6823      	ldr	r3, [r4, #0]
 8004ec8:	07df      	lsls	r7, r3, #31
 8004eca:	d508      	bpl.n	8004ede <_printf_i+0x14e>
 8004ecc:	6923      	ldr	r3, [r4, #16]
 8004ece:	6861      	ldr	r1, [r4, #4]
 8004ed0:	4299      	cmp	r1, r3
 8004ed2:	bfde      	ittt	le
 8004ed4:	2330      	movle	r3, #48	; 0x30
 8004ed6:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004eda:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004ede:	1b92      	subs	r2, r2, r6
 8004ee0:	6122      	str	r2, [r4, #16]
 8004ee2:	464b      	mov	r3, r9
 8004ee4:	4621      	mov	r1, r4
 8004ee6:	4640      	mov	r0, r8
 8004ee8:	f8cd a000 	str.w	sl, [sp]
 8004eec:	aa03      	add	r2, sp, #12
 8004eee:	f7ff fedf 	bl	8004cb0 <_printf_common>
 8004ef2:	3001      	adds	r0, #1
 8004ef4:	d14c      	bne.n	8004f90 <_printf_i+0x200>
 8004ef6:	f04f 30ff 	mov.w	r0, #4294967295
 8004efa:	b004      	add	sp, #16
 8004efc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f00:	4834      	ldr	r0, [pc, #208]	; (8004fd4 <_printf_i+0x244>)
 8004f02:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004f06:	680e      	ldr	r6, [r1, #0]
 8004f08:	6823      	ldr	r3, [r4, #0]
 8004f0a:	f856 5b04 	ldr.w	r5, [r6], #4
 8004f0e:	061f      	lsls	r7, r3, #24
 8004f10:	600e      	str	r6, [r1, #0]
 8004f12:	d514      	bpl.n	8004f3e <_printf_i+0x1ae>
 8004f14:	07d9      	lsls	r1, r3, #31
 8004f16:	bf44      	itt	mi
 8004f18:	f043 0320 	orrmi.w	r3, r3, #32
 8004f1c:	6023      	strmi	r3, [r4, #0]
 8004f1e:	b91d      	cbnz	r5, 8004f28 <_printf_i+0x198>
 8004f20:	6823      	ldr	r3, [r4, #0]
 8004f22:	f023 0320 	bic.w	r3, r3, #32
 8004f26:	6023      	str	r3, [r4, #0]
 8004f28:	2310      	movs	r3, #16
 8004f2a:	e7af      	b.n	8004e8c <_printf_i+0xfc>
 8004f2c:	6823      	ldr	r3, [r4, #0]
 8004f2e:	f043 0320 	orr.w	r3, r3, #32
 8004f32:	6023      	str	r3, [r4, #0]
 8004f34:	2378      	movs	r3, #120	; 0x78
 8004f36:	4828      	ldr	r0, [pc, #160]	; (8004fd8 <_printf_i+0x248>)
 8004f38:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004f3c:	e7e3      	b.n	8004f06 <_printf_i+0x176>
 8004f3e:	065e      	lsls	r6, r3, #25
 8004f40:	bf48      	it	mi
 8004f42:	b2ad      	uxthmi	r5, r5
 8004f44:	e7e6      	b.n	8004f14 <_printf_i+0x184>
 8004f46:	4616      	mov	r6, r2
 8004f48:	e7bb      	b.n	8004ec2 <_printf_i+0x132>
 8004f4a:	680b      	ldr	r3, [r1, #0]
 8004f4c:	6826      	ldr	r6, [r4, #0]
 8004f4e:	1d1d      	adds	r5, r3, #4
 8004f50:	6960      	ldr	r0, [r4, #20]
 8004f52:	600d      	str	r5, [r1, #0]
 8004f54:	0635      	lsls	r5, r6, #24
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	d501      	bpl.n	8004f5e <_printf_i+0x1ce>
 8004f5a:	6018      	str	r0, [r3, #0]
 8004f5c:	e002      	b.n	8004f64 <_printf_i+0x1d4>
 8004f5e:	0671      	lsls	r1, r6, #25
 8004f60:	d5fb      	bpl.n	8004f5a <_printf_i+0x1ca>
 8004f62:	8018      	strh	r0, [r3, #0]
 8004f64:	2300      	movs	r3, #0
 8004f66:	4616      	mov	r6, r2
 8004f68:	6123      	str	r3, [r4, #16]
 8004f6a:	e7ba      	b.n	8004ee2 <_printf_i+0x152>
 8004f6c:	680b      	ldr	r3, [r1, #0]
 8004f6e:	1d1a      	adds	r2, r3, #4
 8004f70:	600a      	str	r2, [r1, #0]
 8004f72:	681e      	ldr	r6, [r3, #0]
 8004f74:	2100      	movs	r1, #0
 8004f76:	4630      	mov	r0, r6
 8004f78:	6862      	ldr	r2, [r4, #4]
 8004f7a:	f000 f82f 	bl	8004fdc <memchr>
 8004f7e:	b108      	cbz	r0, 8004f84 <_printf_i+0x1f4>
 8004f80:	1b80      	subs	r0, r0, r6
 8004f82:	6060      	str	r0, [r4, #4]
 8004f84:	6863      	ldr	r3, [r4, #4]
 8004f86:	6123      	str	r3, [r4, #16]
 8004f88:	2300      	movs	r3, #0
 8004f8a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004f8e:	e7a8      	b.n	8004ee2 <_printf_i+0x152>
 8004f90:	4632      	mov	r2, r6
 8004f92:	4649      	mov	r1, r9
 8004f94:	4640      	mov	r0, r8
 8004f96:	6923      	ldr	r3, [r4, #16]
 8004f98:	47d0      	blx	sl
 8004f9a:	3001      	adds	r0, #1
 8004f9c:	d0ab      	beq.n	8004ef6 <_printf_i+0x166>
 8004f9e:	6823      	ldr	r3, [r4, #0]
 8004fa0:	079b      	lsls	r3, r3, #30
 8004fa2:	d413      	bmi.n	8004fcc <_printf_i+0x23c>
 8004fa4:	68e0      	ldr	r0, [r4, #12]
 8004fa6:	9b03      	ldr	r3, [sp, #12]
 8004fa8:	4298      	cmp	r0, r3
 8004faa:	bfb8      	it	lt
 8004fac:	4618      	movlt	r0, r3
 8004fae:	e7a4      	b.n	8004efa <_printf_i+0x16a>
 8004fb0:	2301      	movs	r3, #1
 8004fb2:	4632      	mov	r2, r6
 8004fb4:	4649      	mov	r1, r9
 8004fb6:	4640      	mov	r0, r8
 8004fb8:	47d0      	blx	sl
 8004fba:	3001      	adds	r0, #1
 8004fbc:	d09b      	beq.n	8004ef6 <_printf_i+0x166>
 8004fbe:	3501      	adds	r5, #1
 8004fc0:	68e3      	ldr	r3, [r4, #12]
 8004fc2:	9903      	ldr	r1, [sp, #12]
 8004fc4:	1a5b      	subs	r3, r3, r1
 8004fc6:	42ab      	cmp	r3, r5
 8004fc8:	dcf2      	bgt.n	8004fb0 <_printf_i+0x220>
 8004fca:	e7eb      	b.n	8004fa4 <_printf_i+0x214>
 8004fcc:	2500      	movs	r5, #0
 8004fce:	f104 0619 	add.w	r6, r4, #25
 8004fd2:	e7f5      	b.n	8004fc0 <_printf_i+0x230>
 8004fd4:	080052c7 	.word	0x080052c7
 8004fd8:	080052d8 	.word	0x080052d8

08004fdc <memchr>:
 8004fdc:	4603      	mov	r3, r0
 8004fde:	b510      	push	{r4, lr}
 8004fe0:	b2c9      	uxtb	r1, r1
 8004fe2:	4402      	add	r2, r0
 8004fe4:	4293      	cmp	r3, r2
 8004fe6:	4618      	mov	r0, r3
 8004fe8:	d101      	bne.n	8004fee <memchr+0x12>
 8004fea:	2000      	movs	r0, #0
 8004fec:	e003      	b.n	8004ff6 <memchr+0x1a>
 8004fee:	7804      	ldrb	r4, [r0, #0]
 8004ff0:	3301      	adds	r3, #1
 8004ff2:	428c      	cmp	r4, r1
 8004ff4:	d1f6      	bne.n	8004fe4 <memchr+0x8>
 8004ff6:	bd10      	pop	{r4, pc}

08004ff8 <memcpy>:
 8004ff8:	440a      	add	r2, r1
 8004ffa:	4291      	cmp	r1, r2
 8004ffc:	f100 33ff 	add.w	r3, r0, #4294967295
 8005000:	d100      	bne.n	8005004 <memcpy+0xc>
 8005002:	4770      	bx	lr
 8005004:	b510      	push	{r4, lr}
 8005006:	f811 4b01 	ldrb.w	r4, [r1], #1
 800500a:	4291      	cmp	r1, r2
 800500c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005010:	d1f9      	bne.n	8005006 <memcpy+0xe>
 8005012:	bd10      	pop	{r4, pc}

08005014 <memmove>:
 8005014:	4288      	cmp	r0, r1
 8005016:	b510      	push	{r4, lr}
 8005018:	eb01 0402 	add.w	r4, r1, r2
 800501c:	d902      	bls.n	8005024 <memmove+0x10>
 800501e:	4284      	cmp	r4, r0
 8005020:	4623      	mov	r3, r4
 8005022:	d807      	bhi.n	8005034 <memmove+0x20>
 8005024:	1e43      	subs	r3, r0, #1
 8005026:	42a1      	cmp	r1, r4
 8005028:	d008      	beq.n	800503c <memmove+0x28>
 800502a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800502e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005032:	e7f8      	b.n	8005026 <memmove+0x12>
 8005034:	4601      	mov	r1, r0
 8005036:	4402      	add	r2, r0
 8005038:	428a      	cmp	r2, r1
 800503a:	d100      	bne.n	800503e <memmove+0x2a>
 800503c:	bd10      	pop	{r4, pc}
 800503e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005042:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005046:	e7f7      	b.n	8005038 <memmove+0x24>

08005048 <_free_r>:
 8005048:	b538      	push	{r3, r4, r5, lr}
 800504a:	4605      	mov	r5, r0
 800504c:	2900      	cmp	r1, #0
 800504e:	d043      	beq.n	80050d8 <_free_r+0x90>
 8005050:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005054:	1f0c      	subs	r4, r1, #4
 8005056:	2b00      	cmp	r3, #0
 8005058:	bfb8      	it	lt
 800505a:	18e4      	addlt	r4, r4, r3
 800505c:	f000 f8d0 	bl	8005200 <__malloc_lock>
 8005060:	4a1e      	ldr	r2, [pc, #120]	; (80050dc <_free_r+0x94>)
 8005062:	6813      	ldr	r3, [r2, #0]
 8005064:	4610      	mov	r0, r2
 8005066:	b933      	cbnz	r3, 8005076 <_free_r+0x2e>
 8005068:	6063      	str	r3, [r4, #4]
 800506a:	6014      	str	r4, [r2, #0]
 800506c:	4628      	mov	r0, r5
 800506e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005072:	f000 b8cb 	b.w	800520c <__malloc_unlock>
 8005076:	42a3      	cmp	r3, r4
 8005078:	d90a      	bls.n	8005090 <_free_r+0x48>
 800507a:	6821      	ldr	r1, [r4, #0]
 800507c:	1862      	adds	r2, r4, r1
 800507e:	4293      	cmp	r3, r2
 8005080:	bf01      	itttt	eq
 8005082:	681a      	ldreq	r2, [r3, #0]
 8005084:	685b      	ldreq	r3, [r3, #4]
 8005086:	1852      	addeq	r2, r2, r1
 8005088:	6022      	streq	r2, [r4, #0]
 800508a:	6063      	str	r3, [r4, #4]
 800508c:	6004      	str	r4, [r0, #0]
 800508e:	e7ed      	b.n	800506c <_free_r+0x24>
 8005090:	461a      	mov	r2, r3
 8005092:	685b      	ldr	r3, [r3, #4]
 8005094:	b10b      	cbz	r3, 800509a <_free_r+0x52>
 8005096:	42a3      	cmp	r3, r4
 8005098:	d9fa      	bls.n	8005090 <_free_r+0x48>
 800509a:	6811      	ldr	r1, [r2, #0]
 800509c:	1850      	adds	r0, r2, r1
 800509e:	42a0      	cmp	r0, r4
 80050a0:	d10b      	bne.n	80050ba <_free_r+0x72>
 80050a2:	6820      	ldr	r0, [r4, #0]
 80050a4:	4401      	add	r1, r0
 80050a6:	1850      	adds	r0, r2, r1
 80050a8:	4283      	cmp	r3, r0
 80050aa:	6011      	str	r1, [r2, #0]
 80050ac:	d1de      	bne.n	800506c <_free_r+0x24>
 80050ae:	6818      	ldr	r0, [r3, #0]
 80050b0:	685b      	ldr	r3, [r3, #4]
 80050b2:	4401      	add	r1, r0
 80050b4:	6011      	str	r1, [r2, #0]
 80050b6:	6053      	str	r3, [r2, #4]
 80050b8:	e7d8      	b.n	800506c <_free_r+0x24>
 80050ba:	d902      	bls.n	80050c2 <_free_r+0x7a>
 80050bc:	230c      	movs	r3, #12
 80050be:	602b      	str	r3, [r5, #0]
 80050c0:	e7d4      	b.n	800506c <_free_r+0x24>
 80050c2:	6820      	ldr	r0, [r4, #0]
 80050c4:	1821      	adds	r1, r4, r0
 80050c6:	428b      	cmp	r3, r1
 80050c8:	bf01      	itttt	eq
 80050ca:	6819      	ldreq	r1, [r3, #0]
 80050cc:	685b      	ldreq	r3, [r3, #4]
 80050ce:	1809      	addeq	r1, r1, r0
 80050d0:	6021      	streq	r1, [r4, #0]
 80050d2:	6063      	str	r3, [r4, #4]
 80050d4:	6054      	str	r4, [r2, #4]
 80050d6:	e7c9      	b.n	800506c <_free_r+0x24>
 80050d8:	bd38      	pop	{r3, r4, r5, pc}
 80050da:	bf00      	nop
 80050dc:	20000228 	.word	0x20000228

080050e0 <_malloc_r>:
 80050e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050e2:	1ccd      	adds	r5, r1, #3
 80050e4:	f025 0503 	bic.w	r5, r5, #3
 80050e8:	3508      	adds	r5, #8
 80050ea:	2d0c      	cmp	r5, #12
 80050ec:	bf38      	it	cc
 80050ee:	250c      	movcc	r5, #12
 80050f0:	2d00      	cmp	r5, #0
 80050f2:	4606      	mov	r6, r0
 80050f4:	db01      	blt.n	80050fa <_malloc_r+0x1a>
 80050f6:	42a9      	cmp	r1, r5
 80050f8:	d903      	bls.n	8005102 <_malloc_r+0x22>
 80050fa:	230c      	movs	r3, #12
 80050fc:	6033      	str	r3, [r6, #0]
 80050fe:	2000      	movs	r0, #0
 8005100:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005102:	f000 f87d 	bl	8005200 <__malloc_lock>
 8005106:	4921      	ldr	r1, [pc, #132]	; (800518c <_malloc_r+0xac>)
 8005108:	680a      	ldr	r2, [r1, #0]
 800510a:	4614      	mov	r4, r2
 800510c:	b99c      	cbnz	r4, 8005136 <_malloc_r+0x56>
 800510e:	4f20      	ldr	r7, [pc, #128]	; (8005190 <_malloc_r+0xb0>)
 8005110:	683b      	ldr	r3, [r7, #0]
 8005112:	b923      	cbnz	r3, 800511e <_malloc_r+0x3e>
 8005114:	4621      	mov	r1, r4
 8005116:	4630      	mov	r0, r6
 8005118:	f000 f862 	bl	80051e0 <_sbrk_r>
 800511c:	6038      	str	r0, [r7, #0]
 800511e:	4629      	mov	r1, r5
 8005120:	4630      	mov	r0, r6
 8005122:	f000 f85d 	bl	80051e0 <_sbrk_r>
 8005126:	1c43      	adds	r3, r0, #1
 8005128:	d123      	bne.n	8005172 <_malloc_r+0x92>
 800512a:	230c      	movs	r3, #12
 800512c:	4630      	mov	r0, r6
 800512e:	6033      	str	r3, [r6, #0]
 8005130:	f000 f86c 	bl	800520c <__malloc_unlock>
 8005134:	e7e3      	b.n	80050fe <_malloc_r+0x1e>
 8005136:	6823      	ldr	r3, [r4, #0]
 8005138:	1b5b      	subs	r3, r3, r5
 800513a:	d417      	bmi.n	800516c <_malloc_r+0x8c>
 800513c:	2b0b      	cmp	r3, #11
 800513e:	d903      	bls.n	8005148 <_malloc_r+0x68>
 8005140:	6023      	str	r3, [r4, #0]
 8005142:	441c      	add	r4, r3
 8005144:	6025      	str	r5, [r4, #0]
 8005146:	e004      	b.n	8005152 <_malloc_r+0x72>
 8005148:	6863      	ldr	r3, [r4, #4]
 800514a:	42a2      	cmp	r2, r4
 800514c:	bf0c      	ite	eq
 800514e:	600b      	streq	r3, [r1, #0]
 8005150:	6053      	strne	r3, [r2, #4]
 8005152:	4630      	mov	r0, r6
 8005154:	f000 f85a 	bl	800520c <__malloc_unlock>
 8005158:	f104 000b 	add.w	r0, r4, #11
 800515c:	1d23      	adds	r3, r4, #4
 800515e:	f020 0007 	bic.w	r0, r0, #7
 8005162:	1ac2      	subs	r2, r0, r3
 8005164:	d0cc      	beq.n	8005100 <_malloc_r+0x20>
 8005166:	1a1b      	subs	r3, r3, r0
 8005168:	50a3      	str	r3, [r4, r2]
 800516a:	e7c9      	b.n	8005100 <_malloc_r+0x20>
 800516c:	4622      	mov	r2, r4
 800516e:	6864      	ldr	r4, [r4, #4]
 8005170:	e7cc      	b.n	800510c <_malloc_r+0x2c>
 8005172:	1cc4      	adds	r4, r0, #3
 8005174:	f024 0403 	bic.w	r4, r4, #3
 8005178:	42a0      	cmp	r0, r4
 800517a:	d0e3      	beq.n	8005144 <_malloc_r+0x64>
 800517c:	1a21      	subs	r1, r4, r0
 800517e:	4630      	mov	r0, r6
 8005180:	f000 f82e 	bl	80051e0 <_sbrk_r>
 8005184:	3001      	adds	r0, #1
 8005186:	d1dd      	bne.n	8005144 <_malloc_r+0x64>
 8005188:	e7cf      	b.n	800512a <_malloc_r+0x4a>
 800518a:	bf00      	nop
 800518c:	20000228 	.word	0x20000228
 8005190:	2000022c 	.word	0x2000022c

08005194 <_realloc_r>:
 8005194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005196:	4607      	mov	r7, r0
 8005198:	4614      	mov	r4, r2
 800519a:	460e      	mov	r6, r1
 800519c:	b921      	cbnz	r1, 80051a8 <_realloc_r+0x14>
 800519e:	4611      	mov	r1, r2
 80051a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80051a4:	f7ff bf9c 	b.w	80050e0 <_malloc_r>
 80051a8:	b922      	cbnz	r2, 80051b4 <_realloc_r+0x20>
 80051aa:	f7ff ff4d 	bl	8005048 <_free_r>
 80051ae:	4625      	mov	r5, r4
 80051b0:	4628      	mov	r0, r5
 80051b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80051b4:	f000 f830 	bl	8005218 <_malloc_usable_size_r>
 80051b8:	42a0      	cmp	r0, r4
 80051ba:	d20f      	bcs.n	80051dc <_realloc_r+0x48>
 80051bc:	4621      	mov	r1, r4
 80051be:	4638      	mov	r0, r7
 80051c0:	f7ff ff8e 	bl	80050e0 <_malloc_r>
 80051c4:	4605      	mov	r5, r0
 80051c6:	2800      	cmp	r0, #0
 80051c8:	d0f2      	beq.n	80051b0 <_realloc_r+0x1c>
 80051ca:	4631      	mov	r1, r6
 80051cc:	4622      	mov	r2, r4
 80051ce:	f7ff ff13 	bl	8004ff8 <memcpy>
 80051d2:	4631      	mov	r1, r6
 80051d4:	4638      	mov	r0, r7
 80051d6:	f7ff ff37 	bl	8005048 <_free_r>
 80051da:	e7e9      	b.n	80051b0 <_realloc_r+0x1c>
 80051dc:	4635      	mov	r5, r6
 80051de:	e7e7      	b.n	80051b0 <_realloc_r+0x1c>

080051e0 <_sbrk_r>:
 80051e0:	b538      	push	{r3, r4, r5, lr}
 80051e2:	2300      	movs	r3, #0
 80051e4:	4d05      	ldr	r5, [pc, #20]	; (80051fc <_sbrk_r+0x1c>)
 80051e6:	4604      	mov	r4, r0
 80051e8:	4608      	mov	r0, r1
 80051ea:	602b      	str	r3, [r5, #0]
 80051ec:	f7fc fdd2 	bl	8001d94 <_sbrk>
 80051f0:	1c43      	adds	r3, r0, #1
 80051f2:	d102      	bne.n	80051fa <_sbrk_r+0x1a>
 80051f4:	682b      	ldr	r3, [r5, #0]
 80051f6:	b103      	cbz	r3, 80051fa <_sbrk_r+0x1a>
 80051f8:	6023      	str	r3, [r4, #0]
 80051fa:	bd38      	pop	{r3, r4, r5, pc}
 80051fc:	20000318 	.word	0x20000318

08005200 <__malloc_lock>:
 8005200:	4801      	ldr	r0, [pc, #4]	; (8005208 <__malloc_lock+0x8>)
 8005202:	f000 b811 	b.w	8005228 <__retarget_lock_acquire_recursive>
 8005206:	bf00      	nop
 8005208:	20000320 	.word	0x20000320

0800520c <__malloc_unlock>:
 800520c:	4801      	ldr	r0, [pc, #4]	; (8005214 <__malloc_unlock+0x8>)
 800520e:	f000 b80c 	b.w	800522a <__retarget_lock_release_recursive>
 8005212:	bf00      	nop
 8005214:	20000320 	.word	0x20000320

08005218 <_malloc_usable_size_r>:
 8005218:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800521c:	1f18      	subs	r0, r3, #4
 800521e:	2b00      	cmp	r3, #0
 8005220:	bfbc      	itt	lt
 8005222:	580b      	ldrlt	r3, [r1, r0]
 8005224:	18c0      	addlt	r0, r0, r3
 8005226:	4770      	bx	lr

08005228 <__retarget_lock_acquire_recursive>:
 8005228:	4770      	bx	lr

0800522a <__retarget_lock_release_recursive>:
 800522a:	4770      	bx	lr

0800522c <_init>:
 800522c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800522e:	bf00      	nop
 8005230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005232:	bc08      	pop	{r3}
 8005234:	469e      	mov	lr, r3
 8005236:	4770      	bx	lr

08005238 <_fini>:
 8005238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800523a:	bf00      	nop
 800523c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800523e:	bc08      	pop	{r3}
 8005240:	469e      	mov	lr, r3
 8005242:	4770      	bx	lr
